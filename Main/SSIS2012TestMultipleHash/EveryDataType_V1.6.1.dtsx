<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="5/11/2010 7:50:47 PM"
  DTS:CreationName="SSIS.Package.3"
  DTS:CreatorComputerName="VISUALSTUDIO"
  DTS:CreatorName="VISUALSTUDIO\Installer"
  DTS:DTSID="{2FA444E8-7FFC-4041-B4B4-D0E323070110}"
  DTS:ExecutableType="SSIS.Package.3"
  DTS:LastModifiedProductVersion="11.0.3402.0"
  DTS:LocaleID="3081"
  DTS:ObjectName="EveryDataType_V1 6 1"
  DTS:PackageType="5"
  DTS:VersionBuild="38"
  DTS:VersionGUID="{B2555BA0-8605-4DFE-9831-648FDF636450}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">6</DTS:Property>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B2E96F26-B97E-4470-BEF4-1B8DE55B2B8A}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="vOutput">
      <DTS:VariableValue
        DTS:DataSubType="ManagedSerializable"
        DTS:DataType="13">
        <SOAP-ENV:Envelope xmlns:clr="http://schemas.microsoft.com/soap/encoding/clr/1.0" xmlns:SOAP-ENC="http://schemas.xmlsoap.org/soap/encoding/" xmlns:SOAP-ENV="http://schemas.xmlsoap.org/soap/envelope/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          SOAP-ENV:encodingStyle="http://schemas.xmlsoap.org/soap/encoding/">
          <SOAP-ENV:Body>
            <xsd:anyType
              id="ref-1"></xsd:anyType>
          </SOAP-ENV:Body>
        </SOAP-ENV:Envelope>
      </DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Data Flow Task"
      DTS:CreationName="SSIS.Pipeline.3"
      DTS:Description="Data Flow Task"
      DTS:DTSID="{69FA7345-C6D1-4065-BCDA-A4B4317859E9}"
      DTS:ExecutableType="SSIS.Pipeline.3"
      DTS:LocaleID="-1"
      DTS:ObjectName="Data Flow Task"
      DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server v10; (C) 2007 Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <pipeline
          BLOBTempStoragePath=""
          bufferTempStoragePath=""
          version="1">
          <components>
            <component
              refId="Package\Data Flow Task\Generate Every Data Type"
              componentClassID="{874F7595-FB5F-40FF-96AF-FBFF8250E3EF}"
              contactInfo="Executes a custom script.;Microsoft Corporation; Microsoft SqlServer v10; © 2007 Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="Executes a custom script."
              name="Generate Every Data Type"
              version="8">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* Microsoft SQL Server Integration Services Script Component
*  Write scripts using Microsoft Visual C# 2008.
*  ScriptMain is the entry point class of the script.*/

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;
using System.IO;

[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{

    public override void PreExecute()
    {
        base.PreExecute();
        /*
          Add your code here for preprocessing or remove if not needed
        */
    }

    public override void PostExecute()
    {
        base.PostExecute();
        /*
          Add your code here for postprocessing or remove if not needed
          You can set read/write variables here, for example:
          Variables.MyIntVar = 100
        */
    }

    public override void CreateNewOutputRows()
    {
        /*
          Add rows by calling the AddRow method on the member variable named "<Output Name>Buffer".
          For example, call MyOutputBuffer.AddRow() if your output was named "MyOutput".
        */
        GeneratedDataBuffer.AddRow();
        GeneratedDataBuffer.ColumnBoolean = true;
        byte[] bytestream = new byte[50];
        using (MemoryStream stream = new MemoryStream())
        {
            using (BinaryWriter writer = new BinaryWriter(stream))
            {
                writer.Write("This is a test string which is 50 characters long");
                bytestream = stream.ToArray();
            }
        }
        GeneratedDataBuffer.Columnbytestream = bytestream;
        GeneratedDataBuffer.Columncurrency = 123.45M;
        GeneratedDataBuffer.Columndatabasedate = DateTime.Parse("2011-08-26");
        GeneratedDataBuffer.Columndatabasetime = TimeSpan.Zero; // TimeSpan.FromHours(0.0000002);
        GeneratedDataBuffer.Columndatabasetimestamp = DateTime.Parse("2011-08-26");
        GeneratedDataBuffer.Columndatabasetimestampwithrecision = DateTime.Parse("2011-08-26");
        GeneratedDataBuffer.Columndatabasetimestampwithtimezone = DateTimeOffset.Parse("2011-08-26 +1:00");
        GeneratedDataBuffer.Columndatabasetimewithprecision = TimeSpan.Zero;
        GeneratedDataBuffer.Columndate = DateTime.Parse("2011-08-26");
        GeneratedDataBuffer.Columndecimal = 123.45M;
        GeneratedDataBuffer.Columndoubleprecisionfloat = 123.45;
        GeneratedDataBuffer.Columneightbytesignedinteger = 12345;
        GeneratedDataBuffer.Columneightbyteunsignedinteger = 12345;
        GeneratedDataBuffer.Columnfiletimestamp = DateTime.Parse("2011-08-26");
        GeneratedDataBuffer.Columnfloat = 123.45F;
        GeneratedDataBuffer.Columnfourbytesignedinteger = 12345;
        GeneratedDataBuffer.Columnfourbyteunsignedinteger = 12345;
        GeneratedDataBuffer.Columnimage.AddBlobData(bytestream);
        GeneratedDataBuffer.Columnnullfourbytesignedinteger_IsNull = true;
        GeneratedDataBuffer.Columnnumeric = 123.45M;
        GeneratedDataBuffer.Columnsinglebytesignedinteger = 123;
        GeneratedDataBuffer.Columnsinglebyteunsignedinteger = 123;
        GeneratedDataBuffer.Columnstring = "This is a test string which is 50 characters long";
        GeneratedDataBuffer.Columntextstream.AddBlobData(bytestream);
        GeneratedDataBuffer.Columntwobytesignedinteger = 12345;
        GeneratedDataBuffer.Columntwobyteunsignedinteger = 12345;
        GeneratedDataBuffer.ColumnUnicodestring = "This is a test string which is 50 characters long";
        GeneratedDataBuffer.ColumnUnicodetextstream.AddBlobData(bytestream);
        GeneratedDataBuffer.Columnuniqueidentifier = new Guid("{21EC2020-3AEA-1069-A2DD-08002B30309D}");
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class GeneratedDataBuffer: ScriptBuffer

{
    public GeneratedDataBuffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Byte[] Columnbytestream
    {
        set
        {
            this[0] = value;
        }
    }
    public bool Columnbytestream_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(0);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Boolean ColumnBoolean
    {
        set
        {
            this[1] = value;
        }
    }
    public bool ColumnBoolean_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(1);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal Columncurrency
    {
        set
        {
            this[2] = value;
        }
    }
    public bool Columncurrency_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(2);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime Columndatabasedate
    {
        set
        {
            this[3] = value;
        }
    }
    public bool Columndatabasedate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(3);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 Columnnullfourbytesignedinteger
    {
        set
        {
            this[4] = value;
        }
    }
    public bool Columnnullfourbytesignedinteger_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(4);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Guid Columnuniqueidentifier
    {
        set
        {
            this[5] = value;
        }
    }
    public bool Columnuniqueidentifier_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(5);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public BlobColumn ColumnUnicodetextstream
    {
        get
        {
            return (BlobColumn)Buffer[BufferColumnIndexes[6]];
        }
    }
    public bool ColumnUnicodetextstream_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public String ColumnUnicodestring
    {
        set
        {
            this[7] = value;
        }
    }
    public bool ColumnUnicodestring_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(7);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public UInt16 Columntwobyteunsignedinteger
    {
        set
        {
            this[8] = value;
        }
    }
    public bool Columntwobyteunsignedinteger_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(8);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int16 Columntwobytesignedinteger
    {
        set
        {
            this[9] = value;
        }
    }
    public bool Columntwobytesignedinteger_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(9);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public BlobColumn Columntextstream
    {
        get
        {
            return (BlobColumn)Buffer[BufferColumnIndexes[10]];
        }
    }
    public bool Columntextstream_IsNull
    {
        get
        {
            return IsNull(10);
        }
    }

    public String Columnstring
    {
        set
        {
            this[11] = value;
        }
    }
    public bool Columnstring_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(11);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Byte Columnsinglebyteunsignedinteger
    {
        set
        {
            this[12] = value;
        }
    }
    public bool Columnsinglebyteunsignedinteger_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(12);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public SByte Columnsinglebytesignedinteger
    {
        set
        {
            this[13] = value;
        }
    }
    public bool Columnsinglebytesignedinteger_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(13);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal Columnnumeric
    {
        set
        {
            this[14] = value;
        }
    }
    public bool Columnnumeric_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(14);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public BlobColumn Columnimage
    {
        get
        {
            return (BlobColumn)Buffer[BufferColumnIndexes[15]];
        }
    }
    public bool Columnimage_IsNull
    {
        get
        {
            return IsNull(15);
        }
    }

    public UInt32 Columnfourbyteunsignedinteger
    {
        set
        {
            this[16] = value;
        }
    }
    public bool Columnfourbyteunsignedinteger_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(16);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int32 Columnfourbytesignedinteger
    {
        set
        {
            this[17] = value;
        }
    }
    public bool Columnfourbytesignedinteger_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(17);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Single Columnfloat
    {
        set
        {
            this[18] = value;
        }
    }
    public bool Columnfloat_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(18);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime Columnfiletimestamp
    {
        set
        {
            this[19] = value;
        }
    }
    public bool Columnfiletimestamp_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(19);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public UInt64 Columneightbyteunsignedinteger
    {
        set
        {
            this[20] = value;
        }
    }
    public bool Columneightbyteunsignedinteger_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(20);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Int64 Columneightbytesignedinteger
    {
        set
        {
            this[21] = value;
        }
    }
    public bool Columneightbytesignedinteger_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(21);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Double Columndoubleprecisionfloat
    {
        set
        {
            this[22] = value;
        }
    }
    public bool Columndoubleprecisionfloat_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(22);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public Decimal Columndecimal
    {
        set
        {
            this[23] = value;
        }
    }
    public bool Columndecimal_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(23);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime Columndate
    {
        set
        {
            this[24] = value;
        }
    }
    public bool Columndate_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(24);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTimeOffset Columndatabasetimestampwithtimezone
    {
        set
        {
            this[25] = value;
        }
    }
    public bool Columndatabasetimestampwithtimezone_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(25);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime Columndatabasetimestampwithrecision
    {
        set
        {
            this[26] = value;
        }
    }
    public bool Columndatabasetimestampwithrecision_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(26);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public DateTime Columndatabasetimestamp
    {
        set
        {
            this[27] = value;
        }
    }
    public bool Columndatabasetimestamp_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(27);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public TimeSpan Columndatabasetimewithprecision
    {
        set
        {
            this[28] = value;
        }
    }
    public bool Columndatabasetimewithprecision_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(28);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    public TimeSpan Columndatabasetime
    {
        set
        {
            this[29] = value;
        }
    }
    public bool Columndatabasetime_IsNull
    {
        set
        {
            if (value)
            {
                SetNull(29);
            }
            else
            {
                throw new InvalidOperationException("IsNull property cannot be set to False. Assign a value to the column instead.");
            }
        }
    }

    new public void AddRow()
    {
        base.AddRow();
    }

    new public void SetEndOfRowset()
    {
        base.SetEndOfRowset();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public GeneratedDataBuffer GeneratedDataBuffer;

    public virtual void FinishOutputs()
    {
    }

    private void MarkOutputsFinished()
    {

        if (null != GeneratedDataBuffer)
        {
            GeneratedDataBuffer.SetEndOfRowset();
            GeneratedDataBuffer = null;
        }

    }

    public override void PrimeOutput(int Outputs, int[] OutputIDs, PipelineBuffer[] Buffers, OutputNameMap OutputMap)
    {
       for(int Idx = 0; Idx < Outputs; Idx++)
       {
            if(OutputIDs[Idx] == GetOutputID(OutputMap, @"GeneratedData"))
            {
                GeneratedDataBuffer = new GeneratedDataBuffer(Buffers[Idx], GetColumnIndexes(OutputIDs[Idx]), OutputMap);
            }
        }

        CreateNewOutputRows();

        FinishOutputs();
        MarkOutputsFinished();

    }

    public virtual void CreateNewOutputRows()
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[sc_80a4778b2f804b2cab6083d213c67593.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <NoStandardLibraries>false</NoStandardLibraries>
    <RootNamespace>SC_80a4778b2f804b2cab6083d213c67593.csproj</RootNamespace>
    <AssemblyName>SC_80a4778b2f804b2cab6083d213c67593.csproj</AssemblyName>
    <ProjectGuid>{3AF09ABD-C911-4D35-B812-95883C603326}</ProjectGuid>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent></PreBuildEvent>
    <PostBuildEvent></PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
    <Compile Include="main.cs" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to the add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="SSIS_ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
  <PropertyGroup>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
  </PropertyGroup>
  <PropertyGroup>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:ProjectId>{CB15FE1C-6497-4E26-85BF-D52AE15195C4}</msb:ProjectId>
		<msb:NoContent>Reference;Import;Folder</msb:NoContent>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>sc_80a4778b2f804b2cab6083d213c67593</msb:DisplayName>
		<msb:CodeName>sc_80a4778b2f804b2cab6083d213c67593</msb:CodeName>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:Project Include="sc_80a4778b2f804b2cab6083d213c67593.csproj"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_80a4778b2f804b2cab6083d213c67593.csproj.Properties.Settings.get_Default():SC_80a4778b2f804b2cab6083d213c67593.csproj.Properties.Sett" +
    "ings")]

namespace SC_80a4778b2f804b2cab6083d213c67593.csproj.Properties
{


    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase
    {

        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();

        public static Settings Default
        {
            get
            {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_80a4778b2f804b2cab6083d213c67593.csproj")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_80a4778b2f804b2cab6083d213c67593.csproj")]
[assembly: AssemblyCopyright("Copyright @  2011")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_80a4778b2f804b2cab6083d213c67593.csproj.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_80a4778b2f804b2cab6083d213c67593.csproj.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_80a4778b2f804b2cab6083d213c67593.csproj.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_80a4778b2f804b2cab6083d213c67593.csproj.Properties
{


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources
    {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources()
        {
        }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager
        {
            get
            {
                if ((resourceMan == null))
                {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_80a4778b2f804b2cab6083d213c67593.csproj.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture
        {
            get
            {
                return resourceCulture;
            }
            set
            {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_80a4778b2f804b2cab6083d213c67593.csproj.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDADYLj1MAAAAAAAAAAOAAAiELAQsAADIAAAAIAAAAAAAAzlAA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAHxQAABPAAAAAGAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAA1DAAAAAgAAAAMgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAYAAAAAYAAAA0AAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAOgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACw
UAAAAAAAAEgAAAACAAUAeCkAAAQnAAABAAAAAAAAAMAoAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAACoCAwQFKA0AAAoqJgIWAygOAAAKKloDLAgCFigPAAAKKnIB
AABwcxAAAAp6OgIXA4wcAAABKA4AAAoqWgMsCAIXKA8AAAoqcgEAAHBzEAAACno6AhgDjAcAAAEo
DgAACipaAywIAhgoDwAACipyAQAAcHMQAAAKejoCGQOMCAAAASgOAAAKKloDLAgCGSgPAAAKKnIB
AABwcxAAAAp6OgIaA4wdAAABKA4AAAoqWgMsCAIaKA8AAAoqcgEAAHBzEAAACno6AhsDjAkAAAEo
DgAACipaAywIAhsoDwAACipyAQAAcHMQAAAKemYCexEAAAoCexIAAAoclG8TAAAKdAoAAAEqIgIc
KBQAAAoqJgIdAygOAAAKKloDLAgCHSgPAAAKKnIBAABwcxAAAAp6OgIeA4weAAABKA4AAAoqWgMs
CAIeKA8AAAoqcgEAAHBzEAAACno+Ah8JA4wfAAABKA4AAAoqXgMsCQIfCSgPAAAKKnIBAABwcxAA
AAp6agJ7EQAACgJ7EgAACh8KlG8TAAAKdAoAAAEqJgIfCigUAAAKKioCHwsDKA4AAAoqXgMsCQIf
CygPAAAKKnIBAABwcxAAAAp6PgIfDAOMIAAAASgOAAAKKl4DLAkCHwwoDwAACipyAQAAcHMQAAAK
ej4CHw0DjCEAAAEoDgAACipeAywJAh8NKA8AAAoqcgEAAHBzEAAACno+Ah8OA4wHAAABKA4AAAoq
XgMsCQIfDigPAAAKKnIBAABwcxAAAAp6agJ7EQAACgJ7EgAACh8PlG8TAAAKdAoAAAEqJgIfDygU
AAAKKj4CHxADjCIAAAEoDgAACipeAywJAh8QKA8AAAoqcgEAAHBzEAAACno+Ah8RA4wdAAABKA4A
AAoqXgMsCQIfESgPAAAKKnIBAABwcxAAAAp6PgIfEgOMIwAAASgOAAAKKl4DLAkCHxIoDwAACipy
AQAAcHMQAAAKej4CHxMDjAgAAAEoDgAACipeAywJAh8TKA8AAAoqcgEAAHBzEAAACno+Ah8UA4wk
AAABKA4AAAoqXgMsCQIfFCgPAAAKKnIBAABwcxAAAAp6PgIfFQOMJQAAASgOAAAKKl4DLAkCHxUo
DwAACipyAQAAcHMQAAAKej4CHxYDjCYAAAEoDgAACipeAywJAh8WKA8AAAoqcgEAAHBzEAAACno+
Ah8XA4wHAAABKA4AAAoqXgMsCQIfFygPAAAKKnIBAABwcxAAAAp6PgIfGAOMCAAAASgOAAAKKl4D
LAkCHxgoDwAACipyAQAAcHMQAAAKej4CHxkDjAsAAAEoDgAACipeAywJAh8ZKA8AAAoqcgEAAHBz
EAAACno+Ah8aA4wIAAABKA4AAAoqXgMsCQIfGigPAAAKKnIBAABwcxAAAAp6PgIfGwOMCAAAASgO
AAAKKl4DLAkCHxsoDwAACipyAQAAcHMQAAAKej4CHxwDjAwAAAEoDgAACipeAywJAh8cKA8AAAoq
cgEAAHBzEAAACno+Ah8dA4wMAAABKA4AAAoqXgMsCQIfHSgPAAAKKnIBAABwcxAAAAp6HgIoFQAA
CioeAigWAAAKKh4CKBcAAAoqfgIoGAAACgICc0YAAAZ9AQAABAICc0cAAAZ9AgAABCoGKm4CewMA
AAQsEgJ7AwAABG8/AAAGAhR9AwAABCoAEzAFAEkAAAABAAARFgorLgQGlA4Ecp4AAHAoGQAACjMZ
AgUGmgIEBpQoGgAACg4EcwEAAAZ9AwAABAYXWAoGAzLOAm9FAAAGAm9CAAAGAihDAAAGKgYqOgIo
GwAACgIDfQQAAAQqOgIoGwAACgIDfQUAAAQqHgIoHQAACioeAigeAAAKKgAAABswBgBgAgAAAgAA
EQJ7AwAABG8+AAAGAnsDAAAEF28EAAAGHzKNIAAAAQpzHwAACgsHcyAAAAoMCHK6AABwbyEAAAoH
byIAAAoK3goILAYIbyMAAArc3goHLAYHbyMAAArcAnsDAAAEBm8CAAAGAnsDAAAEIDkwAAAWFhYY
cyQAAApvBgAABgJ7AwAABHIeAQBwKCUAAApvCAAABgJ7AwAABH4mAAAKbzwAAAYCewMAAARyHgEA
cCglAAAKbzgAAAYCewMAAARyHgEAcCglAAAKbzYAAAYCewMAAARyNAEAcCgnAAAKbzQAAAYCewMA
AAR+JgAACm86AAAGAnsDAAAEch4BAHAoJQAACm8yAAAGAnsDAAAEIDkwAAAWFhYYcyQAAApvMAAA
BgJ7AwAABCPNzMzMzNxeQG8uAAAGAnsDAAAEIDkwAABqbywAAAYCewMAAAQgOTAAAGpvKgAABgJ7
AwAABHIeAQBwKCUAAApvKAAABgJ7AwAABCJm5vZCbyYAAAYCewMAAAQgOTAAAG8kAAAGAnsDAAAE
IDkwAABvIgAABgJ7AwAABG8gAAAGBm8oAAAKAnsDAAAEF28LAAAGAnsDAAAEIDkwAAAWFhYYcyQA
AApvHgAABgJ7AwAABB97bxwAAAYCewMAAAQfe28aAAAGAnsDAAAEcroAAHBvGAAABgJ7AwAABG8W
AAAGBm8oAAAKAnsDAAAEIDkwAABvFAAABgJ7AwAABCA5MAAAbxIAAAYCewMAAARyugAAcG8QAAAG
AnsDAAAEbw4AAAYGbygAAAoCewMAAARyVgEAcHMpAAAKbwwAAAYqARwAAAIALAAUQAAKAAAAAAIA
JQAnTAAKAAAAAB4CKEEAAAYqHgIoGwAACioTMAIALQAAAAMAABF+BgAABC0gcqQBAHDQBwAAAigr
AAAKbywAAApzLQAACgoGgAYAAAR+BgAABCoafgcAAAQqHgKABwAABCoafggAAAQqLnNRAAAGgAgA
AAQqHgIoMAAACioAAAAAALQAAADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJj
ZVJlYWRlciwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJs
aWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291
cmNlU2V0AgAAAAAAAAAAAAAAUEFEUEFEULQAAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAA
AAAFAGwAAAAgDQAAI34AAIwNAADIFAAAI1N0cmluZ3MAAAAAVCIAACQCAAAjVVMAeCQAABAAAAAj
R1VJRAAAAIgkAAB8AgAAI0Jsb2IAAAAAAAAAAgAAAVcVogEJAQAAAPolMwAWAAABAAAAMgAAAAgA
AAAIAAAAUgAAAEAAAAAwAAAADwAAAAMAAAADAAAAPwAAAEAAAAABAAAABAAAAAEAAAAAAAoAAQAA
AAAABgADAeIABgAQAeIACgAwASkBDgBMATcBEgCFAeIABgCUAeIACgAEAikBCgA5AikBCgDGAikB
EgAIA+IACgB4BykBCgB0CCkBCgDND7wPCgD+D+kPCgDbEMEQCgAGEfQQCgAdEfQQCgA6EfQQCgBZ
EfQQCgByEfQQCgCLEfQQCgCmEfQQCgDBEfQQCgDaEfQQCgATEvMRCgAzEvMRCgCNEikBCgCnEikB
CgCvEikBCgDFEikBCgDMEikBCgDSEikBCgDXEikBCgDdEikBCgDkEikBCgDrEikBCgDyEikBCgD4
EikBBgAcE+IACgBNE0MTCgBaE0MTCgBnE0MTCgB8EykBCgC6E6cTCgDXEykBCgDcEykBCgAAFPQQ
DgAsFBYUDgBFFBYUCgBaFPMRAAAAAAEAAAAAAAEAAQABABAAOQAAAAUAAQABAAEAEABNAAAACQAB
AEEAAQAQAFsAAAANAAQARgABABAAZwAAAA0ABQBHAAEAEABxAAAADAAGAEgAAAAQAHwAhgANAAYA
TAAAARAAvACGABEACABQAAYAWwDdAAYAZwDhAAYAOQDlAAEAlQ/1AAEAlQ/1ABEA3Q//ABEAChAD
AREAThAhAVAgAAAAAIYYogETAAEAWyAAAAAAhgioAR0ABABlIAAAAACGCL0BIwAFAHwgAAAAAIYI
2QEjAAYAiyAAAAAAhgjrASMABwCiIAAAAACGCAwCKAAIALEgAAAAAIYIHwIjAAkAyCAAAAAAhghC
Ai4ACgDXIAAAAACGCFkCIwALAO4gAAAAAIYIdwI0AAwA/SAAAAAAhgibAiMADQAUIQAAAACGCMsC
OQAOACMhAAAAAIYI5gIjAA8AOiEAAAAAhggTAz8AEABUIQAAAACGCC8DRAAQAF0hAAAAAIYIUgNI
ABAAZyEAAAAAhghqAyMAEQB+IQAAAACGCIkDTQASAI0hAAAAAIYIqgMjABMApCEAAAAAhgjSA1IA
FAC0IQAAAACGCPEDIwAVAMwhAAAAAIYIFwQ/ABYA5yEAAAAAhggsBEQAFgDxIQAAAACGCEgESAAW
APwhAAAAAIYIWQQjABcAFCIAAAAAhghxBFcAGAAkIgAAAACGCJUEIwAZADwiAAAAAIYIwARcABoA
TCIAAAAAhgjiBCMAGwBkIgAAAACGCAsFKAAcAHQiAAAAAIYIHQUjAB0AjCIAAAAAhgg2BT8AHgCn
IgAAAACGCEYFRAAeALEiAAAAAIYIXQVhAB4AwSIAAAAAhgh/BSMAHwDZIgAAAACGCKgFNAAgAOki
AAAAAIYIyAUjACEAASMAAAAAhgjvBWYAIgARIwAAAACGCP8FIwAjACkjAAAAAIYIFgYuACQAOSMA
AAAAhgguBiMAJQBRIwAAAACGCE0GawAmAGEjAAAAAIYIcAYjACcAeSMAAAAAhgiaBnAAKACJIwAA
AACGCLsGIwApAKEjAAAAAIYI4wZ1ACoAsSMAAAAAhggCByMAKwDJIwAAAACGCCgHKAAsANkjAAAA
AIYIOgcjAC0A8SMAAAAAhghTBy4ALgABJAAAAACGCGIHIwAvABkkAAAAAIYIhwd6ADAAKSQAAAAA
hgivByMAMQBBJAAAAACGCN4HLgAyAFEkAAAAAIYIBggjADMAaSQAAAAAhgg1CC4ANAB5JAAAAACG
CFEIIwA1AJEkAAAAAIYIfQiAADYAoSQAAAAAhgihCCMANwC5JAAAAACGCMwIgAA4AMkkAAAAAIYI
4wgjADkA4SQAAAAAhgABCYYAOgDpJAAAAACGAAgJhgA6APEkAAAAAIYAFwlEADoA+SQAAAAAhhii
AYYAOgAZJQAAAADGAVMPhgA6ABslAAAAAIEAYQ+GADoAOCUAAAAAxgB1D+kAOgCNJQAAAADGAYEP
hgA+AI8lAAAAAIYYogH5AD4AniUAAAAAhhiiAfkAPwCtJQAAAADGAKUPhgBAALUlAAAAAMYAsA+G
AEAAwCUAAAAAxgCBD4YAQABIKAAAAACGGKIBhgBAAFAoAAAAAIMYogGGAEAAWCgAAAAAkwgaEAcB
QACRKAAAAACTCC4QDAFAAJgoAAAAAJMIOhARAUAAoCgAAAAAlgheECUBQQCzKAAAAACGGKIBhgBB
AKcoAAAAAJEYdRS5AUEAAAABAHIQAAACAHkQAAADAI0QAAABAJcQAAABAJcQAAABAJcQAAABAJcQ
AAABAJcQAAABAJcQAAABAJcQAAABAJcQAAABAJcQAAABAJcQAAABAJcQAAABAJcQAAABAJcQAAAB
AJcQAAABAJcQAAABAJcQAAABAJcQAAABAJcQAAABAJcQAAABAJcQAAABAJcQAAABAJcQAAABAJcQ
AAABAJcQAAABAJcQAAABAJcQAAABAJcQAAABAJcQAAABAJcQAAABAJcQAAABAJcQAAABAJcQAAAB
AJcQAAABAJcQAAABAJcQAAABAJcQAAABAJcQAAABAJcQAAABAJcQAAABAJcQAAABAJcQAAABAJcQ
AAABAJcQAAABAJcQAAABAJcQAAABAJcQAAABAJcQAAABAJcQAAABAJcQAAABAJcQAAABAJcQAAAB
AJcQAAABAJcQAAABAJcQAAABAJ0QAAACAKUQAAADAK8QAAAEAI0QAAABALcQAAABALcQAAABAJcQ
eQCiAUgAgQCiAUgAiQCiAUgAkQCiAUgAmQCiAUgAoQCiAUgAqQCiAUgAsQCiAUgAuQCiAUgAwQCi
AUgAyQCiATQA0QCiAYYACQCiARMACQB8Ei8BCQCFEjQA2QCiAUgACQByEDUBCQB5EDkBKQC1Ej0B
CQC+EkIBCQABCYYACQAICYYACQAXCUQAEQCiAYYAEQD/EkcBEQALE04BGQCiAYYAOQGiAYYAEQCl
D4YAEQCwD4YAQQGiAYYASQGiAV0BSQFuE0gAQQF0E2QBWQGIE4YAOQCiAWkBQQCQE3IBYQCWE3gB
WQCQE3wBUQCbEx0ASQCiAUgAYQGiAYYAaQHuE40BaQEJFJYBaQCiAZwBgQGiAakBkQGiAYYAIQCi
AYYALgAbADUCLgBjAFsCLgALAL0BLgATAAUCLgAjADUCLgArADUCLgAzAAUCLgA7ADsCLgBDADUC
LgBbAFICwwDjAFgB4wBTAVgBAQF7AVgBqQdzAbAByQdzAbABVAGCAaQBAgABAAcAPQAIAD8AAAAj
CYoAAAA0CY8AAABMCY8AAABaCY8AAABvCZMAAAB+CY8AAACUCZgAAACnCY8AAADBCZ0AAADhCY8A
AAAICqEAAAAfCo8AAAA9CqYAAABVCo8AAAB0CqsAAACICo8AAACjCq8AAADACo8AAADkCrMAAAD/
Co8AAAAhC6YAAAAyC48AAABKC6sAAABXC48AAABrC7cAAACLC48AAACyC7sAAADQC48AAAD1C5MA
AAADDI8AAAAYDKYAAAAkDI8AAAA3DL8AAABVDI8AAAB6DJ0AAACWDI8AAAC5DMMAAADFDI8AAADY
DJgAAADsDI8AAAAHDccAAAAmDY8AAABMDcsAAABpDY8AAACNDc8AAACoDY8AAADKDZMAAADYDY8A
AADtDZgAAAD4DY8AAAAKDtMAAAAuDo8AAABZDpgAAAB9Do8AAACoDpgAAADADo8AAADfDtgAAAD/
Do8AAAAmD9gAAAA5D48AAADNDxcBAABGEBwBAABqECoBAQACAAMAAQADAAUAAQAEAAcAAQAFAAkA
AQAGAAsAAQAHAA0AAQAIAA8AAQAJABEAAQAKABMAAQALABUAAQAMABcAAQANABkAAgAOABsAAgAP
AB0AAQAQAB8AAQARACEAAQASACMAAQATACUAAQAUACcAAQAVACkAAgAWACsAAgAXAC0AAQAYAC8A
AQAZADEAAQAaADMAAQAbADUAAQAcADcAAQAdADkAAQAeADsAAQAfAD0AAgAgAD8AAgAhAEEAAQAi
AEMAAQAjAEUAAQAkAEcAAQAlAEkAAQAmAEsAAQAnAE0AAQAoAE8AAQApAFEAAQAqAFMAAQArAFUA
AQAsAFcAAQAtAFkAAQAuAFsAAQAvAF0AAQAwAF8AAQAxAGEAAQAyAGMAAQAzAGUAAQA0AGcAAQA1
AGkAAQA2AGsAAQA3AG0AAQA4AG8AAQA5AHEAAQA6AHMAAQA7AHUAAQA8AHcAAQA9AHkAAgBNAHsA
AgBOAH0AAQBPAH0AAgBQAH8ABIAAAAEAAACUFCubAAAAAAAAURIAAAsAAAAAAAAAAAAAAAEAxQAA
AAAABAAAAAAAAAAAAAAACgAgAQAAAAAEAAAAAAAAAAAAAAAKACkBAAAAAAsAAAAAAAAAAAAAAAEA
ZAEAAAAAAAAAAAEAAAB8FAAAAAAAPE1vZHVsZT4AU0NfODBhNDc3OGIyZjgwNGIyY2FiNjA4M2Qy
MTNjNjc1OTMuY3Nwcm9qLmRsbABHZW5lcmF0ZWREYXRhQnVmZmVyAFVzZXJDb21wb25lbnQAQ29u
bmVjdGlvbnMAVmFyaWFibGVzAFNjcmlwdE1haW4AUmVzb3VyY2VzAFNDXzgwYTQ3NzhiMmY4MDRi
MmNhYjYwODNkMjEzYzY3NTkzLmNzcHJvai5Qcm9wZXJ0aWVzAFNldHRpbmdzAE1pY3Jvc29mdC5T
cWxTZXJ2ZXIuVHhTY3JpcHQATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUAU2NyaXB0
QnVmZmVyAFNjcmlwdENvbXBvbmVudABtc2NvcmxpYgBTeXN0ZW0AT2JqZWN0AFN5c3RlbS5Db25m
aWd1cmF0aW9uAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuUGlw
ZWxpbmVIb3N0AFBpcGVsaW5lQnVmZmVyAE91dHB1dE5hbWVNYXAALmN0b3IAc2V0X0NvbHVtbmJ5
dGVzdHJlYW0Ac2V0X0NvbHVtbmJ5dGVzdHJlYW1fSXNOdWxsAHNldF9Db2x1bW5Cb29sZWFuAHNl
dF9Db2x1bW5Cb29sZWFuX0lzTnVsbABEZWNpbWFsAHNldF9Db2x1bW5jdXJyZW5jeQBzZXRfQ29s
dW1uY3VycmVuY3lfSXNOdWxsAERhdGVUaW1lAHNldF9Db2x1bW5kYXRhYmFzZWRhdGUAc2V0X0Nv
bHVtbmRhdGFiYXNlZGF0ZV9Jc051bGwAc2V0X0NvbHVtbm51bGxmb3VyYnl0ZXNpZ25lZGludGVn
ZXIAc2V0X0NvbHVtbm51bGxmb3VyYnl0ZXNpZ25lZGludGVnZXJfSXNOdWxsAEd1aWQAc2V0X0Nv
bHVtbnVuaXF1ZWlkZW50aWZpZXIAc2V0X0NvbHVtbnVuaXF1ZWlkZW50aWZpZXJfSXNOdWxsAEJs
b2JDb2x1bW4AZ2V0X0NvbHVtblVuaWNvZGV0ZXh0c3RyZWFtAGdldF9Db2x1bW5Vbmljb2RldGV4
dHN0cmVhbV9Jc051bGwAc2V0X0NvbHVtblVuaWNvZGVzdHJpbmcAc2V0X0NvbHVtblVuaWNvZGVz
dHJpbmdfSXNOdWxsAHNldF9Db2x1bW50d29ieXRldW5zaWduZWRpbnRlZ2VyAHNldF9Db2x1bW50
d29ieXRldW5zaWduZWRpbnRlZ2VyX0lzTnVsbABzZXRfQ29sdW1udHdvYnl0ZXNpZ25lZGludGVn
ZXIAc2V0X0NvbHVtbnR3b2J5dGVzaWduZWRpbnRlZ2VyX0lzTnVsbABnZXRfQ29sdW1udGV4dHN0
cmVhbQBnZXRfQ29sdW1udGV4dHN0cmVhbV9Jc051bGwAc2V0X0NvbHVtbnN0cmluZwBzZXRfQ29s
dW1uc3RyaW5nX0lzTnVsbABzZXRfQ29sdW1uc2luZ2xlYnl0ZXVuc2lnbmVkaW50ZWdlcgBzZXRf
Q29sdW1uc2luZ2xlYnl0ZXVuc2lnbmVkaW50ZWdlcl9Jc051bGwAc2V0X0NvbHVtbnNpbmdsZWJ5
dGVzaWduZWRpbnRlZ2VyAHNldF9Db2x1bW5zaW5nbGVieXRlc2lnbmVkaW50ZWdlcl9Jc051bGwA
c2V0X0NvbHVtbm51bWVyaWMAc2V0X0NvbHVtbm51bWVyaWNfSXNOdWxsAGdldF9Db2x1bW5pbWFn
ZQBnZXRfQ29sdW1uaW1hZ2VfSXNOdWxsAHNldF9Db2x1bW5mb3VyYnl0ZXVuc2lnbmVkaW50ZWdl
cgBzZXRfQ29sdW1uZm91cmJ5dGV1bnNpZ25lZGludGVnZXJfSXNOdWxsAHNldF9Db2x1bW5mb3Vy
Ynl0ZXNpZ25lZGludGVnZXIAc2V0X0NvbHVtbmZvdXJieXRlc2lnbmVkaW50ZWdlcl9Jc051bGwA
c2V0X0NvbHVtbmZsb2F0AHNldF9Db2x1bW5mbG9hdF9Jc051bGwAc2V0X0NvbHVtbmZpbGV0aW1l
c3RhbXAAc2V0X0NvbHVtbmZpbGV0aW1lc3RhbXBfSXNOdWxsAHNldF9Db2x1bW5laWdodGJ5dGV1
bnNpZ25lZGludGVnZXIAc2V0X0NvbHVtbmVpZ2h0Ynl0ZXVuc2lnbmVkaW50ZWdlcl9Jc051bGwA
c2V0X0NvbHVtbmVpZ2h0Ynl0ZXNpZ25lZGludGVnZXIAc2V0X0NvbHVtbmVpZ2h0Ynl0ZXNpZ25l
ZGludGVnZXJfSXNOdWxsAHNldF9Db2x1bW5kb3VibGVwcmVjaXNpb25mbG9hdABzZXRfQ29sdW1u
ZG91YmxlcHJlY2lzaW9uZmxvYXRfSXNOdWxsAHNldF9Db2x1bW5kZWNpbWFsAHNldF9Db2x1bW5k
ZWNpbWFsX0lzTnVsbABzZXRfQ29sdW1uZGF0ZQBzZXRfQ29sdW1uZGF0ZV9Jc051bGwARGF0ZVRp
bWVPZmZzZXQAc2V0X0NvbHVtbmRhdGFiYXNldGltZXN0YW1wd2l0aHRpbWV6b25lAHNldF9Db2x1
bW5kYXRhYmFzZXRpbWVzdGFtcHdpdGh0aW1lem9uZV9Jc051bGwAc2V0X0NvbHVtbmRhdGFiYXNl
dGltZXN0YW1wd2l0aHJlY2lzaW9uAHNldF9Db2x1bW5kYXRhYmFzZXRpbWVzdGFtcHdpdGhyZWNp
c2lvbl9Jc051bGwAc2V0X0NvbHVtbmRhdGFiYXNldGltZXN0YW1wAHNldF9Db2x1bW5kYXRhYmFz
ZXRpbWVzdGFtcF9Jc051bGwAVGltZVNwYW4Ac2V0X0NvbHVtbmRhdGFiYXNldGltZXdpdGhwcmVj
aXNpb24Ac2V0X0NvbHVtbmRhdGFiYXNldGltZXdpdGhwcmVjaXNpb25fSXNOdWxsAHNldF9Db2x1
bW5kYXRhYmFzZXRpbWUAc2V0X0NvbHVtbmRhdGFiYXNldGltZV9Jc051bGwAQWRkUm93AFNldEVu
ZE9mUm93c2V0AEVuZE9mUm93c2V0AENvbHVtbmJ5dGVzdHJlYW0AQ29sdW1uYnl0ZXN0cmVhbV9J
c051bGwAQ29sdW1uQm9vbGVhbgBDb2x1bW5Cb29sZWFuX0lzTnVsbABDb2x1bW5jdXJyZW5jeQBD
b2x1bW5jdXJyZW5jeV9Jc051bGwAQ29sdW1uZGF0YWJhc2VkYXRlAENvbHVtbmRhdGFiYXNlZGF0
ZV9Jc051bGwAQ29sdW1ubnVsbGZvdXJieXRlc2lnbmVkaW50ZWdlcgBDb2x1bW5udWxsZm91cmJ5
dGVzaWduZWRpbnRlZ2VyX0lzTnVsbABDb2x1bW51bmlxdWVpZGVudGlmaWVyAENvbHVtbnVuaXF1
ZWlkZW50aWZpZXJfSXNOdWxsAENvbHVtblVuaWNvZGV0ZXh0c3RyZWFtAENvbHVtblVuaWNvZGV0
ZXh0c3RyZWFtX0lzTnVsbABDb2x1bW5Vbmljb2Rlc3RyaW5nAENvbHVtblVuaWNvZGVzdHJpbmdf
SXNOdWxsAENvbHVtbnR3b2J5dGV1bnNpZ25lZGludGVnZXIAQ29sdW1udHdvYnl0ZXVuc2lnbmVk
aW50ZWdlcl9Jc051bGwAQ29sdW1udHdvYnl0ZXNpZ25lZGludGVnZXIAQ29sdW1udHdvYnl0ZXNp
Z25lZGludGVnZXJfSXNOdWxsAENvbHVtbnRleHRzdHJlYW0AQ29sdW1udGV4dHN0cmVhbV9Jc051
bGwAQ29sdW1uc3RyaW5nAENvbHVtbnN0cmluZ19Jc051bGwAQ29sdW1uc2luZ2xlYnl0ZXVuc2ln
bmVkaW50ZWdlcgBDb2x1bW5zaW5nbGVieXRldW5zaWduZWRpbnRlZ2VyX0lzTnVsbABDb2x1bW5z
aW5nbGVieXRlc2lnbmVkaW50ZWdlcgBDb2x1bW5zaW5nbGVieXRlc2lnbmVkaW50ZWdlcl9Jc051
bGwAQ29sdW1ubnVtZXJpYwBDb2x1bW5udW1lcmljX0lzTnVsbABDb2x1bW5pbWFnZQBDb2x1bW5p
bWFnZV9Jc051bGwAQ29sdW1uZm91cmJ5dGV1bnNpZ25lZGludGVnZXIAQ29sdW1uZm91cmJ5dGV1
bnNpZ25lZGludGVnZXJfSXNOdWxsAENvbHVtbmZvdXJieXRlc2lnbmVkaW50ZWdlcgBDb2x1bW5m
b3VyYnl0ZXNpZ25lZGludGVnZXJfSXNOdWxsAENvbHVtbmZsb2F0AENvbHVtbmZsb2F0X0lzTnVs
bABDb2x1bW5maWxldGltZXN0YW1wAENvbHVtbmZpbGV0aW1lc3RhbXBfSXNOdWxsAENvbHVtbmVp
Z2h0Ynl0ZXVuc2lnbmVkaW50ZWdlcgBDb2x1bW5laWdodGJ5dGV1bnNpZ25lZGludGVnZXJfSXNO
dWxsAENvbHVtbmVpZ2h0Ynl0ZXNpZ25lZGludGVnZXIAQ29sdW1uZWlnaHRieXRlc2lnbmVkaW50
ZWdlcl9Jc051bGwAQ29sdW1uZG91YmxlcHJlY2lzaW9uZmxvYXQAQ29sdW1uZG91YmxlcHJlY2lz
aW9uZmxvYXRfSXNOdWxsAENvbHVtbmRlY2ltYWwAQ29sdW1uZGVjaW1hbF9Jc051bGwAQ29sdW1u
ZGF0ZQBDb2x1bW5kYXRlX0lzTnVsbABDb2x1bW5kYXRhYmFzZXRpbWVzdGFtcHdpdGh0aW1lem9u
ZQBDb2x1bW5kYXRhYmFzZXRpbWVzdGFtcHdpdGh0aW1lem9uZV9Jc051bGwAQ29sdW1uZGF0YWJh
c2V0aW1lc3RhbXB3aXRocmVjaXNpb24AQ29sdW1uZGF0YWJhc2V0aW1lc3RhbXB3aXRocmVjaXNp
b25fSXNOdWxsAENvbHVtbmRhdGFiYXNldGltZXN0YW1wAENvbHVtbmRhdGFiYXNldGltZXN0YW1w
X0lzTnVsbABDb2x1bW5kYXRhYmFzZXRpbWV3aXRocHJlY2lzaW9uAENvbHVtbmRhdGFiYXNldGlt
ZXdpdGhwcmVjaXNpb25fSXNOdWxsAENvbHVtbmRhdGFiYXNldGltZQBDb2x1bW5kYXRhYmFzZXRp
bWVfSXNOdWxsAEZpbmlzaE91dHB1dHMATWFya091dHB1dHNGaW5pc2hlZABQcmltZU91dHB1dABD
cmVhdGVOZXdPdXRwdXRSb3dzAFBhcmVudENvbXBvbmVudABQcmVFeGVjdXRlAFBvc3RFeGVjdXRl
AFN5c3RlbS5SZXNvdXJjZXMAUmVzb3VyY2VNYW5hZ2VyAHJlc291cmNlTWFuAFN5c3RlbS5HbG9i
YWxpemF0aW9uAEN1bHR1cmVJbmZvAHJlc291cmNlQ3VsdHVyZQBnZXRfUmVzb3VyY2VNYW5hZ2Vy
AGdldF9DdWx0dXJlAHNldF9DdWx0dXJlAEN1bHR1cmUAZGVmYXVsdEluc3RhbmNlAGdldF9EZWZh
dWx0AERlZmF1bHQAQnVmZmVyAEJ1ZmZlckNvbHVtbkluZGV4ZXMAT3V0cHV0TWFwAHZhbHVlAE91
dHB1dHMAT3V0cHV0SURzAEJ1ZmZlcnMAQ29tcG9uZW50AFN5c3RlbS5SdW50aW1lLlZlcnNpb25p
bmcAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAFN5c3RlbS5SZWZsZWN0aW9uAEFzc2VtYmx5VGl0
bGVBdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3Vy
YXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0
dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJp
YnV0ZQBBc3NlbWJseUN1bHR1cmVBdHRyaWJ1dGUAQXNzZW1ibHlWZXJzaW9uQXR0cmlidXRlAFN5
c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJp
YnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBTQ184MGE0Nzc4YjJmODA0YjJjYWI2
MDgzZDIxM2M2NzU5My5jc3Byb2oAc2V0X0l0ZW0AU2V0TnVsbABJbnZhbGlkT3BlcmF0aW9uRXhj
ZXB0aW9uAEJvb2xlYW4ASW50MzIAZ2V0X0l0ZW0ASXNOdWxsAFVJbnQxNgBJbnQxNgBCeXRlAFNC
eXRlAFVJbnQzMgBTaW5nbGUAVUludDY0AEludDY0AERvdWJsZQBHZXRPdXRwdXRJRABHZXRDb2x1
bW5JbmRleGVzAFNTSVNTY3JpcHRDb21wb25lbnRFbnRyeVBvaW50QXR0cmlidXRlAFN5c3RlbS5J
TwBNZW1vcnlTdHJlYW0AQmluYXJ5V3JpdGVyAFN0cmVhbQBXcml0ZQBUb0FycmF5AElEaXNwb3Nh
YmxlAERpc3Bvc2UAUGFyc2UAWmVybwBBZGRCbG9iRGF0YQBTeXN0ZW0uRGlhZ25vc3RpY3MARGVi
dWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBUeXBlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVG
cm9tSGFuZGxlAEFzc2VtYmx5AGdldF9Bc3NlbWJseQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwARWRp
dG9yQnJvd3NhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJh
dGVkQXR0cmlidXRlAC5jY3RvcgBTQ184MGE0Nzc4YjJmODA0YjJjYWI2MDgzZDIxM2M2NzU5My5j
c3Byb2ouUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAAAAAICbSQBzAE4AdQBsAGwAIABw
AHIAbwBwAGUAcgB0AHkAIABjAGEAbgBuAG8AdAAgAGIAZQAgAHMAZQB0ACAAdABvACAARgBhAGwA
cwBlAC4AIABBAHMAcwBpAGcAbgAgAGEAIAB2AGEAbAB1AGUAIAB0AG8AIAB0AGgAZQAgAGMAbwBs
AHUAbQBuACAAaQBuAHMAdABlAGEAZAAuAAAbRwBlAG4AZQByAGEAdABlAGQARABhAHQAYQAAY1QA
aABpAHMAIABpAHMAIABhACAAdABlAHMAdAAgAHMAdAByAGkAbgBnACAAdwBoAGkAYwBoACAAaQBz
ACAANQAwACAAYwBoAGEAcgBhAGMAdABlAHIAcwAgAGwAbwBuAGcAABUyADAAMQAxAC0AMAA4AC0A
MgA2AAEhMgAwADEAMQAtADAAOAAtADIANgAgACsAMQA6ADAAMAABTXsAMgAxAEUAQwAyADAAMgAw
AC0AMwBBAEUAQQAtADEAMAA2ADkALQBBADIARABEAC0AMAA4ADAAMAAyAEIAMwAwADMAMAA5AEQA
fQABf1MAQwBfADgAMABhADQANwA3ADgAYgAyAGYAOAAwADQAYgAyAGMAYQBiADYAMAA4ADMAZAAy
ADEAMwBjADYANwA1ADkAMwAuAGMAcwBwAHIAbwBqAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIA
ZQBzAG8AdQByAGMAZQBzAABwPbMqcrHzSKlaicuupbMWAAiJhF3NgIDMkQi3elxWGTTgiQkgAwES
FR0IEhkFIAEBHQUEIAEBAgUgAQERHQUgAQERIQQgAQEIBSABARElBCAAEikDIAACBCABAQ4EIAEB
BwQgAQEGBCABAQUEIAEBBAQgAQEJBCABAQwEIAEBCwQgAQEKBCABAQ0FIAEBES0FIAEBETEDIAAB
BCgAHQUDKAACBCgAER0EKAARIQMoAAgEKAARJQQoABIpAygADgMoAAcDKAAGAygABQMoAAQDKAAJ
AygADAMoAAsDKAAKAygADQQoABEtBCgAETEDBhIQAwYSFAMGEggLIAQBCB0IHRIVEhkDBhIJBSAB
ARIJAwYSNQMGEjkEAAASNQQAABI5BQABARI5BAgAEjUECAASOQMGEiAEAAASIAQIABIgBSACAQgc
AwYSFQMGHQgEIAEcCAQgAQIIBgACCBIZDgUgAR0ICAMHAQgEAQAAAAYgAQESgKkEIAAdBQggBQEI
CAgCBQUAAREhDgMGETEFAAERLQ4KBwMdBRKAoRKApQgAARKAtRGAuQUgABKAvQcgAgEOEoC9BAcB
EjUGIAEBEYDFCAEAAgAAAAAAAwAAAUcBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuMAEAVA4U
RnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFtZXdvcmsgNC8BACpTQ184MGE0Nzc4YjJmODA0
YjJjYWI2MDgzZDIxM2M2NzU5My5jc3Byb2oAAAUBAAAAABYBABFDb3B5cmlnaHQgQCAgMjAxMQAA
CAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0aW9uVGhyb3dzAQAApFAAAAAAAAAAAAAAvlAA
AAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAALBQAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3Jl
ZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAAGAAAgAAA
AAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAADwAwAAAAAA
AAAAAADwAzQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAAAQAAAAEA
K5uUFAAAAQArm5QUPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQByAEYAaQBs
AGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAEUAMAAAEA
UwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAALAMAAAEAMAAwADAAMAAwADQAYgAwAAAAgAAr
AAEARgBpAGwAZQBEAGUAcwBjAHIAaQBwAHQAaQBvAG4AAAAAAFMAQwBfADgAMABhADQANwA3ADgA
YgAyAGYAOAAwADQAYgAyAGMAYQBiADYAMAA4ADMAZAAyADEAMwBjADYANwA1ADkAMwAuAGMAcwBw
AHIAbwBqAAAAAABAAA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEALgAwAC4ANQAyADYA
OAAuADMAOQA3ADIAMwAAAAAAgAAvAAEASQBuAHQAZQByAG4AYQBsAE4AYQBtAGUAAABTAEMAXwA4
ADAAYQA0ADcANwA4AGIAMgBmADgAMAA0AGIAMgBjAGEAYgA2ADAAOAAzAGQAMgAxADMAYwA2ADcA
NQA5ADMALgBjAHMAcAByAG8AagAuAGQAbABsAAAAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQBy
AGkAZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADEAAACIAC8AAQBPAHIA
aQBnAGkAbgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8AOAAwAGEANAA3ADcAOABiADIAZgA4
ADAANABiADIAYwBhAGIANgAwADgAMwBkADIAMQAzAGMANgA3ADUAOQAzAC4AYwBzAHAAcgBvAGoA
LgBkAGwAbAAAAAAAeAArAAEAUAByAG8AZAB1AGMAdABOAGEAbQBlAAAAAABTAEMAXwA4ADAAYQA0
ADcANwA4AGIAMgBmADgAMAA0AGIAMgBjAGEAYgA2ADAAOAAzAGQAMgAxADMAYwA2ADcANQA5ADMA
LgBjAHMAcAByAG8AagAAAAAARAAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBzAGkAbwBuAAAAMQAu
ADAALgA1ADIANgA4AC4AMwA5ADcAMgAzAAAAAABIAA8AAQBBAHMAcwBlAG0AYgBsAHkAIABWAGUA
cgBzAGkAbwBuAAAAMQAuADAALgA1ADIANgA4AC4AMwA5ADcAMgAzAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAAMAAAA0DAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_80a4778b2f804b2cab6083d213c67593</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.SqlServer.Dts.Pipeline.ScriptComponentHost, Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum"
                  typeConverter="NOTBROWSABLE">9ab3699b9dcf7bf2638575fded1815b5</property>
              </properties>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData]"
                  hasSideEffects="true"
                  name="GeneratedData">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_bytestream]"
                      dataType="bytes"
                      length="50"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_bytestream]"
                      name="Column_bytestream" />
                    <outputColumn
                      refId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Boolean]"
                      dataType="bool"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Boolean]"
                      name="Column_Boolean" />
                    <outputColumn
                      refId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_currency]"
                      dataType="cy"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_currency]"
                      name="Column_currency" />
                    <outputColumn
                      refId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasedate]"
                      dataType="dbDate"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasedate]"
                      name="Column_databasedate" />
                    <outputColumn
                      refId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_nullfourbytesignedinteger]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_nullfourbytesignedinteger]"
                      name="Column_nullfourbytesignedinteger" />
                    <outputColumn
                      refId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_uniqueidentifier]"
                      dataType="guid"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_uniqueidentifier]"
                      name="Column_uniqueidentifier" />
                    <outputColumn
                      refId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodetextstream]"
                      dataType="nText"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodetextstream]"
                      name="Column_Unicodetextstream" />
                    <outputColumn
                      refId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodestring]"
                      dataType="wstr"
                      length="50"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodestring]"
                      name="Column_Unicodestring" />
                    <outputColumn
                      refId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobyteunsignedinteger]"
                      dataType="ui2"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobyteunsignedinteger]"
                      name="Column_twobyteunsignedinteger" />
                    <outputColumn
                      refId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobytesignedinteger]"
                      dataType="i2"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobytesignedinteger]"
                      name="Column_twobytesignedinteger" />
                    <outputColumn
                      refId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_textstream]"
                      codePage="1252"
                      dataType="text"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_textstream]"
                      name="Column_textstream" />
                    <outputColumn
                      refId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_string]"
                      codePage="1252"
                      dataType="str"
                      length="50"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_string]"
                      name="Column_string" />
                    <outputColumn
                      refId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebyteunsignedinteger]"
                      dataType="ui1"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebyteunsignedinteger]"
                      name="Column_singlebyteunsignedinteger" />
                    <outputColumn
                      refId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebytesignedinteger]"
                      dataType="i1"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebytesignedinteger]"
                      name="Column_singlebytesignedinteger" />
                    <outputColumn
                      refId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_numeric]"
                      dataType="numeric"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_numeric]"
                      name="Column_numeric"
                      precision="18" />
                    <outputColumn
                      refId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_image]"
                      dataType="image"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_image]"
                      name="Column_image" />
                    <outputColumn
                      refId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbyteunsignedinteger]"
                      dataType="ui4"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbyteunsignedinteger]"
                      name="Column_fourbyteunsignedinteger" />
                    <outputColumn
                      refId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbytesignedinteger]"
                      dataType="i4"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbytesignedinteger]"
                      name="Column_fourbytesignedinteger" />
                    <outputColumn
                      refId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_float]"
                      dataType="r4"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_float]"
                      name="Column_float" />
                    <outputColumn
                      refId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_filetimestamp]"
                      dataType="dateTime"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_filetimestamp]"
                      name="Column_filetimestamp" />
                    <outputColumn
                      refId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbyteunsignedinteger]"
                      dataType="ui8"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbyteunsignedinteger]"
                      name="Column_eightbyteunsignedinteger" />
                    <outputColumn
                      refId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbytesignedinteger]"
                      dataType="i8"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbytesignedinteger]"
                      name="Column_eightbytesignedinteger" />
                    <outputColumn
                      refId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_doubleprecisionfloat]"
                      dataType="r8"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_doubleprecisionfloat]"
                      name="Column_doubleprecisionfloat" />
                    <outputColumn
                      refId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_decimal]"
                      dataType="decimal"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_decimal]"
                      name="Column_decimal"
                      scale="2" />
                    <outputColumn
                      refId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_date]"
                      dataType="date"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_date]"
                      name="Column_date" />
                    <outputColumn
                      refId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithtimezone]"
                      dataType="dbTimeStampOffset"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithtimezone]"
                      name="Column_databasetimestampwithtimezone" />
                    <outputColumn
                      refId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithrecision]"
                      dataType="dbTimeStamp2"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithrecision]"
                      name="Column_databasetimestampwithrecision" />
                    <outputColumn
                      refId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestamp]"
                      dataType="dbTimeStamp"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestamp]"
                      name="Column_databasetimestamp" />
                    <outputColumn
                      refId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimewithprecision]"
                      dataType="dbTime2"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimewithprecision]"
                      name="Column_databasetimewithprecision" />
                    <outputColumn
                      refId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetime]"
                      dataType="dbTime"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetime]"
                      name="Column_databasetime" />
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Multicast"
              componentClassID="{EC139FBC-694E-490B-8EA7-35690FB0F445}"
              contactInfo="Multicast;Microsoft Corporation; Microsoft SqlServer v10; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
              description="Creates copies of a dataset."
              name="Multicast">
              <inputs>
                <input
                  refId="Package\Data Flow Task\Multicast.Inputs[Multicast Input 1]"
                  name="Multicast Input 1">
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Multicast.Outputs[Multicast Output 1]"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 1"
                  synchronousInputId="Package\Data Flow Task\Multicast.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Multicast.Outputs[Multicast Output 3]"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 3"
                  synchronousInputId="Package\Data Flow Task\Multicast.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Multicast.Outputs[Multicast Output 4]"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 4"
                  synchronousInputId="Package\Data Flow Task\Multicast.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Multicast.Outputs[Multicast Output 2]"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 2"
                  synchronousInputId="Package\Data Flow Task\Multicast.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
                <output
                  refId="Package\Data Flow Task\Multicast.Outputs[Multicast Output 5]"
                  dangling="true"
                  deleteOutputOnPathDetached="true"
                  name="Multicast Output 5"
                  synchronousInputId="Package\Data Flow Task\Multicast.Inputs[Multicast Input 1]">
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Multiple Hash Safe Auto"
              componentClassID="{874F7595-FB5F-40FF-96AF-FBFF8250E3EF}"
              description="Creates Multiple Hash's from selected input columns."
              localeId="3081"
              name="Multiple Hash Safe Auto"
              version="6">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Select the number of threads to use"
                  name="MultipleThreads"
                  typeConverter="Martin.SQLServer.Dts.MultipleHash+MultipleThread, MultipleHash2012, Version=1.0.0.0, Culture=neutral, PublicKeyToken=51c551904274ab44">1</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Martin.SQLServer.Dts.MultipleHash, MultipleHash2012, Version=1.0.0.0, Culture=neutral, PublicKeyToken=51c551904274ab44</property>
                <property
                  dataType="System.Int32"
                  description="Select True to force Nulls and Empty Strings to be detected in Hash, False for earlier version compatability."
                  name="SafeNullHandling"
                  typeConverter="Martin.SQLServer.Dts.MultipleHash+SafeNullHandling, MultipleHash2012, Version=1.0.0.0, Culture=neutral, PublicKeyToken=51c551904274ab44">1</property>
                <property
                  dataType="System.Int32"
                  description="Select True to enable hashing of Milliseconds, False for earlier version compatability."
                  name="IncludeMillsecond"
                  typeConverter="Martin.SQLServer.Dts.MultipleHash+MillisecondHandling, MultipleHash2012, Version=1.0.0.0, Culture=neutral, PublicKeyToken=51c551904274ab44">0</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Data Flow Task\Multiple Hash Safe Auto.Inputs[Input]"
                  name="Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Auto.Inputs[Input].Columns[Column_bytestream]"
                      cachedDataType="bytes"
                      cachedLength="50"
                      cachedName="Column_bytestream"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_bytestream]"
                      name="Column_bytestream" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Auto.Inputs[Input].Columns[Column_Boolean]"
                      cachedDataType="bool"
                      cachedName="Column_Boolean"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Boolean]"
                      name="Column_Boolean" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Auto.Inputs[Input].Columns[Column_currency]"
                      cachedDataType="cy"
                      cachedName="Column_currency"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_currency]"
                      name="Column_currency" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Auto.Inputs[Input].Columns[Column_databasedate]"
                      cachedDataType="dbDate"
                      cachedName="Column_databasedate"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasedate]"
                      name="Column_databasedate" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Auto.Inputs[Input].Columns[Column_nullfourbytesignedinteger]"
                      cachedDataType="i4"
                      cachedName="Column_nullfourbytesignedinteger"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_nullfourbytesignedinteger]"
                      name="Column_nullfourbytesignedinteger" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Auto.Inputs[Input].Columns[Column_uniqueidentifier]"
                      cachedDataType="guid"
                      cachedName="Column_uniqueidentifier"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_uniqueidentifier]"
                      name="Column_uniqueidentifier" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Auto.Inputs[Input].Columns[Column_Unicodetextstream]"
                      cachedDataType="nText"
                      cachedName="Column_Unicodetextstream"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodetextstream]"
                      name="Column_Unicodetextstream" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Auto.Inputs[Input].Columns[Column_Unicodestring]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Column_Unicodestring"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodestring]"
                      name="Column_Unicodestring" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Auto.Inputs[Input].Columns[Column_twobyteunsignedinteger]"
                      cachedDataType="ui2"
                      cachedName="Column_twobyteunsignedinteger"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobyteunsignedinteger]"
                      name="Column_twobyteunsignedinteger" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Auto.Inputs[Input].Columns[Column_twobytesignedinteger]"
                      cachedDataType="i2"
                      cachedName="Column_twobytesignedinteger"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobytesignedinteger]"
                      name="Column_twobytesignedinteger" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Auto.Inputs[Input].Columns[Column_textstream]"
                      cachedCodepage="1252"
                      cachedDataType="text"
                      cachedName="Column_textstream"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_textstream]"
                      name="Column_textstream" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Auto.Inputs[Input].Columns[Column_string]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Column_string"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_string]"
                      name="Column_string" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Auto.Inputs[Input].Columns[Column_singlebyteunsignedinteger]"
                      cachedDataType="ui1"
                      cachedName="Column_singlebyteunsignedinteger"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebyteunsignedinteger]"
                      name="Column_singlebyteunsignedinteger" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Auto.Inputs[Input].Columns[Column_singlebytesignedinteger]"
                      cachedDataType="i1"
                      cachedName="Column_singlebytesignedinteger"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebytesignedinteger]"
                      name="Column_singlebytesignedinteger" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Auto.Inputs[Input].Columns[Column_numeric]"
                      cachedDataType="numeric"
                      cachedName="Column_numeric"
                      cachedPrecision="18"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_numeric]"
                      name="Column_numeric" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Auto.Inputs[Input].Columns[Column_image]"
                      cachedDataType="image"
                      cachedName="Column_image"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_image]"
                      name="Column_image" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Auto.Inputs[Input].Columns[Column_fourbyteunsignedinteger]"
                      cachedDataType="ui4"
                      cachedName="Column_fourbyteunsignedinteger"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbyteunsignedinteger]"
                      name="Column_fourbyteunsignedinteger" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Auto.Inputs[Input].Columns[Column_fourbytesignedinteger]"
                      cachedDataType="i4"
                      cachedName="Column_fourbytesignedinteger"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbytesignedinteger]"
                      name="Column_fourbytesignedinteger" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Auto.Inputs[Input].Columns[Column_float]"
                      cachedDataType="r4"
                      cachedName="Column_float"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_float]"
                      name="Column_float" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Auto.Inputs[Input].Columns[Column_filetimestamp]"
                      cachedDataType="dateTime"
                      cachedName="Column_filetimestamp"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_filetimestamp]"
                      name="Column_filetimestamp" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Auto.Inputs[Input].Columns[Column_eightbyteunsignedinteger]"
                      cachedDataType="ui8"
                      cachedName="Column_eightbyteunsignedinteger"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbyteunsignedinteger]"
                      name="Column_eightbyteunsignedinteger" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Auto.Inputs[Input].Columns[Column_eightbytesignedinteger]"
                      cachedDataType="i8"
                      cachedName="Column_eightbytesignedinteger"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbytesignedinteger]"
                      name="Column_eightbytesignedinteger" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Auto.Inputs[Input].Columns[Column_decimal]"
                      cachedDataType="decimal"
                      cachedName="Column_decimal"
                      cachedScale="2"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_decimal]"
                      name="Column_decimal" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Auto.Inputs[Input].Columns[Column_date]"
                      cachedDataType="date"
                      cachedName="Column_date"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_date]"
                      name="Column_date" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Auto.Inputs[Input].Columns[Column_databasetimestampwithtimezone]"
                      cachedDataType="dbTimeStampOffset"
                      cachedName="Column_databasetimestampwithtimezone"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithtimezone]"
                      name="Column_databasetimestampwithtimezone" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Auto.Inputs[Input].Columns[Column_databasetimestampwithrecision]"
                      cachedDataType="dbTimeStamp2"
                      cachedName="Column_databasetimestampwithrecision"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithrecision]"
                      name="Column_databasetimestampwithrecision" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Auto.Inputs[Input].Columns[Column_databasetimestamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="Column_databasetimestamp"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestamp]"
                      name="Column_databasetimestamp" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Auto.Inputs[Input].Columns[Column_databasetimewithprecision]"
                      cachedDataType="dbTime2"
                      cachedName="Column_databasetimewithprecision"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimewithprecision]"
                      name="Column_databasetimewithprecision" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Auto.Inputs[Input].Columns[Column_doubleprecisionfloat]"
                      cachedDataType="r8"
                      cachedName="Column_doubleprecisionfloat"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_doubleprecisionfloat]"
                      name="Column_doubleprecisionfloat" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Auto.Inputs[Input].Columns[Column_databasetime]"
                      cachedDataType="dbTime"
                      cachedName="Column_databasetime"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetime]"
                      name="Column_databasetime" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Multiple Hash Safe Auto.Outputs[HashedOutput]"
                  description="Hashed rows are directed to this output."
                  name="HashedOutput"
                  synchronousInputId="Package\Data Flow Task\Multiple Hash Safe Auto.Inputs[Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Auto.Outputs[HashedOutput].Columns[MD5]"
                      dataType="bytes"
                      length="16"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe Auto.Outputs[HashedOutput].Columns[MD5]"
                      name="MD5">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Select the Hash Type that will be used for this output column."
                          name="HashType"
                          typeConverter="Martin.SQLServer.Dts.MultipleHash+HashTypeEnumerator, MultipleHash2008, Version=1.0.0.0, Culture=neutral, PublicKeyToken=51c551904274ab44">1</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Enter the Lineage ID's that will be used to calculate the hash for this output column."
                          name="InputColumnLineageIDs">#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_bytestream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Boolean]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_currency]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasedate]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_nullfourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_uniqueidentifier]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodestring]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodetextstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_textstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_string]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_numeric]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_image]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_float]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_filetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_decimal]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_date]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithtimezone]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithrecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimewithprecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_doubleprecisionfloat]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetime]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Auto.Outputs[HashedOutput].Columns[RipeMD160]"
                      dataType="bytes"
                      length="20"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe Auto.Outputs[HashedOutput].Columns[RipeMD160]"
                      name="RipeMD160">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Select the Hash Type that will be used for this output column."
                          name="HashType"
                          typeConverter="Martin.SQLServer.Dts.MultipleHash+HashTypeEnumerator, MultipleHash2008, Version=1.0.0.0, Culture=neutral, PublicKeyToken=51c551904274ab44">2</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Enter the Lineage ID's that will be used to calculate the hash for this output column."
                          name="InputColumnLineageIDs">#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_bytestream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Boolean]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_currency]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasedate]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_uniqueidentifier]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodetextstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_nullfourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodestring]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_textstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_numeric]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_image]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_string]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_float]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_decimal]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_date]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithtimezone]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithrecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimewithprecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_doubleprecisionfloat]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetime]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_filetimestamp]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Auto.Outputs[HashedOutput].Columns[SHA1]"
                      dataType="bytes"
                      length="20"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe Auto.Outputs[HashedOutput].Columns[SHA1]"
                      name="SHA1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Select the Hash Type that will be used for this output column."
                          name="HashType"
                          typeConverter="Martin.SQLServer.Dts.MultipleHash+HashTypeEnumerator, MultipleHash2008, Version=1.0.0.0, Culture=neutral, PublicKeyToken=51c551904274ab44">3</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Enter the Lineage ID's that will be used to calculate the hash for this output column."
                          name="InputColumnLineageIDs">#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_bytestream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_currency]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasedate]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_nullfourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Boolean]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_uniqueidentifier]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodetextstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_textstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_string]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodestring]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_numeric]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_image]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_float]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_filetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_decimal]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_date]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithtimezone]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithrecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimewithprecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetime]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_doubleprecisionfloat]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Auto.Outputs[HashedOutput].Columns[Null]"
                      dataType="bytes"
                      length="20"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe Auto.Outputs[HashedOutput].Columns[Null]"
                      name="Null">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Select the Hash Type that will be used for this output column."
                          name="HashType"
                          typeConverter="Martin.SQLServer.Dts.MultipleHash+HashTypeEnumerator, MultipleHash2008, Version=1.0.0.0, Culture=neutral, PublicKeyToken=51c551904274ab44">3</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Enter the Lineage ID's that will be used to calculate the hash for this output column."
                          name="InputColumnLineageIDs">#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_nullfourbytesignedinteger]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Auto.Outputs[HashedOutput].Columns[None]"
                      dataType="bytes"
                      length="16"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe Auto.Outputs[HashedOutput].Columns[None]"
                      name="None">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Select the Hash Type that will be used for this output column."
                          name="HashType"
                          typeConverter="Martin.SQLServer.Dts.MultipleHash+HashTypeEnumerator, MultipleHash2008, Version=1.0.0.0, Culture=neutral, PublicKeyToken=51c551904274ab44">0</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Enter the Lineage ID's that will be used to calculate the hash for this output column."
                          name="InputColumnLineageIDs">#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_bytestream]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Auto.Outputs[HashedOutput].Columns[SHA256]"
                      dataType="bytes"
                      length="32"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe Auto.Outputs[HashedOutput].Columns[SHA256]"
                      name="SHA256">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Select the Hash Type that will be used for this output column."
                          name="HashType"
                          typeConverter="Martin.SQLServer.Dts.MultipleHash+HashTypeEnumerator, MultipleHash2008, Version=1.0.0.0, Culture=neutral, PublicKeyToken=51c551904274ab44">4</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Enter the Lineage ID's that will be used to calculate the hash for this output column."
                          name="InputColumnLineageIDs">#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_bytestream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Boolean]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_currency]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasedate]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_uniqueidentifier]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodetextstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodestring]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_nullfourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_textstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_string]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_numeric]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_image]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_float]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_filetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_decimal]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithtimezone]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithrecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimewithprecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_doubleprecisionfloat]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetime]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_date]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Auto.Outputs[HashedOutput].Columns[SHA384]"
                      dataType="bytes"
                      length="48"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe Auto.Outputs[HashedOutput].Columns[SHA384]"
                      name="SHA384">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Select the Hash Type that will be used for this output column."
                          name="HashType"
                          typeConverter="Martin.SQLServer.Dts.MultipleHash+HashTypeEnumerator, MultipleHash2008, Version=1.0.0.0, Culture=neutral, PublicKeyToken=51c551904274ab44">5</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Enter the Lineage ID's that will be used to calculate the hash for this output column."
                          name="InputColumnLineageIDs">#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_bytestream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_currency]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasedate]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_nullfourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_uniqueidentifier]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Boolean]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodetextstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodestring]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_textstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_string]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_numeric]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_float]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_filetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_decimal]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_date]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithtimezone]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithrecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimewithprecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_doubleprecisionfloat]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetime]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_image]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Auto.Outputs[HashedOutput].Columns[SHA512]"
                      dataType="bytes"
                      length="64"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe Auto.Outputs[HashedOutput].Columns[SHA512]"
                      name="SHA512">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Select the Hash Type that will be used for this output column."
                          name="HashType"
                          typeConverter="Martin.SQLServer.Dts.MultipleHash+HashTypeEnumerator, MultipleHash2008, Version=1.0.0.0, Culture=neutral, PublicKeyToken=51c551904274ab44">6</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Enter the Lineage ID's that will be used to calculate the hash for this output column."
                          name="InputColumnLineageIDs">#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_bytestream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_currency]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Boolean]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasedate]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_nullfourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_uniqueidentifier]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodetextstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodestring]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_textstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_numeric]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_string]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_image]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_float]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_filetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_decimal]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_date]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithtimezone]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithrecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimewithprecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetime]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_doubleprecisionfloat]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Multiple Hash Safe Not Thread"
              componentClassID="{874F7595-FB5F-40FF-96AF-FBFF8250E3EF}"
              description="Creates Multiple Hash's from selected input columns."
              name="Multiple Hash Safe Not Thread"
              version="6">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Select the number of threads to use"
                  name="MultipleThreads"
                  typeConverter="Martin.SQLServer.Dts.MultipleHash+MultipleThread, MultipleHash2012, Version=1.0.0.0, Culture=neutral, PublicKeyToken=51c551904274ab44">0</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Martin.SQLServer.Dts.MultipleHash, MultipleHash2012, Version=1.0.0.0, Culture=neutral, PublicKeyToken=51c551904274ab44</property>
                <property
                  dataType="System.Int32"
                  description="Select True to force Nulls and Empty Strings to be detected in Hash, False for earlier version compatability."
                  name="SafeNullHandling"
                  typeConverter="Martin.SQLServer.Dts.MultipleHash+SafeNullHandling, MultipleHash2012, Version=1.0.0.0, Culture=neutral, PublicKeyToken=51c551904274ab44">1</property>
                <property
                  dataType="System.Int32"
                  description="Select True to enable hashing of Milliseconds, False for earlier version compatability."
                  name="IncludeMillsecond"
                  typeConverter="Martin.SQLServer.Dts.MultipleHash+MillisecondHandling, MultipleHash2012, Version=1.0.0.0, Culture=neutral, PublicKeyToken=51c551904274ab44">0</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Inputs[Input]"
                  name="Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Inputs[Input].Columns[Column_bytestream]"
                      cachedDataType="bytes"
                      cachedLength="50"
                      cachedName="Column_bytestream"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_bytestream]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Inputs[Input].Columns[Column_Boolean]"
                      cachedDataType="bool"
                      cachedName="Column_Boolean"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Boolean]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Inputs[Input].Columns[Column_currency]"
                      cachedDataType="cy"
                      cachedName="Column_currency"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_currency]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Inputs[Input].Columns[Column_databasedate]"
                      cachedDataType="dbDate"
                      cachedName="Column_databasedate"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasedate]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Inputs[Input].Columns[Column_nullfourbytesignedinteger]"
                      cachedDataType="i4"
                      cachedName="Column_nullfourbytesignedinteger"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_nullfourbytesignedinteger]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Inputs[Input].Columns[Column_uniqueidentifier]"
                      cachedDataType="guid"
                      cachedName="Column_uniqueidentifier"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_uniqueidentifier]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Inputs[Input].Columns[Column_Unicodetextstream]"
                      cachedDataType="nText"
                      cachedName="Column_Unicodetextstream"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodetextstream]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Inputs[Input].Columns[Column_Unicodestring]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Column_Unicodestring"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodestring]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Inputs[Input].Columns[Column_twobyteunsignedinteger]"
                      cachedDataType="ui2"
                      cachedName="Column_twobyteunsignedinteger"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobyteunsignedinteger]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Inputs[Input].Columns[Column_twobytesignedinteger]"
                      cachedDataType="i2"
                      cachedName="Column_twobytesignedinteger"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobytesignedinteger]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Inputs[Input].Columns[Column_textstream]"
                      cachedCodepage="1252"
                      cachedDataType="text"
                      cachedName="Column_textstream"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_textstream]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Inputs[Input].Columns[Column_string]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Column_string"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_string]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Inputs[Input].Columns[Column_singlebyteunsignedinteger]"
                      cachedDataType="ui1"
                      cachedName="Column_singlebyteunsignedinteger"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebyteunsignedinteger]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Inputs[Input].Columns[Column_singlebytesignedinteger]"
                      cachedDataType="i1"
                      cachedName="Column_singlebytesignedinteger"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebytesignedinteger]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Inputs[Input].Columns[Column_numeric]"
                      cachedDataType="numeric"
                      cachedName="Column_numeric"
                      cachedPrecision="18"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_numeric]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Inputs[Input].Columns[Column_image]"
                      cachedDataType="image"
                      cachedName="Column_image"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_image]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Inputs[Input].Columns[Column_fourbyteunsignedinteger]"
                      cachedDataType="ui4"
                      cachedName="Column_fourbyteunsignedinteger"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbyteunsignedinteger]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Inputs[Input].Columns[Column_fourbytesignedinteger]"
                      cachedDataType="i4"
                      cachedName="Column_fourbytesignedinteger"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbytesignedinteger]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Inputs[Input].Columns[Column_float]"
                      cachedDataType="r4"
                      cachedName="Column_float"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_float]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Inputs[Input].Columns[Column_filetimestamp]"
                      cachedDataType="dateTime"
                      cachedName="Column_filetimestamp"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_filetimestamp]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Inputs[Input].Columns[Column_eightbyteunsignedinteger]"
                      cachedDataType="ui8"
                      cachedName="Column_eightbyteunsignedinteger"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbyteunsignedinteger]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Inputs[Input].Columns[Column_eightbytesignedinteger]"
                      cachedDataType="i8"
                      cachedName="Column_eightbytesignedinteger"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbytesignedinteger]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Inputs[Input].Columns[Column_decimal]"
                      cachedDataType="decimal"
                      cachedName="Column_decimal"
                      cachedScale="2"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_decimal]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Inputs[Input].Columns[Column_date]"
                      cachedDataType="date"
                      cachedName="Column_date"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_date]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Inputs[Input].Columns[Column_databasetimestampwithtimezone]"
                      cachedDataType="dbTimeStampOffset"
                      cachedName="Column_databasetimestampwithtimezone"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithtimezone]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Inputs[Input].Columns[Column_databasetimestampwithrecision]"
                      cachedDataType="dbTimeStamp2"
                      cachedName="Column_databasetimestampwithrecision"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithrecision]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Inputs[Input].Columns[Column_databasetimestamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="Column_databasetimestamp"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestamp]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Inputs[Input].Columns[Column_databasetimewithprecision]"
                      cachedDataType="dbTime2"
                      cachedName="Column_databasetimewithprecision"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimewithprecision]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Inputs[Input].Columns[Column_doubleprecisionfloat]"
                      cachedDataType="r8"
                      cachedName="Column_doubleprecisionfloat"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_doubleprecisionfloat]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Inputs[Input].Columns[Column_databasetime]"
                      cachedDataType="dbTime"
                      cachedName="Column_databasetime"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetime]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Outputs[HashedOutput]"
                  description="Hashed rows are directed to this output."
                  name="HashedOutput"
                  synchronousInputId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Inputs[Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Outputs[HashedOutput].Columns[MD5]"
                      dataType="bytes"
                      length="16"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Outputs[HashedOutput].Columns[MD5]"
                      name="MD5">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Select the Hash Type that will be used for this output column."
                          name="HashType"
                          typeConverter="Martin.SQLServer.Dts.MultipleHash+HashTypeEnumerator, MultipleHash2008, Version=1.0.0.0, Culture=neutral, PublicKeyToken=51c551904274ab44">1</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Enter the Lineage ID's that will be used to calculate the hash for this output column."
                          name="InputColumnLineageIDs">#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_bytestream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Boolean]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_currency]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasedate]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_nullfourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_uniqueidentifier]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodestring]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodetextstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_textstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_string]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_numeric]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_image]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_float]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_filetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_decimal]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_date]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithtimezone]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithrecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimewithprecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_doubleprecisionfloat]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetime]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Outputs[HashedOutput].Columns[RipeMD160]"
                      dataType="bytes"
                      length="20"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Outputs[HashedOutput].Columns[RipeMD160]"
                      name="RipeMD160">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Select the Hash Type that will be used for this output column."
                          name="HashType"
                          typeConverter="Martin.SQLServer.Dts.MultipleHash+HashTypeEnumerator, MultipleHash2008, Version=1.0.0.0, Culture=neutral, PublicKeyToken=51c551904274ab44">2</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Enter the Lineage ID's that will be used to calculate the hash for this output column."
                          name="InputColumnLineageIDs">#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_bytestream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Boolean]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_currency]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasedate]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_uniqueidentifier]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodetextstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_nullfourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodestring]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_textstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_numeric]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_image]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_string]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_float]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_decimal]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_date]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithtimezone]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithrecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimewithprecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_doubleprecisionfloat]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetime]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_filetimestamp]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Outputs[HashedOutput].Columns[SHA1]"
                      dataType="bytes"
                      length="20"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Outputs[HashedOutput].Columns[SHA1]"
                      name="SHA1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Select the Hash Type that will be used for this output column."
                          name="HashType"
                          typeConverter="Martin.SQLServer.Dts.MultipleHash+HashTypeEnumerator, MultipleHash2008, Version=1.0.0.0, Culture=neutral, PublicKeyToken=51c551904274ab44">3</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Enter the Lineage ID's that will be used to calculate the hash for this output column."
                          name="InputColumnLineageIDs">#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_bytestream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_currency]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasedate]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_nullfourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Boolean]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_uniqueidentifier]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodetextstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_textstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_string]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodestring]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_numeric]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_image]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_float]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_filetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_decimal]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_date]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithtimezone]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithrecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimewithprecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetime]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_doubleprecisionfloat]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Outputs[HashedOutput].Columns[Null]"
                      dataType="bytes"
                      length="20"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Outputs[HashedOutput].Columns[Null]"
                      name="Null">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Select the Hash Type that will be used for this output column."
                          name="HashType"
                          typeConverter="Martin.SQLServer.Dts.MultipleHash+HashTypeEnumerator, MultipleHash2008, Version=1.0.0.0, Culture=neutral, PublicKeyToken=51c551904274ab44">3</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Enter the Lineage ID's that will be used to calculate the hash for this output column."
                          name="InputColumnLineageIDs">#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_nullfourbytesignedinteger]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Outputs[HashedOutput].Columns[None]"
                      dataType="bytes"
                      length="16"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Outputs[HashedOutput].Columns[None]"
                      name="None">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Select the Hash Type that will be used for this output column."
                          name="HashType"
                          typeConverter="Martin.SQLServer.Dts.MultipleHash+HashTypeEnumerator, MultipleHash2008, Version=1.0.0.0, Culture=neutral, PublicKeyToken=51c551904274ab44">0</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Enter the Lineage ID's that will be used to calculate the hash for this output column."
                          name="InputColumnLineageIDs">#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_bytestream]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Outputs[HashedOutput].Columns[SHA256]"
                      dataType="bytes"
                      length="32"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Outputs[HashedOutput].Columns[SHA256]"
                      name="SHA256">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Select the Hash Type that will be used for this output column."
                          name="HashType"
                          typeConverter="Martin.SQLServer.Dts.MultipleHash+HashTypeEnumerator, MultipleHash2008, Version=1.0.0.0, Culture=neutral, PublicKeyToken=51c551904274ab44">4</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Enter the Lineage ID's that will be used to calculate the hash for this output column."
                          name="InputColumnLineageIDs">#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_bytestream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Boolean]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_currency]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasedate]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_uniqueidentifier]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodetextstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodestring]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_nullfourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_textstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_string]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_numeric]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_image]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_float]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_filetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_decimal]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithtimezone]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithrecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimewithprecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_doubleprecisionfloat]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetime]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_date]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Outputs[HashedOutput].Columns[SHA384]"
                      dataType="bytes"
                      length="48"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Outputs[HashedOutput].Columns[SHA384]"
                      name="SHA384">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Select the Hash Type that will be used for this output column."
                          name="HashType"
                          typeConverter="Martin.SQLServer.Dts.MultipleHash+HashTypeEnumerator, MultipleHash2008, Version=1.0.0.0, Culture=neutral, PublicKeyToken=51c551904274ab44">5</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Enter the Lineage ID's that will be used to calculate the hash for this output column."
                          name="InputColumnLineageIDs">#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_bytestream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_currency]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasedate]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_nullfourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_uniqueidentifier]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Boolean]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodetextstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodestring]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_textstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_string]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_numeric]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_float]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_filetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_decimal]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_date]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithtimezone]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithrecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimewithprecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_doubleprecisionfloat]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetime]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_image]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Outputs[HashedOutput].Columns[SHA512]"
                      dataType="bytes"
                      length="64"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Outputs[HashedOutput].Columns[SHA512]"
                      name="SHA512">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Select the Hash Type that will be used for this output column."
                          name="HashType"
                          typeConverter="Martin.SQLServer.Dts.MultipleHash+HashTypeEnumerator, MultipleHash2008, Version=1.0.0.0, Culture=neutral, PublicKeyToken=51c551904274ab44">6</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Enter the Lineage ID's that will be used to calculate the hash for this output column."
                          name="InputColumnLineageIDs">#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_bytestream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_currency]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Boolean]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasedate]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_nullfourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_uniqueidentifier]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodetextstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodestring]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_textstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_numeric]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_string]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_image]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_float]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_filetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_decimal]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_date]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithtimezone]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithrecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimewithprecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetime]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_doubleprecisionfloat]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Multiple Hash Safe On"
              componentClassID="{874F7595-FB5F-40FF-96AF-FBFF8250E3EF}"
              description="Creates Multiple Hash's from selected input columns."
              localeId="3081"
              name="Multiple Hash Safe On"
              version="6">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Select the number of threads to use"
                  name="MultipleThreads"
                  typeConverter="Martin.SQLServer.Dts.MultipleHash+MultipleThread, MultipleHash2012, Version=1.0.0.0, Culture=neutral, PublicKeyToken=51c551904274ab44">2</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Martin.SQLServer.Dts.MultipleHash, MultipleHash2012, Version=1.0.0.0, Culture=neutral, PublicKeyToken=51c551904274ab44</property>
                <property
                  dataType="System.Int32"
                  description="Select True to force Nulls and Empty Strings to be detected in Hash, False for earlier version compatability."
                  name="SafeNullHandling"
                  typeConverter="Martin.SQLServer.Dts.MultipleHash+SafeNullHandling, MultipleHash2012, Version=1.0.0.0, Culture=neutral, PublicKeyToken=51c551904274ab44">1</property>
                <property
                  dataType="System.Int32"
                  description="Select True to enable hashing of Milliseconds, False for earlier version compatability."
                  name="IncludeMillsecond"
                  typeConverter="Martin.SQLServer.Dts.MultipleHash+MillisecondHandling, MultipleHash2012, Version=1.0.0.0, Culture=neutral, PublicKeyToken=51c551904274ab44">0</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Data Flow Task\Multiple Hash Safe On.Inputs[Input]"
                  name="Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe On.Inputs[Input].Columns[Column_bytestream]"
                      cachedDataType="bytes"
                      cachedLength="50"
                      cachedName="Column_bytestream"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_bytestream]"
                      name="Column_bytestream" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe On.Inputs[Input].Columns[Column_Boolean]"
                      cachedDataType="bool"
                      cachedName="Column_Boolean"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Boolean]"
                      name="Column_Boolean" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe On.Inputs[Input].Columns[Column_currency]"
                      cachedDataType="cy"
                      cachedName="Column_currency"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_currency]"
                      name="Column_currency" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe On.Inputs[Input].Columns[Column_databasedate]"
                      cachedDataType="dbDate"
                      cachedName="Column_databasedate"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasedate]"
                      name="Column_databasedate" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe On.Inputs[Input].Columns[Column_nullfourbytesignedinteger]"
                      cachedDataType="i4"
                      cachedName="Column_nullfourbytesignedinteger"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_nullfourbytesignedinteger]"
                      name="Column_nullfourbytesignedinteger" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe On.Inputs[Input].Columns[Column_uniqueidentifier]"
                      cachedDataType="guid"
                      cachedName="Column_uniqueidentifier"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_uniqueidentifier]"
                      name="Column_uniqueidentifier" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe On.Inputs[Input].Columns[Column_Unicodetextstream]"
                      cachedDataType="nText"
                      cachedName="Column_Unicodetextstream"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodetextstream]"
                      name="Column_Unicodetextstream" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe On.Inputs[Input].Columns[Column_Unicodestring]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Column_Unicodestring"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodestring]"
                      name="Column_Unicodestring" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe On.Inputs[Input].Columns[Column_twobyteunsignedinteger]"
                      cachedDataType="ui2"
                      cachedName="Column_twobyteunsignedinteger"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobyteunsignedinteger]"
                      name="Column_twobyteunsignedinteger" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe On.Inputs[Input].Columns[Column_twobytesignedinteger]"
                      cachedDataType="i2"
                      cachedName="Column_twobytesignedinteger"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobytesignedinteger]"
                      name="Column_twobytesignedinteger" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe On.Inputs[Input].Columns[Column_textstream]"
                      cachedCodepage="1252"
                      cachedDataType="text"
                      cachedName="Column_textstream"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_textstream]"
                      name="Column_textstream" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe On.Inputs[Input].Columns[Column_string]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Column_string"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_string]"
                      name="Column_string" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe On.Inputs[Input].Columns[Column_singlebyteunsignedinteger]"
                      cachedDataType="ui1"
                      cachedName="Column_singlebyteunsignedinteger"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebyteunsignedinteger]"
                      name="Column_singlebyteunsignedinteger" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe On.Inputs[Input].Columns[Column_singlebytesignedinteger]"
                      cachedDataType="i1"
                      cachedName="Column_singlebytesignedinteger"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebytesignedinteger]"
                      name="Column_singlebytesignedinteger" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe On.Inputs[Input].Columns[Column_numeric]"
                      cachedDataType="numeric"
                      cachedName="Column_numeric"
                      cachedPrecision="18"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_numeric]"
                      name="Column_numeric" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe On.Inputs[Input].Columns[Column_image]"
                      cachedDataType="image"
                      cachedName="Column_image"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_image]"
                      name="Column_image" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe On.Inputs[Input].Columns[Column_fourbyteunsignedinteger]"
                      cachedDataType="ui4"
                      cachedName="Column_fourbyteunsignedinteger"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbyteunsignedinteger]"
                      name="Column_fourbyteunsignedinteger" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe On.Inputs[Input].Columns[Column_fourbytesignedinteger]"
                      cachedDataType="i4"
                      cachedName="Column_fourbytesignedinteger"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbytesignedinteger]"
                      name="Column_fourbytesignedinteger" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe On.Inputs[Input].Columns[Column_float]"
                      cachedDataType="r4"
                      cachedName="Column_float"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_float]"
                      name="Column_float" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe On.Inputs[Input].Columns[Column_filetimestamp]"
                      cachedDataType="dateTime"
                      cachedName="Column_filetimestamp"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_filetimestamp]"
                      name="Column_filetimestamp" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe On.Inputs[Input].Columns[Column_eightbyteunsignedinteger]"
                      cachedDataType="ui8"
                      cachedName="Column_eightbyteunsignedinteger"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbyteunsignedinteger]"
                      name="Column_eightbyteunsignedinteger" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe On.Inputs[Input].Columns[Column_eightbytesignedinteger]"
                      cachedDataType="i8"
                      cachedName="Column_eightbytesignedinteger"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbytesignedinteger]"
                      name="Column_eightbytesignedinteger" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe On.Inputs[Input].Columns[Column_decimal]"
                      cachedDataType="decimal"
                      cachedName="Column_decimal"
                      cachedScale="2"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_decimal]"
                      name="Column_decimal" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe On.Inputs[Input].Columns[Column_date]"
                      cachedDataType="date"
                      cachedName="Column_date"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_date]"
                      name="Column_date" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe On.Inputs[Input].Columns[Column_databasetimestampwithtimezone]"
                      cachedDataType="dbTimeStampOffset"
                      cachedName="Column_databasetimestampwithtimezone"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithtimezone]"
                      name="Column_databasetimestampwithtimezone" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe On.Inputs[Input].Columns[Column_databasetimestampwithrecision]"
                      cachedDataType="dbTimeStamp2"
                      cachedName="Column_databasetimestampwithrecision"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithrecision]"
                      name="Column_databasetimestampwithrecision" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe On.Inputs[Input].Columns[Column_databasetimestamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="Column_databasetimestamp"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestamp]"
                      name="Column_databasetimestamp" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe On.Inputs[Input].Columns[Column_databasetimewithprecision]"
                      cachedDataType="dbTime2"
                      cachedName="Column_databasetimewithprecision"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimewithprecision]"
                      name="Column_databasetimewithprecision" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe On.Inputs[Input].Columns[Column_doubleprecisionfloat]"
                      cachedDataType="r8"
                      cachedName="Column_doubleprecisionfloat"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_doubleprecisionfloat]"
                      name="Column_doubleprecisionfloat" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe On.Inputs[Input].Columns[Column_databasetime]"
                      cachedDataType="dbTime"
                      cachedName="Column_databasetime"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetime]"
                      name="Column_databasetime" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Multiple Hash Safe On.Outputs[HashedOutput]"
                  description="Hashed rows are directed to this output."
                  name="HashedOutput"
                  synchronousInputId="Package\Data Flow Task\Multiple Hash Safe On.Inputs[Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe On.Outputs[HashedOutput].Columns[MD5]"
                      dataType="bytes"
                      length="16"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe On.Outputs[HashedOutput].Columns[MD5]"
                      name="MD5">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Select the Hash Type that will be used for this output column."
                          name="HashType"
                          typeConverter="Martin.SQLServer.Dts.MultipleHash+HashTypeEnumerator, MultipleHash2008, Version=1.0.0.0, Culture=neutral, PublicKeyToken=51c551904274ab44">1</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Enter the Lineage ID's that will be used to calculate the hash for this output column."
                          name="InputColumnLineageIDs">#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_bytestream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Boolean]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_currency]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasedate]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_nullfourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_uniqueidentifier]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodestring]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodetextstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_textstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_string]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_numeric]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_image]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_float]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_filetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_decimal]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_date]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithtimezone]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithrecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimewithprecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_doubleprecisionfloat]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetime]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe On.Outputs[HashedOutput].Columns[RipeMD160]"
                      dataType="bytes"
                      length="20"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe On.Outputs[HashedOutput].Columns[RipeMD160]"
                      name="RipeMD160">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Select the Hash Type that will be used for this output column."
                          name="HashType"
                          typeConverter="Martin.SQLServer.Dts.MultipleHash+HashTypeEnumerator, MultipleHash2008, Version=1.0.0.0, Culture=neutral, PublicKeyToken=51c551904274ab44">2</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Enter the Lineage ID's that will be used to calculate the hash for this output column."
                          name="InputColumnLineageIDs">#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_bytestream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Boolean]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_currency]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasedate]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_uniqueidentifier]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodetextstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_nullfourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodestring]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_textstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_numeric]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_image]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_string]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_float]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_decimal]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_date]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithtimezone]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithrecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimewithprecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_doubleprecisionfloat]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetime]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_filetimestamp]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe On.Outputs[HashedOutput].Columns[SHA1]"
                      dataType="bytes"
                      length="20"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe On.Outputs[HashedOutput].Columns[SHA1]"
                      name="SHA1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Select the Hash Type that will be used for this output column."
                          name="HashType"
                          typeConverter="Martin.SQLServer.Dts.MultipleHash+HashTypeEnumerator, MultipleHash2008, Version=1.0.0.0, Culture=neutral, PublicKeyToken=51c551904274ab44">3</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Enter the Lineage ID's that will be used to calculate the hash for this output column."
                          name="InputColumnLineageIDs">#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_bytestream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_currency]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasedate]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_nullfourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Boolean]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_uniqueidentifier]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodetextstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_textstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_string]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodestring]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_numeric]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_image]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_float]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_filetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_decimal]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_date]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithtimezone]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithrecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimewithprecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetime]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_doubleprecisionfloat]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe On.Outputs[HashedOutput].Columns[Null]"
                      dataType="bytes"
                      length="20"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe On.Outputs[HashedOutput].Columns[Null]"
                      name="Null">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Select the Hash Type that will be used for this output column."
                          name="HashType"
                          typeConverter="Martin.SQLServer.Dts.MultipleHash+HashTypeEnumerator, MultipleHash2008, Version=1.0.0.0, Culture=neutral, PublicKeyToken=51c551904274ab44">3</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Enter the Lineage ID's that will be used to calculate the hash for this output column."
                          name="InputColumnLineageIDs">#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_nullfourbytesignedinteger]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe On.Outputs[HashedOutput].Columns[None]"
                      dataType="bytes"
                      length="16"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe On.Outputs[HashedOutput].Columns[None]"
                      name="None">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Select the Hash Type that will be used for this output column."
                          name="HashType"
                          typeConverter="Martin.SQLServer.Dts.MultipleHash+HashTypeEnumerator, MultipleHash2008, Version=1.0.0.0, Culture=neutral, PublicKeyToken=51c551904274ab44">0</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Enter the Lineage ID's that will be used to calculate the hash for this output column."
                          name="InputColumnLineageIDs">#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_bytestream]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe On.Outputs[HashedOutput].Columns[SHA256]"
                      dataType="bytes"
                      length="32"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe On.Outputs[HashedOutput].Columns[SHA256]"
                      name="SHA256">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Select the Hash Type that will be used for this output column."
                          name="HashType"
                          typeConverter="Martin.SQLServer.Dts.MultipleHash+HashTypeEnumerator, MultipleHash2008, Version=1.0.0.0, Culture=neutral, PublicKeyToken=51c551904274ab44">4</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Enter the Lineage ID's that will be used to calculate the hash for this output column."
                          name="InputColumnLineageIDs">#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_bytestream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Boolean]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_currency]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasedate]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_uniqueidentifier]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodetextstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodestring]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_nullfourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_textstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_string]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_numeric]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_image]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_float]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_filetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_decimal]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithtimezone]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithrecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimewithprecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_doubleprecisionfloat]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetime]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_date]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe On.Outputs[HashedOutput].Columns[SHA384]"
                      dataType="bytes"
                      length="48"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe On.Outputs[HashedOutput].Columns[SHA384]"
                      name="SHA384">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Select the Hash Type that will be used for this output column."
                          name="HashType"
                          typeConverter="Martin.SQLServer.Dts.MultipleHash+HashTypeEnumerator, MultipleHash2008, Version=1.0.0.0, Culture=neutral, PublicKeyToken=51c551904274ab44">5</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Enter the Lineage ID's that will be used to calculate the hash for this output column."
                          name="InputColumnLineageIDs">#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_bytestream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_currency]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasedate]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_nullfourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_uniqueidentifier]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Boolean]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodetextstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodestring]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_textstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_string]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_numeric]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_float]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_filetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_decimal]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_date]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithtimezone]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithrecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimewithprecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_doubleprecisionfloat]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetime]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_image]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Multiple Hash Safe On.Outputs[HashedOutput].Columns[SHA512]"
                      dataType="bytes"
                      length="64"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe On.Outputs[HashedOutput].Columns[SHA512]"
                      name="SHA512">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Select the Hash Type that will be used for this output column."
                          name="HashType"
                          typeConverter="Martin.SQLServer.Dts.MultipleHash+HashTypeEnumerator, MultipleHash2008, Version=1.0.0.0, Culture=neutral, PublicKeyToken=51c551904274ab44">6</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Enter the Lineage ID's that will be used to calculate the hash for this output column."
                          name="InputColumnLineageIDs">#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_bytestream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_currency]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Boolean]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasedate]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_nullfourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_uniqueidentifier]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodetextstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodestring]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_textstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_numeric]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_string]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_image]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_float]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_filetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_decimal]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_date]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithtimezone]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithrecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimewithprecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetime]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_doubleprecisionfloat]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread"
              componentClassID="{874F7595-FB5F-40FF-96AF-FBFF8250E3EF}"
              description="Creates Multiple Hash's from selected input columns."
              localeId="3081"
              name="Multiple Hash Unsafe Not Thread"
              version="6">
              <properties>
                <property
                  dataType="System.Int32"
                  description="Select the number of threads to use"
                  name="MultipleThreads"
                  typeConverter="Martin.SQLServer.Dts.MultipleHash+MultipleThread, MultipleHash2012, Version=1.0.0.0, Culture=neutral, PublicKeyToken=51c551904274ab44">0</property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Martin.SQLServer.Dts.MultipleHash, MultipleHash2012, Version=1.0.0.0, Culture=neutral, PublicKeyToken=51c551904274ab44</property>
                <property
                  dataType="System.Int32"
                  description="Select True to force Nulls and Empty Strings to be detected in Hash, False for earlier version compatability."
                  name="SafeNullHandling"
                  typeConverter="Martin.SQLServer.Dts.MultipleHash+SafeNullHandling, MultipleHash2012, Version=1.0.0.0, Culture=neutral, PublicKeyToken=51c551904274ab44">0</property>
                <property
                  dataType="System.Int32"
                  description="Select True to enable hashing of Milliseconds, False for earlier version compatability."
                  name="IncludeMillsecond"
                  typeConverter="Martin.SQLServer.Dts.MultipleHash+MillisecondHandling, MultipleHash2012, Version=1.0.0.0, Culture=neutral, PublicKeyToken=51c551904274ab44">0</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Inputs[Input]"
                  name="Input">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Inputs[Input].Columns[Column_bytestream]"
                      cachedDataType="bytes"
                      cachedLength="50"
                      cachedName="Column_bytestream"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_bytestream]"
                      name="Column_bytestream" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Inputs[Input].Columns[Column_Boolean]"
                      cachedDataType="bool"
                      cachedName="Column_Boolean"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Boolean]"
                      name="Column_Boolean" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Inputs[Input].Columns[Column_currency]"
                      cachedDataType="cy"
                      cachedName="Column_currency"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_currency]"
                      name="Column_currency" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Inputs[Input].Columns[Column_databasedate]"
                      cachedDataType="dbDate"
                      cachedName="Column_databasedate"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasedate]"
                      name="Column_databasedate" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Inputs[Input].Columns[Column_nullfourbytesignedinteger]"
                      cachedDataType="i4"
                      cachedName="Column_nullfourbytesignedinteger"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_nullfourbytesignedinteger]"
                      name="Column_nullfourbytesignedinteger" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Inputs[Input].Columns[Column_uniqueidentifier]"
                      cachedDataType="guid"
                      cachedName="Column_uniqueidentifier"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_uniqueidentifier]"
                      name="Column_uniqueidentifier" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Inputs[Input].Columns[Column_Unicodetextstream]"
                      cachedDataType="nText"
                      cachedName="Column_Unicodetextstream"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodetextstream]"
                      name="Column_Unicodetextstream" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Inputs[Input].Columns[Column_Unicodestring]"
                      cachedDataType="wstr"
                      cachedLength="50"
                      cachedName="Column_Unicodestring"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodestring]"
                      name="Column_Unicodestring" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Inputs[Input].Columns[Column_twobyteunsignedinteger]"
                      cachedDataType="ui2"
                      cachedName="Column_twobyteunsignedinteger"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobyteunsignedinteger]"
                      name="Column_twobyteunsignedinteger" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Inputs[Input].Columns[Column_twobytesignedinteger]"
                      cachedDataType="i2"
                      cachedName="Column_twobytesignedinteger"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobytesignedinteger]"
                      name="Column_twobytesignedinteger" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Inputs[Input].Columns[Column_textstream]"
                      cachedCodepage="1252"
                      cachedDataType="text"
                      cachedName="Column_textstream"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_textstream]"
                      name="Column_textstream" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Inputs[Input].Columns[Column_string]"
                      cachedCodepage="1252"
                      cachedDataType="str"
                      cachedLength="50"
                      cachedName="Column_string"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_string]"
                      name="Column_string" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Inputs[Input].Columns[Column_singlebyteunsignedinteger]"
                      cachedDataType="ui1"
                      cachedName="Column_singlebyteunsignedinteger"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebyteunsignedinteger]"
                      name="Column_singlebyteunsignedinteger" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Inputs[Input].Columns[Column_singlebytesignedinteger]"
                      cachedDataType="i1"
                      cachedName="Column_singlebytesignedinteger"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebytesignedinteger]"
                      name="Column_singlebytesignedinteger" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Inputs[Input].Columns[Column_numeric]"
                      cachedDataType="numeric"
                      cachedName="Column_numeric"
                      cachedPrecision="18"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_numeric]"
                      name="Column_numeric" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Inputs[Input].Columns[Column_image]"
                      cachedDataType="image"
                      cachedName="Column_image"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_image]"
                      name="Column_image" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Inputs[Input].Columns[Column_fourbyteunsignedinteger]"
                      cachedDataType="ui4"
                      cachedName="Column_fourbyteunsignedinteger"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbyteunsignedinteger]"
                      name="Column_fourbyteunsignedinteger" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Inputs[Input].Columns[Column_fourbytesignedinteger]"
                      cachedDataType="i4"
                      cachedName="Column_fourbytesignedinteger"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbytesignedinteger]"
                      name="Column_fourbytesignedinteger" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Inputs[Input].Columns[Column_float]"
                      cachedDataType="r4"
                      cachedName="Column_float"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_float]"
                      name="Column_float" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Inputs[Input].Columns[Column_filetimestamp]"
                      cachedDataType="dateTime"
                      cachedName="Column_filetimestamp"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_filetimestamp]"
                      name="Column_filetimestamp" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Inputs[Input].Columns[Column_eightbyteunsignedinteger]"
                      cachedDataType="ui8"
                      cachedName="Column_eightbyteunsignedinteger"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbyteunsignedinteger]"
                      name="Column_eightbyteunsignedinteger" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Inputs[Input].Columns[Column_eightbytesignedinteger]"
                      cachedDataType="i8"
                      cachedName="Column_eightbytesignedinteger"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbytesignedinteger]"
                      name="Column_eightbytesignedinteger" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Inputs[Input].Columns[Column_decimal]"
                      cachedDataType="decimal"
                      cachedName="Column_decimal"
                      cachedScale="2"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_decimal]"
                      name="Column_decimal" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Inputs[Input].Columns[Column_date]"
                      cachedDataType="date"
                      cachedName="Column_date"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_date]"
                      name="Column_date" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Inputs[Input].Columns[Column_databasetimestampwithtimezone]"
                      cachedDataType="dbTimeStampOffset"
                      cachedName="Column_databasetimestampwithtimezone"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithtimezone]"
                      name="Column_databasetimestampwithtimezone" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Inputs[Input].Columns[Column_databasetimestampwithrecision]"
                      cachedDataType="dbTimeStamp2"
                      cachedName="Column_databasetimestampwithrecision"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithrecision]"
                      name="Column_databasetimestampwithrecision" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Inputs[Input].Columns[Column_databasetimestamp]"
                      cachedDataType="dbTimeStamp"
                      cachedName="Column_databasetimestamp"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestamp]"
                      name="Column_databasetimestamp" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Inputs[Input].Columns[Column_databasetimewithprecision]"
                      cachedDataType="dbTime2"
                      cachedName="Column_databasetimewithprecision"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimewithprecision]"
                      name="Column_databasetimewithprecision" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Inputs[Input].Columns[Column_doubleprecisionfloat]"
                      cachedDataType="r8"
                      cachedName="Column_doubleprecisionfloat"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_doubleprecisionfloat]"
                      name="Column_doubleprecisionfloat" />
                    <inputColumn
                      refId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Inputs[Input].Columns[Column_databasetime]"
                      cachedDataType="dbTime"
                      cachedName="Column_databasetime"
                      lineageId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetime]"
                      name="Column_databasetime" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
              <outputs>
                <output
                  refId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Outputs[HashedOutput]"
                  description="Hashed rows are directed to this output."
                  name="HashedOutput"
                  synchronousInputId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Inputs[Input]">
                  <outputColumns>
                    <outputColumn
                      refId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Outputs[HashedOutput].Columns[MD5]"
                      dataType="bytes"
                      length="16"
                      lineageId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Outputs[HashedOutput].Columns[MD5]"
                      name="MD5">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Select the Hash Type that will be used for this output column."
                          name="HashType"
                          typeConverter="Martin.SQLServer.Dts.MultipleHash+HashTypeEnumerator, MultipleHash2008, Version=1.0.0.0, Culture=neutral, PublicKeyToken=51c551904274ab44">1</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Enter the Lineage ID's that will be used to calculate the hash for this output column."
                          name="InputColumnLineageIDs">#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_bytestream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Boolean]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_currency]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasedate]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_nullfourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_uniqueidentifier]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodestring]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodetextstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_textstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_string]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_numeric]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_image]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_float]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_filetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_decimal]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_date]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithtimezone]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithrecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimewithprecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_doubleprecisionfloat]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetime]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Outputs[HashedOutput].Columns[RipeMD160]"
                      dataType="bytes"
                      length="20"
                      lineageId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Outputs[HashedOutput].Columns[RipeMD160]"
                      name="RipeMD160">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Select the Hash Type that will be used for this output column."
                          name="HashType"
                          typeConverter="Martin.SQLServer.Dts.MultipleHash+HashTypeEnumerator, MultipleHash2008, Version=1.0.0.0, Culture=neutral, PublicKeyToken=51c551904274ab44">2</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Enter the Lineage ID's that will be used to calculate the hash for this output column."
                          name="InputColumnLineageIDs">#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_bytestream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Boolean]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_currency]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasedate]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_uniqueidentifier]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodetextstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_nullfourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodestring]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_textstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_numeric]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_image]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_string]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_float]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_decimal]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_date]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithtimezone]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithrecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimewithprecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_doubleprecisionfloat]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetime]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_filetimestamp]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Outputs[HashedOutput].Columns[SHA1]"
                      dataType="bytes"
                      length="20"
                      lineageId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Outputs[HashedOutput].Columns[SHA1]"
                      name="SHA1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Select the Hash Type that will be used for this output column."
                          name="HashType"
                          typeConverter="Martin.SQLServer.Dts.MultipleHash+HashTypeEnumerator, MultipleHash2008, Version=1.0.0.0, Culture=neutral, PublicKeyToken=51c551904274ab44">3</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Enter the Lineage ID's that will be used to calculate the hash for this output column."
                          name="InputColumnLineageIDs">#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_bytestream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_currency]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasedate]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_nullfourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Boolean]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_uniqueidentifier]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodetextstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_textstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_string]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodestring]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_numeric]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_image]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_float]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_filetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_decimal]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_date]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithtimezone]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithrecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimewithprecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetime]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_doubleprecisionfloat]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Outputs[HashedOutput].Columns[Null]"
                      dataType="bytes"
                      length="20"
                      lineageId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Outputs[HashedOutput].Columns[Null]"
                      name="Null">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Select the Hash Type that will be used for this output column."
                          name="HashType"
                          typeConverter="Martin.SQLServer.Dts.MultipleHash+HashTypeEnumerator, MultipleHash2008, Version=1.0.0.0, Culture=neutral, PublicKeyToken=51c551904274ab44">3</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Enter the Lineage ID's that will be used to calculate the hash for this output column."
                          name="InputColumnLineageIDs">#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_nullfourbytesignedinteger]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Outputs[HashedOutput].Columns[None]"
                      dataType="bytes"
                      length="16"
                      lineageId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Outputs[HashedOutput].Columns[None]"
                      name="None">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Select the Hash Type that will be used for this output column."
                          name="HashType"
                          typeConverter="Martin.SQLServer.Dts.MultipleHash+HashTypeEnumerator, MultipleHash2008, Version=1.0.0.0, Culture=neutral, PublicKeyToken=51c551904274ab44">0</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Enter the Lineage ID's that will be used to calculate the hash for this output column."
                          name="InputColumnLineageIDs">#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_bytestream]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Outputs[HashedOutput].Columns[SHA256]"
                      dataType="bytes"
                      length="32"
                      lineageId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Outputs[HashedOutput].Columns[SHA256]"
                      name="SHA256">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Select the Hash Type that will be used for this output column."
                          name="HashType"
                          typeConverter="Martin.SQLServer.Dts.MultipleHash+HashTypeEnumerator, MultipleHash2008, Version=1.0.0.0, Culture=neutral, PublicKeyToken=51c551904274ab44">4</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Enter the Lineage ID's that will be used to calculate the hash for this output column."
                          name="InputColumnLineageIDs">#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_bytestream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Boolean]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_currency]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasedate]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_uniqueidentifier]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodetextstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodestring]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_nullfourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_textstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_string]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_numeric]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_image]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_float]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_filetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_decimal]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithtimezone]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithrecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimewithprecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_doubleprecisionfloat]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetime]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_date]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Outputs[HashedOutput].Columns[SHA384]"
                      dataType="bytes"
                      length="48"
                      lineageId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Outputs[HashedOutput].Columns[SHA384]"
                      name="SHA384">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Select the Hash Type that will be used for this output column."
                          name="HashType"
                          typeConverter="Martin.SQLServer.Dts.MultipleHash+HashTypeEnumerator, MultipleHash2008, Version=1.0.0.0, Culture=neutral, PublicKeyToken=51c551904274ab44">5</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Enter the Lineage ID's that will be used to calculate the hash for this output column."
                          name="InputColumnLineageIDs">#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_bytestream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_currency]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasedate]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_nullfourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_uniqueidentifier]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Boolean]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodetextstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodestring]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_textstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_string]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_numeric]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_float]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_filetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_decimal]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_date]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithtimezone]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithrecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimewithprecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_doubleprecisionfloat]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetime]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_image]}</property>
                      </properties>
                    </outputColumn>
                    <outputColumn
                      refId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Outputs[HashedOutput].Columns[SHA512]"
                      dataType="bytes"
                      length="64"
                      lineageId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Outputs[HashedOutput].Columns[SHA512]"
                      name="SHA512">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Select the Hash Type that will be used for this output column."
                          name="HashType"
                          typeConverter="Martin.SQLServer.Dts.MultipleHash+HashTypeEnumerator, MultipleHash2008, Version=1.0.0.0, Culture=neutral, PublicKeyToken=51c551904274ab44">6</property>
                        <property
                          containsID="true"
                          dataType="System.String"
                          description="Enter the Lineage ID's that will be used to calculate the hash for this output column."
                          name="InputColumnLineageIDs">#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_bytestream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_currency]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Boolean]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasedate]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_nullfourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_uniqueidentifier]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodetextstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_Unicodestring]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_textstream]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_twobytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_singlebytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_numeric]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_string]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_image]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_fourbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_float]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_filetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbyteunsignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_decimal]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_date]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithtimezone]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestampwithrecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimestamp]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_eightbytesignedinteger]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetimewithprecision]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_databasetime]},#{Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData].Columns[Column_doubleprecisionfloat]}</property>
                      </properties>
                    </outputColumn>
                  </outputColumns>
                  <externalMetadataColumns />
                </output>
              </outputs>
            </component>
            <component
              refId="Package\Data Flow Task\Script Test Safe Auto"
              componentClassID="{874F7595-FB5F-40FF-96AF-FBFF8250E3EF}"
              contactInfo="Executes a custom script.;Microsoft Corporation; Microsoft SqlServer v10; © 2007 Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="Executes a custom script."
              localeId="3081"
              name="Script Test Safe Auto"
              version="8">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* Microsoft SQL Server Integration Services Script Component
*  Write scripts using Microsoft Visual C# 2008.
*  ScriptMain is the entry point class of the script.*/

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{

    public override void PreExecute()
    {
        base.PreExecute();
        /*
          Add your code here for preprocessing or remove if not needed
        */
    }

    public override void PostExecute()
    {
        base.PostExecute();
        /*
          Add your code here for postprocessing or remove if not needed
          You can set read/write variables here, for example:
          Variables.MyIntVar = 100
        */
    }

    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        Boolean bCancel = true;
        byte[] bMD5 = { 0x8C, 0x61, 0xE5, 0x1B, 0x19, 0x30, 0xBB, 0xBA, 0x27, 0xDE, 0xBF, 0x0F, 0x71, 0x76, 0x23, 0xBE };
        byte[] bRipeMD160 = { 0xE2, 0x73, 0xFC, 0x79, 0x34, 0xA9, 0x39, 0x52, 0xB7, 0xE2, 0xEC, 0xA8, 0x21, 0xAF, 0xE2, 0xA0, 0x7C, 0x00, 0xA3, 0x89 };
        byte[] bSHA1 = { 0x03, 0x4D, 0x8C, 0x44, 0x1A, 0xB4, 0xEF, 0xC5, 0x0C, 0xCF, 0x22, 0x3A, 0x1A, 0x3E, 0x89, 0xCE, 0x29, 0x30, 0x64, 0x3D };
        byte[] bSHA256 = { 0x34, 0xF9, 0x57, 0x00, 0x43, 0x15, 0x36, 0xC3, 0x25, 0xB3, 0xA5, 0xC6, 0xC2, 0x22, 0x98, 0x4C, 0xC2, 0x1E, 0x54, 0xA2, 0xA8, 0x26, 0xD0, 0x27, 0x44, 0x3C, 0xB4, 0x76, 0x70, 0x4B, 0xEA, 0x61 };
        byte[] bSHA384 = {0xC7,0xE8,0x4C,0x6E,0x77,0xC9,0x63,0xBE,0x9C,0x9C,0xAE,0x21,0xBA,0x54,0x66,0x62,0xEC,0x81,0x21,0x38,0x33,0xD5,0xDC,0x3E,0x1A,0xF1,0xF6,0x73,0xC5,0xB6,0x35,0xF8,0x72,0x5A,0xEC,0x26,0x1D,0xF5,0x40,0xC6,0x77,0xDD,0xB9,0x4E,0x0A,0x24,0x1C,0x47 };
        byte[] bSHA512 = { 0x72, 0x3D, 0x9F, 0x0E, 0x43, 0x67, 0x4B, 0x07, 0xC9, 0x43, 0xAF, 0xDF, 0x70, 0xA2, 0x7A, 0x75, 0x80, 0x08, 0xBB, 0x97, 0xDE, 0x5F, 0x6E, 0xA9, 0xCD, 0xA9, 0x2F, 0x1B, 0x63, 0x08, 0xEF, 0xAE, 0x4A, 0x74, 0x1B, 0xE7, 0xCC, 0x8E, 0x02, 0xD7, 0x3D, 0x7B, 0xDA, 0x78, 0x7D, 0x94, 0x7E, 0x47, 0x10, 0x31, 0x8B, 0xF9, 0xCB, 0xC0, 0xFD, 0x1D, 0x28, 0xC0, 0x4C, 0x94, 0x1D, 0xF6, 0x3D, 0x62 };
        byte[] bNone = { 0x00 };



        for (int i = 0; i < bMD5.Length; i++)
        {
            if (Row.MD5[i].CompareTo(bMD5[i]) != 0)
            {
                this.ComponentMetaData.FireError(100, "Validate Multiple Hash Safe Not Thread", "MD5 Hash is BAD", string.Empty, 0, out bCancel);
                break;
            }
        }

        for (int i = 0; i < bRipeMD160.Length; i++)
        {
            if (Row.RipeMD160[i].CompareTo(bRipeMD160[i]) != 0)
            {
                this.ComponentMetaData.FireError(100, "Validate Multiple Hash Safe Not Thread", "RipeMD160 Hash is BAD", string.Empty, 0, out bCancel);
                break;
            }
        }

        for (int i = 0; i < bSHA1.Length; i++)
        {
            if (Row.SHA1[i].CompareTo(bSHA1[i]) != 0)
            {
                this.ComponentMetaData.FireError(100, "Validate Multiple Hash Safe Not Thread", "SHA1 Hash is BAD", string.Empty, 0, out bCancel);
                break;
            }
        }
        for (int i = 0; i < bSHA256.Length; i++)
        {
            if (Row.SHA256[i].CompareTo(bSHA256[i]) != 0)
            {
                this.ComponentMetaData.FireError(100, "Validate Multiple Hash Safe Not Thread", "SHA256 Hash is BAD", string.Empty, 0, out bCancel);
                break;
            }
        }
        for (int i = 0; i < bSHA384.Length; i++)
        {
            if (Row.SHA384[i].CompareTo(bSHA384[i]) != 0)
            {
                this.ComponentMetaData.FireError(100, "Validate Multiple Hash Safe Not Thread", "SHA384 Hash is BAD", string.Empty, 0, out bCancel);
                break;
            }
        }
        for (int i = 0; i < bSHA512.Length; i++)
        {
            if (Row.SHA512[i].CompareTo(bSHA512[i]) != 0)
            {
                this.ComponentMetaData.FireError(100, "Validate Multiple Hash Safe Not Thread", "SHA512 Hash is BAD", string.Empty, 0, out bCancel);
                break;
            }
        }
        for (int i = 0; i < bNone.Length; i++)
        {
            if (Row.ColumnNone[i].CompareTo(bNone[i]) != 0)
            {
                this.ComponentMetaData.FireError(100, "Validate Multiple Hash Safe Not Thread", "None Hash is BAD", string.Empty, 0, out bCancel);
                break;
            }
        }
    
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Byte[] MD5
    {
        get
        {
            return Buffer.GetBytes(BufferColumnIndexes[0]);
        }
    }
    public bool MD5_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public Byte[] RipeMD160
    {
        get
        {
            return Buffer.GetBytes(BufferColumnIndexes[1]);
        }
    }
    public bool RipeMD160_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public Byte[] SHA1
    {
        get
        {
            return Buffer.GetBytes(BufferColumnIndexes[2]);
        }
    }
    public bool SHA1_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public Byte[] ColumnNull
    {
        get
        {
            return Buffer.GetBytes(BufferColumnIndexes[3]);
        }
    }
    public bool ColumnNull_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public Byte[] ColumnNone
    {
        get
        {
            return Buffer.GetBytes(BufferColumnIndexes[4]);
        }
    }
    public bool ColumnNone_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public Byte[] SHA256
    {
        get
        {
            return Buffer.GetBytes(BufferColumnIndexes[5]);
        }
    }
    public bool SHA256_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public Byte[] SHA384
    {
        get
        {
            return Buffer.GetBytes(BufferColumnIndexes[6]);
        }
    }
    public bool SHA384_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public Byte[] SHA512
    {
        get
        {
            return Buffer.GetBytes(BufferColumnIndexes[7]);
        }
    }
    public bool SHA512_IsNull
    {
        get
        {
            return IsNull(7);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:ProjectId>{098D25F9-98D9-4F49-93F0-043F2B705EF3}</msb:ProjectId>
		<msb:NoContent>Reference;Import;Folder</msb:NoContent>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>sc_f5b5c89c93cf47cd89c7f423da791594</msb:DisplayName>
		<msb:CodeName>sc_f5b5c89c93cf47cd89c7f423da791594</msb:CodeName>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:Project Include="sc_f5b5c89c93cf47cd89c7f423da791594.csproj"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_f5b5c89c93cf47cd89c7f423da791594.csproj.Properties.Settings.get_Default():SC_f5b5c89c93cf47cd89c7f423da791594.csproj.Properties.Sett" +
    "ings")]

namespace SC_f5b5c89c93cf47cd89c7f423da791594.csproj.Properties
{


    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase
    {

        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();

        public static Settings Default
        {
            get
            {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[sc_f5b5c89c93cf47cd89c7f423da791594.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <NoStandardLibraries>false</NoStandardLibraries>
    <RootNamespace>SC_f5b5c89c93cf47cd89c7f423da791594.csproj</RootNamespace>
    <AssemblyName>SC_6111C4D7DE53486C9FD627A85080EFDA</AssemblyName>
    <ProjectGuid>{82C59351-4B4F-4F49-8A9C-279886F7CA7B}</ProjectGuid>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent></PreBuildEvent>
    <PostBuildEvent></PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
    <Compile Include="main.cs" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to the add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="SSIS_ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
  <PropertyGroup>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
  </PropertyGroup>
  <PropertyGroup>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_f5b5c89c93cf47cd89c7f423da791594.csproj")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_f5b5c89c93cf47cd89c7f423da791594.csproj")]
[assembly: AssemblyCopyright("Copyright @  2011")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_f5b5c89c93cf47cd89c7f423da791594.csproj.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_f5b5c89c93cf47cd89c7f423da791594.csproj.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_f5b5c89c93cf47cd89c7f423da791594.csproj.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_f5b5c89c93cf47cd89c7f423da791594.csproj.Properties
{


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources
    {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources()
        {
        }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager
        {
            get
            {
                if ((resourceMan == null))
                {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_f5b5c89c93cf47cd89c7f423da791594.csproj.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture
        {
            get
            {
                return resourceCulture;
            }
            set
            {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_6111C4D7DE53486C9FD627A85080EFDA.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDADcLj1MAAAAAAAAAAOAAAiELAQsAAB4AAAAIAAAAAAAADj0A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAALQ8AABXAAAAAEAAACgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAFB0AAAAgAAAAHgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAACgEAAAAQAAAAAYAAAAgAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAJgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADw
PAAAAAAAAEgAAAACAAUAiCYAACwWAAABAAAAAAAAANAlAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAACoCAwQFKA0AAAoqUgJ7DgAACgJ7DwAAChaUbxAAAAoqIgIW
KBEAAAoqUgJ7DgAACgJ7DwAACheUbxAAAAoqIgIXKBEAAAoqUgJ7DgAACgJ7DwAAChiUbxAAAAoq
IgIYKBEAAAoqUgJ7DgAACgJ7DwAAChmUbxAAAAoqIgIZKBEAAAoqUgJ7DgAACgJ7DwAAChqUbxAA
AAoqIgIaKBEAAAoqUgJ7DgAACgJ7DwAAChuUbxAAAAoqIgIbKBEAAAoqUgJ7DgAACgJ7DwAAChyU
bxAAAAoqIgIcKBEAAAoqUgJ7DgAACgJ7DwAACh2UbxAAAAoqIgIdKBEAAAoqHgIoEgAACioeAigT
AAAKKn4CKBQAAAoCAnMYAAAGfQEAAAQCAnMZAAAGfQIAAAQqkgRyAQAAcBpvFQAACiwVAgUCAygW
AAAKDgRzAQAABm8WAAAGKkorBwIDbxcAAAYDbxIAAAYt8SoGKjoCKBcAAAoCA30DAAAEKjoCKBcA
AAoCA30EAAAEKh4CKBkAAAoqHgIoGgAACioAAAAAAIxh5RsZMLu6J96/D3F2I77ic/x5NKk5Urfi
7Kghr+KgfACjiQAAAAADTYxEGrTvxQzPIjoaPonOKTBkPQAAAAA0+VcAQxU2wyWzpcbCIphMwh5U
oqgm0CdEPLR2cEvqYcfoTG53yWO+nJyuIbpUZmLsgSE4M9XcPhrx9nPFtjX4clrsJh31QMZ33blO
CiQcR3I9nw5DZ0sHyUOv33CienWACLuX3l9uqc2pLxtjCO+uSnQb58yOAtc9e9p4fZR+RxAxi/nL
wP0dKMBMlB32PWITMAcAmAIAAAEAABEXCh8QjRgAAAEl0AgAAAQoHAAACgsfFI0YAAABJdAJAAAE
KBwAAAoMHxSNGAAAASXQCgAABCgcAAAKDR8gjRgAAAEl0AsAAAQoHAAAChMEHzCNGAAAASXQDAAA
BCgcAAAKEwUfQI0YAAABJdANAAAEKBwAAAoTBheNGAAAARMPEQ8TBxYTCCs/A28CAAAGEQiPGAAA
AQcRCJEoHQAACiwhAigeAAAKH2RyEQAAcHJfAABwfh8AAAoWEgBvIAAACisNEQgXWBMIEQgHjmky
uhYTCSs/A28EAAAGEQmPGAAAAQgRCZEoHQAACiwhAigeAAAKH2RyEQAAcHJ/AABwfh8AAAoWEgBv
IAAACisNEQkXWBMJEQkIjmkyuhYTCis/A28GAAAGEQqPGAAAAQkRCpEoHQAACiwhAigeAAAKH2Ry
EQAAcHKrAABwfh8AAAoWEgBvIAAACisNEQoXWBMKEQoJjmkyuhYTCytAA28MAAAGEQuPGAAAAREE
EQuRKB0AAAosIQIoHgAACh9kchEAAHByzQAAcH4fAAAKFhIAbyAAAAorDhELF1gTCxELEQSOaTK4
FhMMK0ADbw4AAAYRDI8YAAABEQURDJEoHQAACiwhAigeAAAKH2RyEQAAcHLzAABwfh8AAAoWEgBv
IAAACisOEQwXWBMMEQwRBY5pMrgWEw0rQANvEAAABhENjxgAAAERBhENkSgdAAAKLCECKB4AAAof
ZHIRAABwchkBAHB+HwAAChYSAG8gAAAKKw4RDRdYEw0RDREGjmkyuBYTDis/A28KAAAGEQ6PGAAA
AREHEQ6RKB0AAAosIAIoHgAACh9kchEAAHByPwEAcH4fAAAKFhIAbyAAAAoqEQ4XWBMOEQ4RB45p
MrkqHgIoFAAABioeAigXAAAKKhMwAgAtAAAAAgAAEX4FAAAELSByYQEAcNAHAAACKCIAAApvIwAA
CnMkAAAKCgaABQAABH4FAAAEKhp+BgAABCoeAoAGAAAEKhp+BwAABCoucyMAAAaABwAABCoeAigm
AAAKKgC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1z
Y29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49
Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAA
AAAAAAAAAFBBRFBBRFC0AAAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAwAcA
ACN+AAAsCAAAHAoAACNTdHJpbmdzAAAAAEgSAADkAQAAI1VTACwUAAAQAAAAI0dVSUQAAAA8FAAA
8AEAACNCbG9iAAAAAAAAAAIAAAFXlaIhCQMAAAD6JTMAFgAAAQAAACQAAAAOAAAADQAAACQAAAAN
AAAAJgAAABAAAAAFAAAAAgAAAAMAAAATAAAAFAAAAAYAAAABAAAABQAAAAEAAAAFAAAAAAAKAAEA
AAAAAAYA9QDUAAYAAgHUAAoAIgEbAQ4APgEpARIAdwHUAAYAhgHUAAoAxgO1AwoA9wPiAwoA0AS2
BAoA+wTpBAoAEgXpBAoALwXpBAoATgXpBAoAZwXpBAoAgAXpBAoAmwXpBAoAtgXpBAoAzwXpBAoA
CAboBQoAKAboBQoAegYbAQoAgQYbAQYAqgbUAAoA0QYbAQoAGwfoBQoANgcbAQoAcQfoBQoAgAcb
AQoAhgcbARYA2AivCAoAKgkXCQoARwkbAQoATAkbAQoAcAnpBA4AnAmGCQ4AtQmGCQAAAAABAAAA
AAABAAEAAQAQADIAAAAFAAEAAQABABAAPwAAAAkAAQAUAAEAEABNAAAADQADABgAAQAQAFkAAAAN
AAQAGQABABAAYwAAAAwABQAaAAAAEABuAHgADQAFAB4AAAEQAK4AeAARAAcAIgAAAAAA1gYAAA0A
CAAlABMBAABABwAAaQAOACUAEwEAAKkHAABpAA4AJQATAQAA7gcAAGkADgAlABMBAAAfCAAAaQAO
ACUAEwEAAFAIAABpAA4AJQAGAE0ALwAGAFkAMwABAI4DSwABAI4DSwARANYDVQARAAMEWQARAEcE
dwATAV0HtAATAcYHwAATAdoHwAATAQsIxAATATwIyAATAW0IzABQIAAAAACGGJQBEwABAFsgAAAA
AIYImgEdAAQAcCAAAAAAhgiiASIABAB5IAAAAACGCLEBHQAEAI4gAAAAAIYIvwEiAAQAlyAAAAAA
hgjUAR0ABACsIAAAAACGCN0BIgAEALUgAAAAAIYI7QEdAAQAyiAAAAAAhgj8ASIABADTIAAAAACG
CBICHQAEAOggAAAAAIYIIQIiAAQA8SAAAAAAhgg3Ah0ABAAGIQAAAACGCEICIgAEAA8hAAAAAIYI
VAIdAAQAJCEAAAAAhghfAiIABAAtIQAAAACGCHECHQAEAEIhAAAAAIYIfAIiAAQASyEAAAAAhgCO
AiIABABTIQAAAACGAJYCIgAEAFshAAAAAIYYlAE3AAQAeyEAAAAAxgBWAzsABACgIQAAAADGAWMD
RQAIALMhAAAAAMYBdwNFAAkAtSEAAAAAhhiUAU8ACgDEIQAAAACGGJQBTwALANMhAAAAAMYAngM3
AAwA2yEAAAAAxgCpAzcADAC4IgAAAADGAHcDRQAMAFwlAAAAAIYYlAE3AA0AZCUAAAAAgxiUATcA
DQBsJQAAAACTCBMEXQANAKUlAAAAAJMIJwRiAA0ArCUAAAAAkwgzBGcADQC0JQAAAACWCFcEewAO
AMclAAAAAIYYlAE3AA4AuyUAAAAAkRjKCS8BDgAAAAEAawQAAAIAcgQAAAMAhgQAAAEAkAQAAAIA
mAQAAAMAawQAAAQAhgQAAAEAawQAAAEAogQAAAEApgQAAAEApgQAAAEAogQAAAEAsARJAJQBhQBR
AJQBhQBZAJQBhQBhAJQBhQBpAJQBhQBxAJQBhQB5AJQBhQCBAJQBhQCJAJQBhQCRAJQBhQCZAJQB
igChAJQBNwAJAJQBEwAJAGsEjwAJAHIEkwApAGoGlwAJAHMGnQAJAI4CIgAJAJYCIgARAJQBNwCp
AJIGogARAJkGqQAZAJQBNwC5AJQBNwARAJ4DNwARAKkDNwDJAJQBNwDZAJkHuADBAIEI0AARAPEI
1QCpAAcJ2gDxAA0J3QD5AJQBNwABAV4JAwEBAXkJDAE5AJQBEgEZAZQBHwEhAJQBNwAuABMAewEu
ABsAqwEuAGMA0QEuACMAqwEuAAsAMwEuACsAqwEuADMAewEuADsAsQEuAEMAqwEuAFsAyAHDAMMA
rwDhANsArwDjAAsBrwAjAdsArwApAisBJgFJAisBJgEBABAAAAAKAAEAFAAAAAsAAQAgAAAADAAB
ADAAAAANAAEAQAAAAA4A6AAaAQIAAQAHABEACAATAAAAogImAAAApgIrAAAAsQImAAAAuwIrAAAA
zAImAAAA0QIrAAAA3QImAAAA6AIrAAAA+gImAAAABQMrAAAAFwMmAAAAHgMrAAAALAMmAAAAMwMr
AAAAQQMmAAAASAMrAAAAxgNtAAAAPwRyAAAAYwSAAAIAAgADAAIAAwAFAAIABAAHAAIABQAJAAIA
BgALAAIABwANAAIACAAPAAIACQARAAIACgATAAIACwAVAAIADAAXAAIADQAZAAIADgAbAAIADwAd
AAIAEAAfAAIAEQAhAAIAHwAjAAIAIAAlAAEAIQAlAAIAIgAnAOghAAAIAPghAAAJABAiAAAKACgi
AAALAEgiAAAMAHgiAAANAASAAAABAAAAlBQrmwAAAAAAAEYGAAALAAAAAAAAAAAAAAABALcAAAAA
AAQAAAAAAAAAAAAAAAoAEgEAAAAABAAAAAAAAAAAAAAACgAbAQAAAAALAAAAAAAAAAAAAAABAFYB
AAAAAAsAAAAAAAAAAAAAAAEAiwgAAAAAAAAAAAEAAADRCQAACgAJAAsACQAMAAkADQAJAA4ACQAA
AAA8TW9kdWxlPgBTQ182MTExQzREN0RFNTM0ODZDOUZENjI3QTg1MDgwRUZEQS5kbGwASW5wdXQw
QnVmZmVyAFVzZXJDb21wb25lbnQAQ29ubmVjdGlvbnMAVmFyaWFibGVzAFNjcmlwdE1haW4AUmVz
b3VyY2VzAFNDX2Y1YjVjODljOTNjZjQ3Y2Q4OWM3ZjQyM2RhNzkxNTk0LmNzcHJvai5Qcm9wZXJ0
aWVzAFNldHRpbmdzAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuVHhTY3JpcHQATWljcm9zb2Z0LlNxbFNl
cnZlci5EdHMuUGlwZWxpbmUAU2NyaXB0QnVmZmVyAFNjcmlwdENvbXBvbmVudABtc2NvcmxpYgBT
eXN0ZW0AT2JqZWN0AFN5c3RlbS5Db25maWd1cmF0aW9uAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNl
AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AFBpcGVsaW5lQnVmZmVyAE91dHB1dE5h
bWVNYXAALmN0b3IAZ2V0X01ENQBnZXRfTUQ1X0lzTnVsbABnZXRfUmlwZU1EMTYwAGdldF9SaXBl
TUQxNjBfSXNOdWxsAGdldF9TSEExAGdldF9TSEExX0lzTnVsbABnZXRfQ29sdW1uTnVsbABnZXRf
Q29sdW1uTnVsbF9Jc051bGwAZ2V0X0NvbHVtbk5vbmUAZ2V0X0NvbHVtbk5vbmVfSXNOdWxsAGdl
dF9TSEEyNTYAZ2V0X1NIQTI1Nl9Jc051bGwAZ2V0X1NIQTM4NABnZXRfU0hBMzg0X0lzTnVsbABn
ZXRfU0hBNTEyAGdldF9TSEE1MTJfSXNOdWxsAE5leHRSb3cARW5kT2ZSb3dzZXQATUQ1AE1ENV9J
c051bGwAUmlwZU1EMTYwAFJpcGVNRDE2MF9Jc051bGwAU0hBMQBTSEExX0lzTnVsbABDb2x1bW5O
dWxsAENvbHVtbk51bGxfSXNOdWxsAENvbHVtbk5vbmUAQ29sdW1uTm9uZV9Jc051bGwAU0hBMjU2
AFNIQTI1Nl9Jc051bGwAU0hBMzg0AFNIQTM4NF9Jc051bGwAU0hBNTEyAFNIQTUxMl9Jc051bGwA
UHJvY2Vzc0lucHV0AElucHV0MF9Qcm9jZXNzSW5wdXQASW5wdXQwX1Byb2Nlc3NJbnB1dFJvdwBQ
YXJlbnRDb21wb25lbnQAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0ZQBTeXN0ZW0uUmVzb3VyY2VzAFJl
c291cmNlTWFuYWdlcgByZXNvdXJjZU1hbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBDdWx0dXJlSW5m
bwByZXNvdXJjZUN1bHR1cmUAZ2V0X1Jlc291cmNlTWFuYWdlcgBnZXRfQ3VsdHVyZQBzZXRfQ3Vs
dHVyZQBDdWx0dXJlAGRlZmF1bHRJbnN0YW5jZQBnZXRfRGVmYXVsdABEZWZhdWx0AEJ1ZmZlcgBC
dWZmZXJDb2x1bW5JbmRleGVzAE91dHB1dE1hcABJbnB1dElEAElucHV0TmFtZQBSb3cAQ29tcG9u
ZW50AHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVGFyZ2V0RnJhbWV3b3JrQXR0cmli
dXRlAFN5c3RlbS5SZWZsZWN0aW9uAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlEZXNj
cmlwdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlD
b21wYW55QXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdo
dEF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBBc3NlbWJseUN1bHR1cmVBdHRy
aWJ1dGUAQXNzZW1ibHlWZXJzaW9uQXR0cmlidXRlAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2Vy
dmljZXMAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0
eUF0dHJpYnV0ZQBTQ182MTExQzREN0RFNTM0ODZDOUZENjI3QTg1MDgwRUZEQQBHZXRCeXRlcwBJ
c051bGwAU3RyaW5nAFN0cmluZ0NvbXBhcmlzb24ARXF1YWxzAEdldENvbHVtbkluZGV4ZXMAU1NJ
U1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUAQnl0ZQA8UHJpdmF0ZUltcGxlbWVu
dGF0aW9uRGV0YWlscz57RkVGMEU0OUEtNjM1Qy00NkI1LTkyMkMtMjA4MjczNzc0MENCfQBDb21w
aWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBWYWx1ZVR5cGUAX19TdGF0aWNBcnJheUluaXRUeXBlU2l6
ZT0xNgAkJG1ldGhvZDB4NjAwMDAxYy0xAFJ1bnRpbWVIZWxwZXJzAEFycmF5AFJ1bnRpbWVGaWVs
ZEhhbmRsZQBJbml0aWFsaXplQXJyYXkAX19TdGF0aWNBcnJheUluaXRUeXBlU2l6ZT0yMAAkJG1l
dGhvZDB4NjAwMDAxYy0yACQkbWV0aG9kMHg2MDAwMDFjLTMAX19TdGF0aWNBcnJheUluaXRUeXBl
U2l6ZT0zMgAkJG1ldGhvZDB4NjAwMDAxYy00AF9fU3RhdGljQXJyYXlJbml0VHlwZVNpemU9NDgA
JCRtZXRob2QweDYwMDAwMWMtNQBfX1N0YXRpY0FycmF5SW5pdFR5cGVTaXplPTY0ACQkbWV0aG9k
MHg2MDAwMDFjLTYAQ29tcGFyZVRvAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRFRTUGlwZWxpbmVXcmFw
AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lLldyYXBwZXIASURUU0NvbXBvbmVudE1l
dGFEYXRhMTAwAGdldF9Db21wb25lbnRNZXRhRGF0YQBFbXB0eQBGaXJlRXJyb3IAU3lzdGVtLkRp
YWdub3N0aWNzAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUAVHlwZQBSdW50aW1lVHlwZUhh
bmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBBc3NlbWJseQBnZXRfQXNzZW1ibHkAU3lzdGVtLkNvbXBv
bmVudE1vZGVsAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQAu
Y2N0b3IAU0NfZjViNWM4OWM5M2NmNDdjZDg5YzdmNDIzZGE3OTE1OTQuY3Nwcm9qLlByb3BlcnRp
ZXMuUmVzb3VyY2VzLnJlc291cmNlcwAAAA9JAG4AcAB1AHQAIAAwAABNVgBhAGwAaQBkAGEAdABl
ACAATQB1AGwAdABpAHAAbABlACAASABhAHMAaAAgAFMAYQBmAGUAIABOAG8AdAAgAFQAaAByAGUA
YQBkAAAfTQBEADUAIABIAGEAcwBoACAAaQBzACAAQgBBAEQAACtSAGkAcABlAE0ARAAxADYAMAAg
AEgAYQBzAGgAIABpAHMAIABCAEEARAAAIVMASABBADEAIABIAGEAcwBoACAAaQBzACAAQgBBAEQA
ACVTAEgAQQAyADUANgAgAEgAYQBzAGgAIABpAHMAIABCAEEARAAAJVMASABBADMAOAA0ACAASABh
AHMAaAAgAGkAcwAgAEIAQQBEAAAlUwBIAEEANQAxADIAIABIAGEAcwBoACAAaQBzACAAQgBBAEQA
ACFOAG8AbgBlACAASABhAHMAaAAgAGkAcwAgAEIAQQBEAAB/UwBDAF8AZgA1AGIANQBjADgAOQBj
ADkAMwBjAGYANAA3AGMAZAA4ADkAYwA3AGYANAAyADMAZABhADcAOQAxADUAOQA0AC4AYwBzAHAA
cgBvAGoALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAAAJrk8P5c
Y7VGkiwggnN3QMsACImEXc2AgMyRCLd6XFYZNOCJCSADARIVHQgSGQQgAB0FAyAAAgQoAB0FAygA
AgMGEhADBhIUAyAAAQkgBAEIDhIVEhkFIAEBEggDBhIJBSABARIJAwYSHQMGEiEEAAASHQQAABIh
BQABARIhBAgAEh0ECAASIQMGEiAEAAASIAQIABIgBCABAQ4EIAEBCAMGEhUDBh0IBSABHQUIBCAB
AggGIAICDhFZBSABHQgIBAEAAAADBhEoBwACARJxEXUDBhEsAwYRMAMGETQDBhE4BCABCAUEIAAS
eQIGDgogBgEIDg4OCBACGgcQAh0FHQUdBR0FHQUdBR0FCAgICAgICB0FCAABEoCBEYCFBSAAEoCJ
ByACAQ4SgIkEBwESHQYgAQERgJEIAQACAAAAAAADAAABRwEAGi5ORVRGcmFtZXdvcmssVmVyc2lv
bj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29yayA0LwEAKlNDX2Y1
YjVjODljOTNjZjQ3Y2Q4OWM3ZjQyM2RhNzkxNTk0LmNzcHJvagAABQEAAAAAFgEAEUNvcHlyaWdo
dCBAICAyMDExAAAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MB3DwAAAAA
AAAAAAAA/jwAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPA8AAAAAAAAAAAAAAAAAAAAAAAAAABf
Q29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEA
EAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABY
QAAA0AMAAAAAAAAAAAAA0AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E
7/4AAAEAAAABACublBQAAAEAK5uUFD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBW
AGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAA
AACwBDADAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAAwDAAABADAAMAAwADAAMAA0
AGIAMAAAAIAAKwABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwBmADUA
YgA1AGMAOAA5AGMAOQAzAGMAZgA0ADcAYwBkADgAOQBjADcAZgA0ADIAMwBkAGEANwA5ADEANQA5
ADQALgBjAHMAcAByAG8AagAAAAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4A
MAAuADUAMgA2ADgALgAzADkANwAyADMAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBl
AAAAUwBDAF8ANgAxADEAMQBDADQARAA3AEQARQA1ADMANAA4ADYAQwA5AEYARAA2ADIANwBBADgA
NQAwADgAMABFAEYARABBAC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBo
AHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADEAAAB4ACgAAQBPAHIAaQBnAGkA
bgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8ANgAxADEAMQBDADQARAA3AEQARQA1ADMANAA4
ADYAQwA5AEYARAA2ADIANwBBADgANQAwADgAMABFAEYARABBAC4AZABsAGwAAAB4ACsAAQBQAHIA
bwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfAGYANQBiADUAYwA4ADkAYwA5ADMAYwBmADQANwBj
AGQAOAA5AGMANwBmADQAMgAzAGQAYQA3ADkAMQA1ADkANAAuAGMAcwBwAHIAbwBqAAAAAABEAA8A
AQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADUAMgA2ADgALgAzADkANwAy
ADMAAAAAAEgADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADUA
MgA2ADgALgAzADkANwAyADMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAABA9AAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_6111c4d7de53486c9fd627a85080efda</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.SqlServer.Dts.Pipeline.ScriptComponentHost, Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum"
                  typeConverter="NOTBROWSABLE">9e2b61ae61a6a7c03607832565100ed9</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Data Flow Task\Script Test Safe Auto.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Script Test Safe Auto.Inputs[Input 0].Columns[MD5]"
                      cachedDataType="bytes"
                      cachedLength="16"
                      cachedName="MD5"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe Auto.Outputs[HashedOutput].Columns[MD5]"
                      name="MD5" />
                    <inputColumn
                      refId="Package\Data Flow Task\Script Test Safe Auto.Inputs[Input 0].Columns[RipeMD160]"
                      cachedDataType="bytes"
                      cachedLength="20"
                      cachedName="RipeMD160"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe Auto.Outputs[HashedOutput].Columns[RipeMD160]"
                      name="RipeMD160" />
                    <inputColumn
                      refId="Package\Data Flow Task\Script Test Safe Auto.Inputs[Input 0].Columns[SHA1]"
                      cachedDataType="bytes"
                      cachedLength="20"
                      cachedName="SHA1"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe Auto.Outputs[HashedOutput].Columns[SHA1]"
                      name="SHA1" />
                    <inputColumn
                      refId="Package\Data Flow Task\Script Test Safe Auto.Inputs[Input 0].Columns[ColumnNull]"
                      cachedDataType="bytes"
                      cachedLength="20"
                      cachedName="Null"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe Auto.Outputs[HashedOutput].Columns[Null]"
                      name="ColumnNull" />
                    <inputColumn
                      refId="Package\Data Flow Task\Script Test Safe Auto.Inputs[Input 0].Columns[ColumnNone]"
                      cachedDataType="bytes"
                      cachedLength="16"
                      cachedName="None"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe Auto.Outputs[HashedOutput].Columns[None]"
                      name="ColumnNone" />
                    <inputColumn
                      refId="Package\Data Flow Task\Script Test Safe Auto.Inputs[Input 0].Columns[SHA256]"
                      cachedDataType="bytes"
                      cachedLength="32"
                      cachedName="SHA256"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe Auto.Outputs[HashedOutput].Columns[SHA256]"
                      name="SHA256" />
                    <inputColumn
                      refId="Package\Data Flow Task\Script Test Safe Auto.Inputs[Input 0].Columns[SHA384]"
                      cachedDataType="bytes"
                      cachedLength="48"
                      cachedName="SHA384"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe Auto.Outputs[HashedOutput].Columns[SHA384]"
                      name="SHA384" />
                    <inputColumn
                      refId="Package\Data Flow Task\Script Test Safe Auto.Inputs[Input 0].Columns[SHA512]"
                      cachedDataType="bytes"
                      cachedLength="64"
                      cachedName="SHA512"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe Auto.Outputs[HashedOutput].Columns[SHA512]"
                      name="SHA512" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
            </component>
            <component
              refId="Package\Data Flow Task\Script Test Safe Not Thread"
              componentClassID="{874F7595-FB5F-40FF-96AF-FBFF8250E3EF}"
              contactInfo="Executes a custom script.;Microsoft Corporation; Microsoft SqlServer v10; © 2007 Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="Executes a custom script."
              name="Script Test Safe Not Thread"
              version="8">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* Microsoft SQL Server Integration Services Script Component
*  Write scripts using Microsoft Visual C# 2008.
*  ScriptMain is the entry point class of the script.*/

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{

    public override void PreExecute()
    {
        base.PreExecute();
        /*
          Add your code here for preprocessing or remove if not needed
        */
    }

    public override void PostExecute()
    {
        base.PostExecute();
        /*
          Add your code here for postprocessing or remove if not needed
          You can set read/write variables here, for example:
          Variables.MyIntVar = 100
        */
    }

    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        Boolean bCancel = true;
        byte[] bMD5 = { 0x8C, 0x61, 0xE5, 0x1B, 0x19, 0x30, 0xBB, 0xBA, 0x27, 0xDE, 0xBF, 0x0F, 0x71, 0x76, 0x23, 0xBE };
        byte[] bRipeMD160 = { 0xE2, 0x73, 0xFC, 0x79, 0x34, 0xA9, 0x39, 0x52, 0xB7, 0xE2, 0xEC, 0xA8, 0x21, 0xAF, 0xE2, 0xA0, 0x7C, 0x00, 0xA3, 0x89 };
        byte[] bSHA1 = { 0x03, 0x4D, 0x8C, 0x44, 0x1A, 0xB4, 0xEF, 0xC5, 0x0C, 0xCF, 0x22, 0x3A, 0x1A, 0x3E, 0x89, 0xCE, 0x29, 0x30, 0x64, 0x3D };
        byte[] bSHA256 = { 0x34, 0xF9, 0x57, 0x00, 0x43, 0x15, 0x36, 0xC3, 0x25, 0xB3, 0xA5, 0xC6, 0xC2, 0x22, 0x98, 0x4C, 0xC2, 0x1E, 0x54, 0xA2, 0xA8, 0x26, 0xD0, 0x27, 0x44, 0x3C, 0xB4, 0x76, 0x70, 0x4B, 0xEA, 0x61 };
        byte[] bSHA384 = {0xC7,0xE8,0x4C,0x6E,0x77,0xC9,0x63,0xBE,0x9C,0x9C,0xAE,0x21,0xBA,0x54,0x66,0x62,0xEC,0x81,0x21,0x38,0x33,0xD5,0xDC,0x3E,0x1A,0xF1,0xF6,0x73,0xC5,0xB6,0x35,0xF8,0x72,0x5A,0xEC,0x26,0x1D,0xF5,0x40,0xC6,0x77,0xDD,0xB9,0x4E,0x0A,0x24,0x1C,0x47 };
        byte[] bSHA512 = { 0x72, 0x3D, 0x9F, 0x0E, 0x43, 0x67, 0x4B, 0x07, 0xC9, 0x43, 0xAF, 0xDF, 0x70, 0xA2, 0x7A, 0x75, 0x80, 0x08, 0xBB, 0x97, 0xDE, 0x5F, 0x6E, 0xA9, 0xCD, 0xA9, 0x2F, 0x1B, 0x63, 0x08, 0xEF, 0xAE, 0x4A, 0x74, 0x1B, 0xE7, 0xCC, 0x8E, 0x02, 0xD7, 0x3D, 0x7B, 0xDA, 0x78, 0x7D, 0x94, 0x7E, 0x47, 0x10, 0x31, 0x8B, 0xF9, 0xCB, 0xC0, 0xFD, 0x1D, 0x28, 0xC0, 0x4C, 0x94, 0x1D, 0xF6, 0x3D, 0x62 };
        byte[] bNone = { 0x00 };



        for (int i = 0; i < bMD5.Length; i++)
        {
            if (Row.MD5[i].CompareTo(bMD5[i]) != 0)
            {
                this.ComponentMetaData.FireError(100, "Validate Multiple Hash Safe Not Thread", "MD5 Hash is BAD", string.Empty, 0, out bCancel);
                break;
            }
        }

        for (int i = 0; i < bRipeMD160.Length; i++)
        {
            if (Row.RipeMD160[i].CompareTo(bRipeMD160[i]) != 0)
            {
                this.ComponentMetaData.FireError(100, "Validate Multiple Hash Safe Not Thread", "RipeMD160 Hash is BAD", string.Empty, 0, out bCancel);
                break;
            }
        }

        for (int i = 0; i < bSHA1.Length; i++)
        {
            if (Row.SHA1[i].CompareTo(bSHA1[i]) != 0)
            {
                this.ComponentMetaData.FireError(100, "Validate Multiple Hash Safe Not Thread", "SHA1 Hash is BAD", string.Empty, 0, out bCancel);
                break;
            }
        }
        for (int i = 0; i < bSHA256.Length; i++)
        {
            if (Row.SHA256[i].CompareTo(bSHA256[i]) != 0)
            {
                this.ComponentMetaData.FireError(100, "Validate Multiple Hash Safe Not Thread", "SHA256 Hash is BAD", string.Empty, 0, out bCancel);
                break;
            }
        }
        for (int i = 0; i < bSHA384.Length; i++)
        {
            if (Row.SHA384[i].CompareTo(bSHA384[i]) != 0)
            {
                this.ComponentMetaData.FireError(100, "Validate Multiple Hash Safe Not Thread", "SHA384 Hash is BAD", string.Empty, 0, out bCancel);
                break;
            }
        }
        for (int i = 0; i < bSHA512.Length; i++)
        {
            if (Row.SHA512[i].CompareTo(bSHA512[i]) != 0)
            {
                this.ComponentMetaData.FireError(100, "Validate Multiple Hash Safe Not Thread", "SHA512 Hash is BAD", string.Empty, 0, out bCancel);
                break;
            }
        }
        for (int i = 0; i < bNone.Length; i++)
        {
            if (Row.ColumnNone[i].CompareTo(bNone[i]) != 0)
            {
                this.ComponentMetaData.FireError(100, "Validate Multiple Hash Safe Not Thread", "None Hash is BAD", string.Empty, 0, out bCancel);
                break;
            }
        }
    
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Byte[] MD5
    {
        get
        {
            return Buffer.GetBytes(BufferColumnIndexes[0]);
        }
    }
    public bool MD5_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public Byte[] RipeMD160
    {
        get
        {
            return Buffer.GetBytes(BufferColumnIndexes[1]);
        }
    }
    public bool RipeMD160_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public Byte[] SHA1
    {
        get
        {
            return Buffer.GetBytes(BufferColumnIndexes[2]);
        }
    }
    public bool SHA1_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public Byte[] ColumnNull
    {
        get
        {
            return Buffer.GetBytes(BufferColumnIndexes[3]);
        }
    }
    public bool ColumnNull_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public Byte[] ColumnNone
    {
        get
        {
            return Buffer.GetBytes(BufferColumnIndexes[4]);
        }
    }
    public bool ColumnNone_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public Byte[] SHA256
    {
        get
        {
            return Buffer.GetBytes(BufferColumnIndexes[5]);
        }
    }
    public bool SHA256_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public Byte[] SHA384
    {
        get
        {
            return Buffer.GetBytes(BufferColumnIndexes[6]);
        }
    }
    public bool SHA384_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public Byte[] SHA512
    {
        get
        {
            return Buffer.GetBytes(BufferColumnIndexes[7]);
        }
    }
    public bool SHA512_IsNull
    {
        get
        {
            return IsNull(7);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:ProjectId>{AACF6658-7A17-457B-BDF0-2252FAA77E68}</msb:ProjectId>
		<msb:NoContent>Reference;Import;Folder</msb:NoContent>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>sc_f5b5c89c93cf47cd89c7f423da791594</msb:DisplayName>
		<msb:CodeName>sc_f5b5c89c93cf47cd89c7f423da791594</msb:CodeName>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:Project Include="sc_f5b5c89c93cf47cd89c7f423da791594.csproj"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_f5b5c89c93cf47cd89c7f423da791594.csproj.Properties.Settings.get_Default():SC_f5b5c89c93cf47cd89c7f423da791594.csproj.Properties.Sett" +
    "ings")]

namespace SC_f5b5c89c93cf47cd89c7f423da791594.csproj.Properties
{


    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase
    {

        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();

        public static Settings Default
        {
            get
            {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[sc_f5b5c89c93cf47cd89c7f423da791594.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <NoStandardLibraries>false</NoStandardLibraries>
    <RootNamespace>SC_f5b5c89c93cf47cd89c7f423da791594.csproj</RootNamespace>
    <AssemblyName>SC_f5b5c89c93cf47cd89c7f423da791594.csproj</AssemblyName>
    <ProjectGuid>{82C59351-4B4F-4F49-8A9C-279886F7CA7B}</ProjectGuid>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent></PreBuildEvent>
    <PostBuildEvent></PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
    <Compile Include="main.cs" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to the add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="SSIS_ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
  <PropertyGroup>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
  </PropertyGroup>
  <PropertyGroup>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_f5b5c89c93cf47cd89c7f423da791594.csproj")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_f5b5c89c93cf47cd89c7f423da791594.csproj")]
[assembly: AssemblyCopyright("Copyright @  2011")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_f5b5c89c93cf47cd89c7f423da791594.csproj.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_f5b5c89c93cf47cd89c7f423da791594.csproj.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_f5b5c89c93cf47cd89c7f423da791594.csproj.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_f5b5c89c93cf47cd89c7f423da791594.csproj.Properties
{


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources
    {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources()
        {
        }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager
        {
            get
            {
                if ((resourceMan == null))
                {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_f5b5c89c93cf47cd89c7f423da791594.csproj.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture
        {
            get
            {
                return resourceCulture;
            }
            set
            {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_f5b5c89c93cf47cd89c7f423da791594.csproj.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDADcLj1MAAAAAAAAAAOAAAiELAQsAAB4AAAAIAAAAAAAAHj0A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAMQ8AABXAAAAAEAAAEgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAJB0AAAAgAAAAHgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAEgEAAAAQAAAAAYAAAAgAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAJgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAA
PQAAAAAAAEgAAAACAAUAiCYAADwWAAABAAAAAAAAANAlAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAACoCAwQFKA0AAAoqUgJ7DgAACgJ7DwAAChaUbxAAAAoqIgIW
KBEAAAoqUgJ7DgAACgJ7DwAACheUbxAAAAoqIgIXKBEAAAoqUgJ7DgAACgJ7DwAAChiUbxAAAAoq
IgIYKBEAAAoqUgJ7DgAACgJ7DwAAChmUbxAAAAoqIgIZKBEAAAoqUgJ7DgAACgJ7DwAAChqUbxAA
AAoqIgIaKBEAAAoqUgJ7DgAACgJ7DwAAChuUbxAAAAoqIgIbKBEAAAoqUgJ7DgAACgJ7DwAAChyU
bxAAAAoqIgIcKBEAAAoqUgJ7DgAACgJ7DwAACh2UbxAAAAoqIgIdKBEAAAoqHgIoEgAACioeAigT
AAAKKn4CKBQAAAoCAnMYAAAGfQEAAAQCAnMZAAAGfQIAAAQqkgRyAQAAcBpvFQAACiwVAgUCAygW
AAAKDgRzAQAABm8WAAAGKkorBwIDbxcAAAYDbxIAAAYt8SoGKjoCKBcAAAoCA30DAAAEKjoCKBcA
AAoCA30EAAAEKh4CKBkAAAoqHgIoGgAACioAAAAAAIxh5RsZMLu6J96/D3F2I77ic/x5NKk5Urfi
7Kghr+KgfACjiQAAAAADTYxEGrTvxQzPIjoaPonOKTBkPQAAAAA0+VcAQxU2wyWzpcbCIphMwh5U
oqgm0CdEPLR2cEvqYcfoTG53yWO+nJyuIbpUZmLsgSE4M9XcPhrx9nPFtjX4clrsJh31QMZ33blO
CiQcR3I9nw5DZ0sHyUOv33CienWACLuX3l9uqc2pLxtjCO+uSnQb58yOAtc9e9p4fZR+RxAxi/nL
wP0dKMBMlB32PWITMAcAmAIAAAEAABEXCh8QjRgAAAEl0AgAAAQoHAAACgsfFI0YAAABJdAJAAAE
KBwAAAoMHxSNGAAAASXQCgAABCgcAAAKDR8gjRgAAAEl0AsAAAQoHAAAChMEHzCNGAAAASXQDAAA
BCgcAAAKEwUfQI0YAAABJdANAAAEKBwAAAoTBheNGAAAARMPEQ8TBxYTCCs/A28CAAAGEQiPGAAA
AQcRCJEoHQAACiwhAigeAAAKH2RyEQAAcHJfAABwfh8AAAoWEgBvIAAACisNEQgXWBMIEQgHjmky
uhYTCSs/A28EAAAGEQmPGAAAAQgRCZEoHQAACiwhAigeAAAKH2RyEQAAcHJ/AABwfh8AAAoWEgBv
IAAACisNEQkXWBMJEQkIjmkyuhYTCis/A28GAAAGEQqPGAAAAQkRCpEoHQAACiwhAigeAAAKH2Ry
EQAAcHKrAABwfh8AAAoWEgBvIAAACisNEQoXWBMKEQoJjmkyuhYTCytAA28MAAAGEQuPGAAAAREE
EQuRKB0AAAosIQIoHgAACh9kchEAAHByzQAAcH4fAAAKFhIAbyAAAAorDhELF1gTCxELEQSOaTK4
FhMMK0ADbw4AAAYRDI8YAAABEQURDJEoHQAACiwhAigeAAAKH2RyEQAAcHLzAABwfh8AAAoWEgBv
IAAACisOEQwXWBMMEQwRBY5pMrgWEw0rQANvEAAABhENjxgAAAERBhENkSgdAAAKLCECKB4AAAof
ZHIRAABwchkBAHB+HwAAChYSAG8gAAAKKw4RDRdYEw0RDREGjmkyuBYTDis/A28KAAAGEQ6PGAAA
AREHEQ6RKB0AAAosIAIoHgAACh9kchEAAHByPwEAcH4fAAAKFhIAbyAAAAoqEQ4XWBMOEQ4RB45p
MrkqHgIoFAAABioeAigXAAAKKhMwAgAtAAAAAgAAEX4FAAAELSByYQEAcNAHAAACKCIAAApvIwAA
CnMkAAAKCgaABQAABH4FAAAEKhp+BgAABCoeAoAGAAAEKhp+BwAABCoucyMAAAaABwAABCoeAigm
AAAKKgC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1z
Y29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49
Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAA
AAAAAAAAAFBBRFBBRFC0AAAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAwAcA
ACN+AAAsCAAALAoAACNTdHJpbmdzAAAAAFgSAADkAQAAI1VTADwUAAAQAAAAI0dVSUQAAABMFAAA
8AEAACNCbG9iAAAAAAAAAAIAAAFXlaIhCQMAAAD6JTMAFgAAAQAAACQAAAAOAAAADQAAACQAAAAN
AAAAJgAAABAAAAAFAAAAAgAAAAMAAAATAAAAFAAAAAYAAAABAAAABQAAAAEAAAAFAAAAAAAKAAEA
AAAAAAYA/ADbAAYACQHbAAoAKQEiAQ4ARQEwARIAfgHbAAYAjQHbAAoAzQO8AwoA/gPpAwoA1wS9
BAoAAgXwBAoAGQXwBAoANgXwBAoAVQXwBAoAbgXwBAoAhwXwBAoAogXwBAoAvQXwBAoA1gXwBAoA
DwbvBQoALwbvBQoAiAYiAQoAjwYiAQYAuAbbAAoA3wYiAQoAKQfvBQoARAciAQoAfwfvBQoAjgci
AQoAlAciARYA5gi9CAoAOAklCQoAVQkiAQoAWgkiAQoAfgnwBA4AqgmUCQ4AwwmUCQAAAAABAAAA
AAABAAEAAQAQADkAAAAFAAEAAQABABAARgAAAAkAAQAUAAEAEABUAAAADQADABgAAQAQAGAAAAAN
AAQAGQABABAAagAAAAwABQAaAAAAEAB1AH8ADQAFAB4AAAEQALUAfwARAAcAIgAAAAAA5AYAAA0A
CAAlABMBAABOBwAAaQAOACUAEwEAALcHAABpAA4AJQATAQAA/AcAAGkADgAlABMBAAAtCAAAaQAO
ACUAEwEAAF4IAABpAA4AJQAGAFQALwAGAGAAMwABAJUDSwABAJUDSwARAN0DVQARAAoEWQARAE4E
dwATAWsHtAATAdQHwAATAegHwAATARkIxAATAUoIyAATAXsIzABQIAAAAACGGJsBEwABAFsgAAAA
AIYIoQEdAAQAcCAAAAAAhgipASIABAB5IAAAAACGCLgBHQAEAI4gAAAAAIYIxgEiAAQAlyAAAAAA
hgjbAR0ABACsIAAAAACGCOQBIgAEALUgAAAAAIYI9AEdAAQAyiAAAAAAhggDAiIABADTIAAAAACG
CBkCHQAEAOggAAAAAIYIKAIiAAQA8SAAAAAAhgg+Ah0ABAAGIQAAAACGCEkCIgAEAA8hAAAAAIYI
WwIdAAQAJCEAAAAAhghmAiIABAAtIQAAAACGCHgCHQAEAEIhAAAAAIYIgwIiAAQASyEAAAAAhgCV
AiIABABTIQAAAACGAJ0CIgAEAFshAAAAAIYYmwE3AAQAeyEAAAAAxgBdAzsABACgIQAAAADGAWoD
RQAIALMhAAAAAMYBfgNFAAkAtSEAAAAAhhibAU8ACgDEIQAAAACGGJsBTwALANMhAAAAAMYApQM3
AAwA2yEAAAAAxgCwAzcADAC4IgAAAADGAH4DRQAMAFwlAAAAAIYYmwE3AA0AZCUAAAAAgxibATcA
DQBsJQAAAACTCBoEXQANAKUlAAAAAJMILgRiAA0ArCUAAAAAkwg6BGcADQC0JQAAAACWCF4EewAO
AMclAAAAAIYYmwE3AA4AuyUAAAAAkRjYCS8BDgAAAAEAcgQAAAIAeQQAAAMAjQQAAAEAlwQAAAIA
nwQAAAMAcgQAAAQAjQQAAAEAcgQAAAEAqQQAAAEArQQAAAEArQQAAAEAqQQAAAEAtwRJAJsBhQBR
AJsBhQBZAJsBhQBhAJsBhQBpAJsBhQBxAJsBhQB5AJsBhQCBAJsBhQCJAJsBhQCRAJsBhQCZAJsB
igChAJsBNwAJAJsBEwAJAHIEjwAJAHkEkwApAHgGlwAJAIEGnQAJAJUCIgAJAJ0CIgARAJsBNwCp
AKAGogARAKcGqQAZAJsBNwC5AJsBNwARAKUDNwARALADNwDJAJsBNwDZAKcHuADBAI8I0AARAP8I
1QCpABUJ2gDxABsJ3QD5AJsBNwABAWwJAwEBAYcJDAE5AJsBEgEZAZsBHwEhAJsBNwAuABMAewEu
ABsAqwEuAGMA0QEuACMAqwEuAAsAMwEuACsAqwEuADMAewEuADsAsQEuAEMAqwEuAFsAyAHDAMMA
rwDhANsArwDjAAsBrwAjAdsArwApAisBJgFJAisBJgEBABAAAAAKAAEAFAAAAAsAAQAgAAAADAAB
ADAAAAANAAEAQAAAAA4A6AAaAQIAAQAHABEACAATAAAAqQImAAAArQIrAAAAuAImAAAAwgIrAAAA
0wImAAAA2AIrAAAA5AImAAAA7wIrAAAAAQMmAAAADAMrAAAAHgMmAAAAJQMrAAAAMwMmAAAAOgMr
AAAASAMmAAAATwMrAAAAzQNtAAAARgRyAAAAagSAAAIAAgADAAIAAwAFAAIABAAHAAIABQAJAAIA
BgALAAIABwANAAIACAAPAAIACQARAAIACgATAAIACwAVAAIADAAXAAIADQAZAAIADgAbAAIADwAd
AAIAEAAfAAIAEQAhAAIAHwAjAAIAIAAlAAEAIQAlAAIAIgAnAOghAAAIAPghAAAJABAiAAAKACgi
AAALAEgiAAAMAHgiAAANAASAAAABAAAAlBQrmwAAAAAAAE0GAAALAAAAAAAAAAAAAAABAL4AAAAA
AAQAAAAAAAAAAAAAAAoAGQEAAAAABAAAAAAAAAAAAAAACgAiAQAAAAALAAAAAAAAAAAAAAABAF0B
AAAAAAsAAAAAAAAAAAAAAAEAmQgAAAAAAAAAAAEAAADfCQAACgAJAAsACQAMAAkADQAJAA4ACQAA
AAA8TW9kdWxlPgBTQ19mNWI1Yzg5YzkzY2Y0N2NkODljN2Y0MjNkYTc5MTU5NC5jc3Byb2ouZGxs
AElucHV0MEJ1ZmZlcgBVc2VyQ29tcG9uZW50AENvbm5lY3Rpb25zAFZhcmlhYmxlcwBTY3JpcHRN
YWluAFJlc291cmNlcwBTQ19mNWI1Yzg5YzkzY2Y0N2NkODljN2Y0MjNkYTc5MTU5NC5jc3Byb2ou
UHJvcGVydGllcwBTZXR0aW5ncwBNaWNyb3NvZnQuU3FsU2VydmVyLlR4U2NyaXB0AE1pY3Jvc29m
dC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lAFNjcmlwdEJ1ZmZlcgBTY3JpcHRDb21wb25lbnQAbXNj
b3JsaWIAU3lzdGVtAE9iamVjdABTeXN0ZW0uQ29uZmlndXJhdGlvbgBBcHBsaWNhdGlvblNldHRp
bmdzQmFzZQBNaWNyb3NvZnQuU3FsU2VydmVyLlBpcGVsaW5lSG9zdABQaXBlbGluZUJ1ZmZlcgBP
dXRwdXROYW1lTWFwAC5jdG9yAGdldF9NRDUAZ2V0X01ENV9Jc051bGwAZ2V0X1JpcGVNRDE2MABn
ZXRfUmlwZU1EMTYwX0lzTnVsbABnZXRfU0hBMQBnZXRfU0hBMV9Jc051bGwAZ2V0X0NvbHVtbk51
bGwAZ2V0X0NvbHVtbk51bGxfSXNOdWxsAGdldF9Db2x1bW5Ob25lAGdldF9Db2x1bW5Ob25lX0lz
TnVsbABnZXRfU0hBMjU2AGdldF9TSEEyNTZfSXNOdWxsAGdldF9TSEEzODQAZ2V0X1NIQTM4NF9J
c051bGwAZ2V0X1NIQTUxMgBnZXRfU0hBNTEyX0lzTnVsbABOZXh0Um93AEVuZE9mUm93c2V0AE1E
NQBNRDVfSXNOdWxsAFJpcGVNRDE2MABSaXBlTUQxNjBfSXNOdWxsAFNIQTEAU0hBMV9Jc051bGwA
Q29sdW1uTnVsbABDb2x1bW5OdWxsX0lzTnVsbABDb2x1bW5Ob25lAENvbHVtbk5vbmVfSXNOdWxs
AFNIQTI1NgBTSEEyNTZfSXNOdWxsAFNIQTM4NABTSEEzODRfSXNOdWxsAFNIQTUxMgBTSEE1MTJf
SXNOdWxsAFByb2Nlc3NJbnB1dABJbnB1dDBfUHJvY2Vzc0lucHV0AElucHV0MF9Qcm9jZXNzSW5w
dXRSb3cAUGFyZW50Q29tcG9uZW50AFByZUV4ZWN1dGUAUG9zdEV4ZWN1dGUAU3lzdGVtLlJlc291
cmNlcwBSZXNvdXJjZU1hbmFnZXIAcmVzb3VyY2VNYW4AU3lzdGVtLkdsb2JhbGl6YXRpb24AQ3Vs
dHVyZUluZm8AcmVzb3VyY2VDdWx0dXJlAGdldF9SZXNvdXJjZU1hbmFnZXIAZ2V0X0N1bHR1cmUA
c2V0X0N1bHR1cmUAQ3VsdHVyZQBkZWZhdWx0SW5zdGFuY2UAZ2V0X0RlZmF1bHQARGVmYXVsdABC
dWZmZXIAQnVmZmVyQ29sdW1uSW5kZXhlcwBPdXRwdXRNYXAASW5wdXRJRABJbnB1dE5hbWUAUm93
AENvbXBvbmVudAB2YWx1ZQBTeXN0ZW0uUnVudGltZS5WZXJzaW9uaW5nAFRhcmdldEZyYW1ld29y
a0F0dHJpYnV0ZQBTeXN0ZW0uUmVmbGVjdGlvbgBBc3NlbWJseVRpdGxlQXR0cmlidXRlAEFzc2Vt
Ymx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb25maWd1cmF0aW9uQXR0cmlidXRlAEFz
c2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBBc3NlbWJseVByb2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlD
b3B5cmlnaHRBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1hcmtBdHRyaWJ1dGUAQXNzZW1ibHlDdWx0
dXJlQXR0cmlidXRlAEFzc2VtYmx5VmVyc2lvbkF0dHJpYnV0ZQBTeXN0ZW0uUnVudGltZS5Db21w
aWxlclNlcnZpY2VzAENvbXBpbGF0aW9uUmVsYXhhdGlvbnNBdHRyaWJ1dGUAUnVudGltZUNvbXBh
dGliaWxpdHlBdHRyaWJ1dGUAU0NfZjViNWM4OWM5M2NmNDdjZDg5YzdmNDIzZGE3OTE1OTQuY3Nw
cm9qAEdldEJ5dGVzAElzTnVsbABTdHJpbmcAU3RyaW5nQ29tcGFyaXNvbgBFcXVhbHMAR2V0Q29s
dW1uSW5kZXhlcwBTU0lTU2NyaXB0Q29tcG9uZW50RW50cnlQb2ludEF0dHJpYnV0ZQBCeXRlADxQ
cml2YXRlSW1wbGVtZW50YXRpb25EZXRhaWxzPnsxREU0QTJFRC04N0Y3LTRCMTAtOTU3NC1BNzEw
NTI0RDdBODR9AENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAFZhbHVlVHlwZQBfX1N0YXRpY0Fy
cmF5SW5pdFR5cGVTaXplPTE2ACQkbWV0aG9kMHg2MDAwMDFjLTEAUnVudGltZUhlbHBlcnMAQXJy
YXkAUnVudGltZUZpZWxkSGFuZGxlAEluaXRpYWxpemVBcnJheQBfX1N0YXRpY0FycmF5SW5pdFR5
cGVTaXplPTIwACQkbWV0aG9kMHg2MDAwMDFjLTIAJCRtZXRob2QweDYwMDAwMWMtMwBfX1N0YXRp
Y0FycmF5SW5pdFR5cGVTaXplPTMyACQkbWV0aG9kMHg2MDAwMDFjLTQAX19TdGF0aWNBcnJheUlu
aXRUeXBlU2l6ZT00OAAkJG1ldGhvZDB4NjAwMDAxYy01AF9fU3RhdGljQXJyYXlJbml0VHlwZVNp
emU9NjQAJCRtZXRob2QweDYwMDAwMWMtNgBDb21wYXJlVG8ATWljcm9zb2Z0LlNxbFNlcnZlci5E
VFNQaXBlbGluZVdyYXAATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUuV3JhcHBlcgBJ
RFRTQ29tcG9uZW50TWV0YURhdGExMDAAZ2V0X0NvbXBvbmVudE1ldGFEYXRhAEVtcHR5AEZpcmVF
cnJvcgBTeXN0ZW0uRGlhZ25vc3RpY3MARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBUeXBl
AFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEFzc2VtYmx5AGdldF9Bc3NlbWJs
eQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEVkaXRvckJy
b3dzYWJsZVN0YXRlAC5jY3RvcgBTQ19mNWI1Yzg5YzkzY2Y0N2NkODljN2Y0MjNkYTc5MTU5NC5j
c3Byb2ouUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAAAAAAAPSQBuAHAAdQB0ACAAMAAA
TVYAYQBsAGkAZABhAHQAZQAgAE0AdQBsAHQAaQBwAGwAZQAgAEgAYQBzAGgAIABTAGEAZgBlACAA
TgBvAHQAIABUAGgAcgBlAGEAZAAAH00ARAA1ACAASABhAHMAaAAgAGkAcwAgAEIAQQBEAAArUgBp
AHAAZQBNAEQAMQA2ADAAIABIAGEAcwBoACAAaQBzACAAQgBBAEQAACFTAEgAQQAxACAASABhAHMA
aAAgAGkAcwAgAEIAQQBEAAAlUwBIAEEAMgA1ADYAIABIAGEAcwBoACAAaQBzACAAQgBBAEQAACVT
AEgAQQAzADgANAAgAEgAYQBzAGgAIABpAHMAIABCAEEARAAAJVMASABBADUAMQAyACAASABhAHMA
aAAgAGkAcwAgAEIAQQBEAAAhTgBvAG4AZQAgAEgAYQBzAGgAIABpAHMAIABCAEEARAAAf1MAQwBf
AGYANQBiADUAYwA4ADkAYwA5ADMAYwBmADQANwBjAGQAOAA5AGMANwBmADQAMgAzAGQAYQA3ADkA
MQA1ADkANAAuAGMAcwBwAHIAbwBqAC4AUAByAG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQBy
AGMAZQBzAAAAAADtouQd94cQS5V0pxBSTXqEAAiJhF3NgIDMkQi3elxWGTTgiQkgAwESFR0IEhkE
IAAdBQMgAAIEKAAdBQMoAAIDBhIQAwYSFAMgAAEJIAQBCA4SFRIZBSABARIIAwYSCQUgAQESCQMG
Eh0DBhIhBAAAEh0EAAASIQUAAQESIQQIABIdBAgAEiEDBhIgBAAAEiAECAASIAQgAQEOBCABAQgD
BhIVAwYdCAUgAR0FCAQgAQIIBiACAg4RWQUgAR0ICAQBAAAAAwYRKAcAAgEScRF1AwYRLAMGETAD
BhE0AwYROAQgAQgFBCAAEnkCBg4KIAYBCA4ODggQAhoHEAIdBR0FHQUdBR0FHQUdBQgICAgICAgd
BQgAARKAgRGAhQUgABKAiQcgAgEOEoCJBAcBEh0GIAEBEYCRCAEAAgAAAAAAAwAAAUcBABouTkVU
RnJhbWV3b3JrLFZlcnNpb249djQuMAEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFt
ZXdvcmsgNC8BACpTQ19mNWI1Yzg5YzkzY2Y0N2NkODljN2Y0MjNkYTc5MTU5NC5jc3Byb2oAAAUB
AAAAABYBABFDb3B5cmlnaHQgQCAgMjAxMQAACAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0
aW9uVGhyb3dzAew8AAAAAAAAAAAAAA49AAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPQAAAAAA
AAAAAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEA
EAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABY
QAAA8AMAAAAAAAAAAAAA8AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E
7/4AAAEAAAABACublBQAAAEAK5uUFD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBW
AGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAA
AACwBFADAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAACwDAAABADAAMAAwADAAMAA0
AGIAMAAAAIAAKwABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwBmADUA
YgA1AGMAOAA5AGMAOQAzAGMAZgA0ADcAYwBkADgAOQBjADcAZgA0ADIAMwBkAGEANwA5ADEANQA5
ADQALgBjAHMAcAByAG8AagAAAAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4A
MAAuADUAMgA2ADgALgAzADkANwAyADMAAAAAAIAALwABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBl
AAAAUwBDAF8AZgA1AGIANQBjADgAOQBjADkAMwBjAGYANAA3AGMAZAA4ADkAYwA3AGYANAAyADMA
ZABhADcAOQAxADUAOQA0AC4AYwBzAHAAcgBvAGoALgBkAGwAbAAAAAAASAASAAEATABlAGcAYQBs
AEMAbwBwAHkAcgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAIAAyADAAMQAxAAAA
iAAvAAEATwByAGkAZwBpAG4AYQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAQwBfAGYANQBiADUAYwA4
ADkAYwA5ADMAYwBmADQANwBjAGQAOAA5AGMANwBmADQAMgAzAGQAYQA3ADkAMQA1ADkANAAuAGMA
cwBwAHIAbwBqAC4AZABsAGwAAAAAAHgAKwABAFAAcgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBD
AF8AZgA1AGIANQBjADgAOQBjADkAMwBjAGYANAA3AGMAZAA4ADkAYwA3AGYANAAyADMAZABhADcA
OQAxADUAOQA0AC4AYwBzAHAAcgBvAGoAAAAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIAcwBp
AG8AbgAAADEALgAwAC4ANQAyADYAOAAuADMAOQA3ADIAMwAAAAAASAAPAAEAQQBzAHMAZQBtAGIA
bAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANQAyADYAOAAuADMAOQA3ADIAMwAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAACA9AAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_f5b5c89c93cf47cd89c7f423da791594</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.SqlServer.Dts.Pipeline.ScriptComponentHost, Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum"
                  typeConverter="NOTBROWSABLE">9e2b61ae61a6a7c03607832565100ed9</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Data Flow Task\Script Test Safe Not Thread.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Script Test Safe Not Thread.Inputs[Input 0].Columns[MD5]"
                      cachedDataType="bytes"
                      cachedLength="16"
                      cachedName="MD5"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Outputs[HashedOutput].Columns[MD5]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Script Test Safe Not Thread.Inputs[Input 0].Columns[RipeMD160]"
                      cachedDataType="bytes"
                      cachedLength="20"
                      cachedName="RipeMD160"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Outputs[HashedOutput].Columns[RipeMD160]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Script Test Safe Not Thread.Inputs[Input 0].Columns[SHA1]"
                      cachedDataType="bytes"
                      cachedLength="20"
                      cachedName="SHA1"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Outputs[HashedOutput].Columns[SHA1]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Script Test Safe Not Thread.Inputs[Input 0].Columns[ColumnNull]"
                      cachedDataType="bytes"
                      cachedLength="20"
                      cachedName="Null"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Outputs[HashedOutput].Columns[Null]"
                      name="ColumnNull" />
                    <inputColumn
                      refId="Package\Data Flow Task\Script Test Safe Not Thread.Inputs[Input 0].Columns[ColumnNone]"
                      cachedDataType="bytes"
                      cachedLength="16"
                      cachedName="None"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Outputs[HashedOutput].Columns[None]"
                      name="ColumnNone" />
                    <inputColumn
                      refId="Package\Data Flow Task\Script Test Safe Not Thread.Inputs[Input 0].Columns[SHA256]"
                      cachedDataType="bytes"
                      cachedLength="32"
                      cachedName="SHA256"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Outputs[HashedOutput].Columns[SHA256]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Script Test Safe Not Thread.Inputs[Input 0].Columns[SHA384]"
                      cachedDataType="bytes"
                      cachedLength="48"
                      cachedName="SHA384"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Outputs[HashedOutput].Columns[SHA384]" />
                    <inputColumn
                      refId="Package\Data Flow Task\Script Test Safe Not Thread.Inputs[Input 0].Columns[SHA512]"
                      cachedDataType="bytes"
                      cachedLength="64"
                      cachedName="SHA512"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Outputs[HashedOutput].Columns[SHA512]" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
            </component>
            <component
              refId="Package\Data Flow Task\Script Test Safe On"
              componentClassID="{874F7595-FB5F-40FF-96AF-FBFF8250E3EF}"
              contactInfo="Executes a custom script.;Microsoft Corporation; Microsoft SqlServer v10; © 2007 Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="Executes a custom script."
              localeId="3081"
              name="Script Test Safe On"
              version="8">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* Microsoft SQL Server Integration Services Script Component
*  Write scripts using Microsoft Visual C# 2008.
*  ScriptMain is the entry point class of the script.*/

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{

    public override void PreExecute()
    {
        base.PreExecute();
        /*
          Add your code here for preprocessing or remove if not needed
        */
    }

    public override void PostExecute()
    {
        base.PostExecute();
        /*
          Add your code here for postprocessing or remove if not needed
          You can set read/write variables here, for example:
          Variables.MyIntVar = 100
        */
    }

    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        Boolean bCancel = true;
        byte[] bMD5 = { 0x8C, 0x61, 0xE5, 0x1B, 0x19, 0x30, 0xBB, 0xBA, 0x27, 0xDE, 0xBF, 0x0F, 0x71, 0x76, 0x23, 0xBE };
        byte[] bRipeMD160 = { 0xE2, 0x73, 0xFC, 0x79, 0x34, 0xA9, 0x39, 0x52, 0xB7, 0xE2, 0xEC, 0xA8, 0x21, 0xAF, 0xE2, 0xA0, 0x7C, 0x00, 0xA3, 0x89 };
        byte[] bSHA1 = { 0x03, 0x4D, 0x8C, 0x44, 0x1A, 0xB4, 0xEF, 0xC5, 0x0C, 0xCF, 0x22, 0x3A, 0x1A, 0x3E, 0x89, 0xCE, 0x29, 0x30, 0x64, 0x3D };
        byte[] bSHA256 = { 0x34, 0xF9, 0x57, 0x00, 0x43, 0x15, 0x36, 0xC3, 0x25, 0xB3, 0xA5, 0xC6, 0xC2, 0x22, 0x98, 0x4C, 0xC2, 0x1E, 0x54, 0xA2, 0xA8, 0x26, 0xD0, 0x27, 0x44, 0x3C, 0xB4, 0x76, 0x70, 0x4B, 0xEA, 0x61 };
        byte[] bSHA384 = {0xC7,0xE8,0x4C,0x6E,0x77,0xC9,0x63,0xBE,0x9C,0x9C,0xAE,0x21,0xBA,0x54,0x66,0x62,0xEC,0x81,0x21,0x38,0x33,0xD5,0xDC,0x3E,0x1A,0xF1,0xF6,0x73,0xC5,0xB6,0x35,0xF8,0x72,0x5A,0xEC,0x26,0x1D,0xF5,0x40,0xC6,0x77,0xDD,0xB9,0x4E,0x0A,0x24,0x1C,0x47 };
        byte[] bSHA512 = { 0x72, 0x3D, 0x9F, 0x0E, 0x43, 0x67, 0x4B, 0x07, 0xC9, 0x43, 0xAF, 0xDF, 0x70, 0xA2, 0x7A, 0x75, 0x80, 0x08, 0xBB, 0x97, 0xDE, 0x5F, 0x6E, 0xA9, 0xCD, 0xA9, 0x2F, 0x1B, 0x63, 0x08, 0xEF, 0xAE, 0x4A, 0x74, 0x1B, 0xE7, 0xCC, 0x8E, 0x02, 0xD7, 0x3D, 0x7B, 0xDA, 0x78, 0x7D, 0x94, 0x7E, 0x47, 0x10, 0x31, 0x8B, 0xF9, 0xCB, 0xC0, 0xFD, 0x1D, 0x28, 0xC0, 0x4C, 0x94, 0x1D, 0xF6, 0x3D, 0x62 };
        byte[] bNone = { 0x00 };



        for (int i = 0; i < bMD5.Length; i++)
        {
            if (Row.MD5[i].CompareTo(bMD5[i]) != 0)
            {
                this.ComponentMetaData.FireError(100, "Validate Multiple Hash Safe Not Thread", "MD5 Hash is BAD", string.Empty, 0, out bCancel);
                break;
            }
        }

        for (int i = 0; i < bRipeMD160.Length; i++)
        {
            if (Row.RipeMD160[i].CompareTo(bRipeMD160[i]) != 0)
            {
                this.ComponentMetaData.FireError(100, "Validate Multiple Hash Safe Not Thread", "RipeMD160 Hash is BAD", string.Empty, 0, out bCancel);
                break;
            }
        }

        for (int i = 0; i < bSHA1.Length; i++)
        {
            if (Row.SHA1[i].CompareTo(bSHA1[i]) != 0)
            {
                this.ComponentMetaData.FireError(100, "Validate Multiple Hash Safe Not Thread", "SHA1 Hash is BAD", string.Empty, 0, out bCancel);
                break;
            }
        }
        for (int i = 0; i < bSHA256.Length; i++)
        {
            if (Row.SHA256[i].CompareTo(bSHA256[i]) != 0)
            {
                this.ComponentMetaData.FireError(100, "Validate Multiple Hash Safe Not Thread", "SHA256 Hash is BAD", string.Empty, 0, out bCancel);
                break;
            }
        }
        for (int i = 0; i < bSHA384.Length; i++)
        {
            if (Row.SHA384[i].CompareTo(bSHA384[i]) != 0)
            {
                this.ComponentMetaData.FireError(100, "Validate Multiple Hash Safe Not Thread", "SHA384 Hash is BAD", string.Empty, 0, out bCancel);
                break;
            }
        }
        for (int i = 0; i < bSHA512.Length; i++)
        {
            if (Row.SHA512[i].CompareTo(bSHA512[i]) != 0)
            {
                this.ComponentMetaData.FireError(100, "Validate Multiple Hash Safe Not Thread", "SHA512 Hash is BAD", string.Empty, 0, out bCancel);
                break;
            }
        }
        for (int i = 0; i < bNone.Length; i++)
        {
            if (Row.ColumnNone[i].CompareTo(bNone[i]) != 0)
            {
                this.ComponentMetaData.FireError(100, "Validate Multiple Hash Safe Not Thread", "None Hash is BAD", string.Empty, 0, out bCancel);
                break;
            }
        }
    
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Byte[] MD5
    {
        get
        {
            return Buffer.GetBytes(BufferColumnIndexes[0]);
        }
    }
    public bool MD5_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public Byte[] RipeMD160
    {
        get
        {
            return Buffer.GetBytes(BufferColumnIndexes[1]);
        }
    }
    public bool RipeMD160_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public Byte[] SHA1
    {
        get
        {
            return Buffer.GetBytes(BufferColumnIndexes[2]);
        }
    }
    public bool SHA1_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public Byte[] ColumnNull
    {
        get
        {
            return Buffer.GetBytes(BufferColumnIndexes[3]);
        }
    }
    public bool ColumnNull_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public Byte[] ColumnNone
    {
        get
        {
            return Buffer.GetBytes(BufferColumnIndexes[4]);
        }
    }
    public bool ColumnNone_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public Byte[] SHA256
    {
        get
        {
            return Buffer.GetBytes(BufferColumnIndexes[5]);
        }
    }
    public bool SHA256_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public Byte[] SHA384
    {
        get
        {
            return Buffer.GetBytes(BufferColumnIndexes[6]);
        }
    }
    public bool SHA384_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public Byte[] SHA512
    {
        get
        {
            return Buffer.GetBytes(BufferColumnIndexes[7]);
        }
    }
    public bool SHA512_IsNull
    {
        get
        {
            return IsNull(7);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:ProjectId>{4F8B415D-E281-4F03-B3BC-F32C489D9EB0}</msb:ProjectId>
		<msb:NoContent>Reference;Import;Folder</msb:NoContent>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>sc_f5b5c89c93cf47cd89c7f423da791594</msb:DisplayName>
		<msb:CodeName>sc_f5b5c89c93cf47cd89c7f423da791594</msb:CodeName>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:Project Include="sc_f5b5c89c93cf47cd89c7f423da791594.csproj"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_f5b5c89c93cf47cd89c7f423da791594.csproj.Properties.Settings.get_Default():SC_f5b5c89c93cf47cd89c7f423da791594.csproj.Properties.Sett" +
    "ings")]

namespace SC_f5b5c89c93cf47cd89c7f423da791594.csproj.Properties
{


    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase
    {

        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();

        public static Settings Default
        {
            get
            {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[sc_f5b5c89c93cf47cd89c7f423da791594.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <NoStandardLibraries>false</NoStandardLibraries>
    <RootNamespace>SC_f5b5c89c93cf47cd89c7f423da791594.csproj</RootNamespace>
    <AssemblyName>SC_1833C06DDAB443E0ABBE2AC53CA043E9</AssemblyName>
    <ProjectGuid>{82C59351-4B4F-4F49-8A9C-279886F7CA7B}</ProjectGuid>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent></PreBuildEvent>
    <PostBuildEvent></PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
    <Compile Include="main.cs" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to the add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="SSIS_ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
  <PropertyGroup>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
  </PropertyGroup>
  <PropertyGroup>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_f5b5c89c93cf47cd89c7f423da791594.csproj")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_f5b5c89c93cf47cd89c7f423da791594.csproj")]
[assembly: AssemblyCopyright("Copyright @  2011")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_f5b5c89c93cf47cd89c7f423da791594.csproj.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_f5b5c89c93cf47cd89c7f423da791594.csproj.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_f5b5c89c93cf47cd89c7f423da791594.csproj.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_f5b5c89c93cf47cd89c7f423da791594.csproj.Properties
{


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources
    {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources()
        {
        }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager
        {
            get
            {
                if ((resourceMan == null))
                {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_f5b5c89c93cf47cd89c7f423da791594.csproj.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture
        {
            get
            {
                return resourceCulture;
            }
            set
            {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_1833C06DDAB443E0ABBE2AC53CA043E9.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDADcLj1MAAAAAAAAAAOAAAiELAQsAAB4AAAAIAAAAAAAADj0A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAALQ8AABXAAAAAEAAACgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAFB0AAAAgAAAAHgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAACgEAAAAQAAAAAYAAAAgAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAJgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAADw
PAAAAAAAAEgAAAACAAUAiCYAACwWAAABAAAAAAAAANAlAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAACoCAwQFKA0AAAoqUgJ7DgAACgJ7DwAAChaUbxAAAAoqIgIW
KBEAAAoqUgJ7DgAACgJ7DwAACheUbxAAAAoqIgIXKBEAAAoqUgJ7DgAACgJ7DwAAChiUbxAAAAoq
IgIYKBEAAAoqUgJ7DgAACgJ7DwAAChmUbxAAAAoqIgIZKBEAAAoqUgJ7DgAACgJ7DwAAChqUbxAA
AAoqIgIaKBEAAAoqUgJ7DgAACgJ7DwAAChuUbxAAAAoqIgIbKBEAAAoqUgJ7DgAACgJ7DwAAChyU
bxAAAAoqIgIcKBEAAAoqUgJ7DgAACgJ7DwAACh2UbxAAAAoqIgIdKBEAAAoqHgIoEgAACioeAigT
AAAKKn4CKBQAAAoCAnMYAAAGfQEAAAQCAnMZAAAGfQIAAAQqkgRyAQAAcBpvFQAACiwVAgUCAygW
AAAKDgRzAQAABm8WAAAGKkorBwIDbxcAAAYDbxIAAAYt8SoGKjoCKBcAAAoCA30DAAAEKjoCKBcA
AAoCA30EAAAEKh4CKBkAAAoqHgIoGgAACioAAAAAAIxh5RsZMLu6J96/D3F2I77ic/x5NKk5Urfi
7Kghr+KgfACjiQAAAAADTYxEGrTvxQzPIjoaPonOKTBkPQAAAAA0+VcAQxU2wyWzpcbCIphMwh5U
oqgm0CdEPLR2cEvqYcfoTG53yWO+nJyuIbpUZmLsgSE4M9XcPhrx9nPFtjX4clrsJh31QMZ33blO
CiQcR3I9nw5DZ0sHyUOv33CienWACLuX3l9uqc2pLxtjCO+uSnQb58yOAtc9e9p4fZR+RxAxi/nL
wP0dKMBMlB32PWITMAcAmAIAAAEAABEXCh8QjRgAAAEl0AgAAAQoHAAACgsfFI0YAAABJdAJAAAE
KBwAAAoMHxSNGAAAASXQCgAABCgcAAAKDR8gjRgAAAEl0AsAAAQoHAAAChMEHzCNGAAAASXQDAAA
BCgcAAAKEwUfQI0YAAABJdANAAAEKBwAAAoTBheNGAAAARMPEQ8TBxYTCCs/A28CAAAGEQiPGAAA
AQcRCJEoHQAACiwhAigeAAAKH2RyEQAAcHJfAABwfh8AAAoWEgBvIAAACisNEQgXWBMIEQgHjmky
uhYTCSs/A28EAAAGEQmPGAAAAQgRCZEoHQAACiwhAigeAAAKH2RyEQAAcHJ/AABwfh8AAAoWEgBv
IAAACisNEQkXWBMJEQkIjmkyuhYTCis/A28GAAAGEQqPGAAAAQkRCpEoHQAACiwhAigeAAAKH2Ry
EQAAcHKrAABwfh8AAAoWEgBvIAAACisNEQoXWBMKEQoJjmkyuhYTCytAA28MAAAGEQuPGAAAAREE
EQuRKB0AAAosIQIoHgAACh9kchEAAHByzQAAcH4fAAAKFhIAbyAAAAorDhELF1gTCxELEQSOaTK4
FhMMK0ADbw4AAAYRDI8YAAABEQURDJEoHQAACiwhAigeAAAKH2RyEQAAcHLzAABwfh8AAAoWEgBv
IAAACisOEQwXWBMMEQwRBY5pMrgWEw0rQANvEAAABhENjxgAAAERBhENkSgdAAAKLCECKB4AAAof
ZHIRAABwchkBAHB+HwAAChYSAG8gAAAKKw4RDRdYEw0RDREGjmkyuBYTDis/A28KAAAGEQ6PGAAA
AREHEQ6RKB0AAAosIAIoHgAACh9kchEAAHByPwEAcH4fAAAKFhIAbyAAAAoqEQ4XWBMOEQ4RB45p
MrkqHgIoFAAABioeAigXAAAKKhMwAgAtAAAAAgAAEX4FAAAELSByYQEAcNAHAAACKCIAAApvIwAA
CnMkAAAKCgaABQAABH4FAAAEKhp+BgAABCoeAoAGAAAEKhp+BwAABCoucyMAAAaABwAABCoeAigm
AAAKKgC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFkZXIsIG1z
Y29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49
Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNldAIAAAAA
AAAAAAAAAFBBRFBBRFC0AAAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBsAAAAwAcA
ACN+AAAsCAAAHAoAACNTdHJpbmdzAAAAAEgSAADkAQAAI1VTACwUAAAQAAAAI0dVSUQAAAA8FAAA
8AEAACNCbG9iAAAAAAAAAAIAAAFXlaIhCQMAAAD6JTMAFgAAAQAAACQAAAAOAAAADQAAACQAAAAN
AAAAJgAAABAAAAAFAAAAAgAAAAMAAAATAAAAFAAAAAYAAAABAAAABQAAAAEAAAAFAAAAAAAKAAEA
AAAAAAYA9QDUAAYAAgHUAAoAIgEbAQ4APgEpARIAdwHUAAYAhgHUAAoAxgO1AwoA9wPiAwoA0AS2
BAoA+wTpBAoAEgXpBAoALwXpBAoATgXpBAoAZwXpBAoAgAXpBAoAmwXpBAoAtgXpBAoAzwXpBAoA
CAboBQoAKAboBQoAegYbAQoAgQYbAQYAqgbUAAoA0QYbAQoAGwfoBQoANgcbAQoAcQfoBQoAgAcb
AQoAhgcbARYA2AivCAoAKgkXCQoARwkbAQoATAkbAQoAcAnpBA4AnAmGCQ4AtQmGCQAAAAABAAAA
AAABAAEAAQAQADIAAAAFAAEAAQABABAAPwAAAAkAAQAUAAEAEABNAAAADQADABgAAQAQAFkAAAAN
AAQAGQABABAAYwAAAAwABQAaAAAAEABuAHgADQAFAB4AAAEQAK4AeAARAAcAIgAAAAAA1gYAAA0A
CAAlABMBAABABwAAaQAOACUAEwEAAKkHAABpAA4AJQATAQAA7gcAAGkADgAlABMBAAAfCAAAaQAO
ACUAEwEAAFAIAABpAA4AJQAGAE0ALwAGAFkAMwABAI4DSwABAI4DSwARANYDVQARAAMEWQARAEcE
dwATAV0HtAATAcYHwAATAdoHwAATAQsIxAATATwIyAATAW0IzABQIAAAAACGGJQBEwABAFsgAAAA
AIYImgEdAAQAcCAAAAAAhgiiASIABAB5IAAAAACGCLEBHQAEAI4gAAAAAIYIvwEiAAQAlyAAAAAA
hgjUAR0ABACsIAAAAACGCN0BIgAEALUgAAAAAIYI7QEdAAQAyiAAAAAAhgj8ASIABADTIAAAAACG
CBICHQAEAOggAAAAAIYIIQIiAAQA8SAAAAAAhgg3Ah0ABAAGIQAAAACGCEICIgAEAA8hAAAAAIYI
VAIdAAQAJCEAAAAAhghfAiIABAAtIQAAAACGCHECHQAEAEIhAAAAAIYIfAIiAAQASyEAAAAAhgCO
AiIABABTIQAAAACGAJYCIgAEAFshAAAAAIYYlAE3AAQAeyEAAAAAxgBWAzsABACgIQAAAADGAWMD
RQAIALMhAAAAAMYBdwNFAAkAtSEAAAAAhhiUAU8ACgDEIQAAAACGGJQBTwALANMhAAAAAMYAngM3
AAwA2yEAAAAAxgCpAzcADAC4IgAAAADGAHcDRQAMAFwlAAAAAIYYlAE3AA0AZCUAAAAAgxiUATcA
DQBsJQAAAACTCBMEXQANAKUlAAAAAJMIJwRiAA0ArCUAAAAAkwgzBGcADQC0JQAAAACWCFcEewAO
AMclAAAAAIYYlAE3AA4AuyUAAAAAkRjKCS8BDgAAAAEAawQAAAIAcgQAAAMAhgQAAAEAkAQAAAIA
mAQAAAMAawQAAAQAhgQAAAEAawQAAAEAogQAAAEApgQAAAEApgQAAAEAogQAAAEAsARJAJQBhQBR
AJQBhQBZAJQBhQBhAJQBhQBpAJQBhQBxAJQBhQB5AJQBhQCBAJQBhQCJAJQBhQCRAJQBhQCZAJQB
igChAJQBNwAJAJQBEwAJAGsEjwAJAHIEkwApAGoGlwAJAHMGnQAJAI4CIgAJAJYCIgARAJQBNwCp
AJIGogARAJkGqQAZAJQBNwC5AJQBNwARAJ4DNwARAKkDNwDJAJQBNwDZAJkHuADBAIEI0AARAPEI
1QCpAAcJ2gDxAA0J3QD5AJQBNwABAV4JAwEBAXkJDAE5AJQBEgEZAZQBHwEhAJQBNwAuABMAewEu
ABsAqwEuAGMA0QEuACMAqwEuAAsAMwEuACsAqwEuADMAewEuADsAsQEuAEMAqwEuAFsAyAHDAMMA
rwDhANsArwDjAAsBrwAjAdsArwApAisBJgFJAisBJgEBABAAAAAKAAEAFAAAAAsAAQAgAAAADAAB
ADAAAAANAAEAQAAAAA4A6AAaAQIAAQAHABEACAATAAAAogImAAAApgIrAAAAsQImAAAAuwIrAAAA
zAImAAAA0QIrAAAA3QImAAAA6AIrAAAA+gImAAAABQMrAAAAFwMmAAAAHgMrAAAALAMmAAAAMwMr
AAAAQQMmAAAASAMrAAAAxgNtAAAAPwRyAAAAYwSAAAIAAgADAAIAAwAFAAIABAAHAAIABQAJAAIA
BgALAAIABwANAAIACAAPAAIACQARAAIACgATAAIACwAVAAIADAAXAAIADQAZAAIADgAbAAIADwAd
AAIAEAAfAAIAEQAhAAIAHwAjAAIAIAAlAAEAIQAlAAIAIgAnAOghAAAIAPghAAAJABAiAAAKACgi
AAALAEgiAAAMAHgiAAANAASAAAABAAAAlBQrmwAAAAAAAEYGAAALAAAAAAAAAAAAAAABALcAAAAA
AAQAAAAAAAAAAAAAAAoAEgEAAAAABAAAAAAAAAAAAAAACgAbAQAAAAALAAAAAAAAAAAAAAABAFYB
AAAAAAsAAAAAAAAAAAAAAAEAiwgAAAAAAAAAAAEAAADRCQAACgAJAAsACQAMAAkADQAJAA4ACQAA
AAA8TW9kdWxlPgBTQ18xODMzQzA2RERBQjQ0M0UwQUJCRTJBQzUzQ0EwNDNFOS5kbGwASW5wdXQw
QnVmZmVyAFVzZXJDb21wb25lbnQAQ29ubmVjdGlvbnMAVmFyaWFibGVzAFNjcmlwdE1haW4AUmVz
b3VyY2VzAFNDX2Y1YjVjODljOTNjZjQ3Y2Q4OWM3ZjQyM2RhNzkxNTk0LmNzcHJvai5Qcm9wZXJ0
aWVzAFNldHRpbmdzAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuVHhTY3JpcHQATWljcm9zb2Z0LlNxbFNl
cnZlci5EdHMuUGlwZWxpbmUAU2NyaXB0QnVmZmVyAFNjcmlwdENvbXBvbmVudABtc2NvcmxpYgBT
eXN0ZW0AT2JqZWN0AFN5c3RlbS5Db25maWd1cmF0aW9uAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNl
AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AFBpcGVsaW5lQnVmZmVyAE91dHB1dE5h
bWVNYXAALmN0b3IAZ2V0X01ENQBnZXRfTUQ1X0lzTnVsbABnZXRfUmlwZU1EMTYwAGdldF9SaXBl
TUQxNjBfSXNOdWxsAGdldF9TSEExAGdldF9TSEExX0lzTnVsbABnZXRfQ29sdW1uTnVsbABnZXRf
Q29sdW1uTnVsbF9Jc051bGwAZ2V0X0NvbHVtbk5vbmUAZ2V0X0NvbHVtbk5vbmVfSXNOdWxsAGdl
dF9TSEEyNTYAZ2V0X1NIQTI1Nl9Jc051bGwAZ2V0X1NIQTM4NABnZXRfU0hBMzg0X0lzTnVsbABn
ZXRfU0hBNTEyAGdldF9TSEE1MTJfSXNOdWxsAE5leHRSb3cARW5kT2ZSb3dzZXQATUQ1AE1ENV9J
c051bGwAUmlwZU1EMTYwAFJpcGVNRDE2MF9Jc051bGwAU0hBMQBTSEExX0lzTnVsbABDb2x1bW5O
dWxsAENvbHVtbk51bGxfSXNOdWxsAENvbHVtbk5vbmUAQ29sdW1uTm9uZV9Jc051bGwAU0hBMjU2
AFNIQTI1Nl9Jc051bGwAU0hBMzg0AFNIQTM4NF9Jc051bGwAU0hBNTEyAFNIQTUxMl9Jc051bGwA
UHJvY2Vzc0lucHV0AElucHV0MF9Qcm9jZXNzSW5wdXQASW5wdXQwX1Byb2Nlc3NJbnB1dFJvdwBQ
YXJlbnRDb21wb25lbnQAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0ZQBTeXN0ZW0uUmVzb3VyY2VzAFJl
c291cmNlTWFuYWdlcgByZXNvdXJjZU1hbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBDdWx0dXJlSW5m
bwByZXNvdXJjZUN1bHR1cmUAZ2V0X1Jlc291cmNlTWFuYWdlcgBnZXRfQ3VsdHVyZQBzZXRfQ3Vs
dHVyZQBDdWx0dXJlAGRlZmF1bHRJbnN0YW5jZQBnZXRfRGVmYXVsdABEZWZhdWx0AEJ1ZmZlcgBC
dWZmZXJDb2x1bW5JbmRleGVzAE91dHB1dE1hcABJbnB1dElEAElucHV0TmFtZQBSb3cAQ29tcG9u
ZW50AHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVGFyZ2V0RnJhbWV3b3JrQXR0cmli
dXRlAFN5c3RlbS5SZWZsZWN0aW9uAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlEZXNj
cmlwdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlD
b21wYW55QXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdo
dEF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBBc3NlbWJseUN1bHR1cmVBdHRy
aWJ1dGUAQXNzZW1ibHlWZXJzaW9uQXR0cmlidXRlAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2Vy
dmljZXMAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0
eUF0dHJpYnV0ZQBTQ18xODMzQzA2RERBQjQ0M0UwQUJCRTJBQzUzQ0EwNDNFOQBHZXRCeXRlcwBJ
c051bGwAU3RyaW5nAFN0cmluZ0NvbXBhcmlzb24ARXF1YWxzAEdldENvbHVtbkluZGV4ZXMAU1NJ
U1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUAQnl0ZQA8UHJpdmF0ZUltcGxlbWVu
dGF0aW9uRGV0YWlscz57MURERkY3MDAtQTUyOC00NUZBLTg0ODktNkZCMEREMDc4NDJEfQBDb21w
aWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBWYWx1ZVR5cGUAX19TdGF0aWNBcnJheUluaXRUeXBlU2l6
ZT0xNgAkJG1ldGhvZDB4NjAwMDAxYy0xAFJ1bnRpbWVIZWxwZXJzAEFycmF5AFJ1bnRpbWVGaWVs
ZEhhbmRsZQBJbml0aWFsaXplQXJyYXkAX19TdGF0aWNBcnJheUluaXRUeXBlU2l6ZT0yMAAkJG1l
dGhvZDB4NjAwMDAxYy0yACQkbWV0aG9kMHg2MDAwMDFjLTMAX19TdGF0aWNBcnJheUluaXRUeXBl
U2l6ZT0zMgAkJG1ldGhvZDB4NjAwMDAxYy00AF9fU3RhdGljQXJyYXlJbml0VHlwZVNpemU9NDgA
JCRtZXRob2QweDYwMDAwMWMtNQBfX1N0YXRpY0FycmF5SW5pdFR5cGVTaXplPTY0ACQkbWV0aG9k
MHg2MDAwMDFjLTYAQ29tcGFyZVRvAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRFRTUGlwZWxpbmVXcmFw
AE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlBpcGVsaW5lLldyYXBwZXIASURUU0NvbXBvbmVudE1l
dGFEYXRhMTAwAGdldF9Db21wb25lbnRNZXRhRGF0YQBFbXB0eQBGaXJlRXJyb3IAU3lzdGVtLkRp
YWdub3N0aWNzAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUAVHlwZQBSdW50aW1lVHlwZUhh
bmRsZQBHZXRUeXBlRnJvbUhhbmRsZQBBc3NlbWJseQBnZXRfQXNzZW1ibHkAU3lzdGVtLkNvbXBv
bmVudE1vZGVsAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQAu
Y2N0b3IAU0NfZjViNWM4OWM5M2NmNDdjZDg5YzdmNDIzZGE3OTE1OTQuY3Nwcm9qLlByb3BlcnRp
ZXMuUmVzb3VyY2VzLnJlc291cmNlcwAAAA9JAG4AcAB1AHQAIAAwAABNVgBhAGwAaQBkAGEAdABl
ACAATQB1AGwAdABpAHAAbABlACAASABhAHMAaAAgAFMAYQBmAGUAIABOAG8AdAAgAFQAaAByAGUA
YQBkAAAfTQBEADUAIABIAGEAcwBoACAAaQBzACAAQgBBAEQAACtSAGkAcABlAE0ARAAxADYAMAAg
AEgAYQBzAGgAIABpAHMAIABCAEEARAAAIVMASABBADEAIABIAGEAcwBoACAAaQBzACAAQgBBAEQA
ACVTAEgAQQAyADUANgAgAEgAYQBzAGgAIABpAHMAIABCAEEARAAAJVMASABBADMAOAA0ACAASABh
AHMAaAAgAGkAcwAgAEIAQQBEAAAlUwBIAEEANQAxADIAIABIAGEAcwBoACAAaQBzACAAQgBBAEQA
ACFOAG8AbgBlACAASABhAHMAaAAgAGkAcwAgAEIAQQBEAAB/UwBDAF8AZgA1AGIANQBjADgAOQBj
ADkAMwBjAGYANAA3AGMAZAA4ADkAYwA3AGYANAAyADMAZABhADcAOQAxADUAOQA0AC4AYwBzAHAA
cgBvAGoALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIAYwBlAHMAAAAAAAD33x0o
pfpFhIlvsN0HhC0ACImEXc2AgMyRCLd6XFYZNOCJCSADARIVHQgSGQQgAB0FAyAAAgQoAB0FAygA
AgMGEhADBhIUAyAAAQkgBAEIDhIVEhkFIAEBEggDBhIJBSABARIJAwYSHQMGEiEEAAASHQQAABIh
BQABARIhBAgAEh0ECAASIQMGEiAEAAASIAQIABIgBCABAQ4EIAEBCAMGEhUDBh0IBSABHQUIBCAB
AggGIAICDhFZBSABHQgIBAEAAAADBhEoBwACARJxEXUDBhEsAwYRMAMGETQDBhE4BCABCAUEIAAS
eQIGDgogBgEIDg4OCBACGgcQAh0FHQUdBR0FHQUdBR0FCAgICAgICB0FCAABEoCBEYCFBSAAEoCJ
ByACAQ4SgIkEBwESHQYgAQERgJEIAQACAAAAAAADAAABRwEAGi5ORVRGcmFtZXdvcmssVmVyc2lv
bj12NC4wAQBUDhRGcmFtZXdvcmtEaXNwbGF5TmFtZRAuTkVUIEZyYW1ld29yayA0LwEAKlNDX2Y1
YjVjODljOTNjZjQ3Y2Q4OWM3ZjQyM2RhNzkxNTk0LmNzcHJvagAABQEAAAAAFgEAEUNvcHlyaWdo
dCBAICAyMDExAAAIAQAIAAAAAAAeAQABAFQCFldyYXBOb25FeGNlcHRpb25UaHJvd3MB3DwAAAAA
AAAAAAAA/jwAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPA8AAAAAAAAAAAAAAAAAAAAAAAAAABf
Q29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEA
EAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABY
QAAA0AMAAAAAAAAAAAAA0AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E
7/4AAAEAAAABACublBQAAAEAK5uUFD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBW
AGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAA
AACwBDADAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAAwDAAABADAAMAAwADAAMAA0
AGIAMAAAAIAAKwABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwBmADUA
YgA1AGMAOAA5AGMAOQAzAGMAZgA0ADcAYwBkADgAOQBjADcAZgA0ADIAMwBkAGEANwA5ADEANQA5
ADQALgBjAHMAcAByAG8AagAAAAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4A
MAAuADUAMgA2ADgALgAzADkANwAyADMAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBl
AAAAUwBDAF8AMQA4ADMAMwBDADAANgBEAEQAQQBCADQANAAzAEUAMABBAEIAQgBFADIAQQBDADUA
MwBDAEEAMAA0ADMARQA5AC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBo
AHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADEAAAB4ACgAAQBPAHIAaQBnAGkA
bgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8AMQA4ADMAMwBDADAANgBEAEQAQQBCADQANAAz
AEUAMABBAEIAQgBFADIAQQBDADUAMwBDAEEAMAA0ADMARQA5AC4AZABsAGwAAAB4ACsAAQBQAHIA
bwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfAGYANQBiADUAYwA4ADkAYwA5ADMAYwBmADQANwBj
AGQAOAA5AGMANwBmADQAMgAzAGQAYQA3ADkAMQA1ADkANAAuAGMAcwBwAHIAbwBqAAAAAABEAA8A
AQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADUAMgA2ADgALgAzADkANwAy
ADMAAAAAAEgADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADUA
MgA2ADgALgAzADkANwAyADMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAABA9AAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_1833c06ddab443e0abbe2ac53ca043e9</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.SqlServer.Dts.Pipeline.ScriptComponentHost, Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum"
                  typeConverter="NOTBROWSABLE">9e2b61ae61a6a7c03607832565100ed9</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Data Flow Task\Script Test Safe On.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Script Test Safe On.Inputs[Input 0].Columns[MD5]"
                      cachedDataType="bytes"
                      cachedLength="16"
                      cachedName="MD5"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe On.Outputs[HashedOutput].Columns[MD5]"
                      name="MD5" />
                    <inputColumn
                      refId="Package\Data Flow Task\Script Test Safe On.Inputs[Input 0].Columns[RipeMD160]"
                      cachedDataType="bytes"
                      cachedLength="20"
                      cachedName="RipeMD160"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe On.Outputs[HashedOutput].Columns[RipeMD160]"
                      name="RipeMD160" />
                    <inputColumn
                      refId="Package\Data Flow Task\Script Test Safe On.Inputs[Input 0].Columns[SHA1]"
                      cachedDataType="bytes"
                      cachedLength="20"
                      cachedName="SHA1"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe On.Outputs[HashedOutput].Columns[SHA1]"
                      name="SHA1" />
                    <inputColumn
                      refId="Package\Data Flow Task\Script Test Safe On.Inputs[Input 0].Columns[ColumnNull]"
                      cachedDataType="bytes"
                      cachedLength="20"
                      cachedName="Null"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe On.Outputs[HashedOutput].Columns[Null]"
                      name="ColumnNull" />
                    <inputColumn
                      refId="Package\Data Flow Task\Script Test Safe On.Inputs[Input 0].Columns[ColumnNone]"
                      cachedDataType="bytes"
                      cachedLength="16"
                      cachedName="None"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe On.Outputs[HashedOutput].Columns[None]"
                      name="ColumnNone" />
                    <inputColumn
                      refId="Package\Data Flow Task\Script Test Safe On.Inputs[Input 0].Columns[SHA256]"
                      cachedDataType="bytes"
                      cachedLength="32"
                      cachedName="SHA256"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe On.Outputs[HashedOutput].Columns[SHA256]"
                      name="SHA256" />
                    <inputColumn
                      refId="Package\Data Flow Task\Script Test Safe On.Inputs[Input 0].Columns[SHA384]"
                      cachedDataType="bytes"
                      cachedLength="48"
                      cachedName="SHA384"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe On.Outputs[HashedOutput].Columns[SHA384]"
                      name="SHA384" />
                    <inputColumn
                      refId="Package\Data Flow Task\Script Test Safe On.Inputs[Input 0].Columns[SHA512]"
                      cachedDataType="bytes"
                      cachedLength="64"
                      cachedName="SHA512"
                      lineageId="Package\Data Flow Task\Multiple Hash Safe On.Outputs[HashedOutput].Columns[SHA512]"
                      name="SHA512" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
            </component>
            <component
              refId="Package\Data Flow Task\Script Test UnSafe Not Threaded"
              componentClassID="{874F7595-FB5F-40FF-96AF-FBFF8250E3EF}"
              contactInfo="Executes a custom script.;Microsoft Corporation; Microsoft SqlServer v10; © 2007 Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;4"
              description="Executes a custom script."
              localeId="3081"
              name="Script Test UnSafe Not Threaded"
              version="8">
              <properties>
                <property
                  dataType="System.String"
                  description="Stores the source code of the component"
                  isArray="true"
                  name="SourceCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="30">
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.settings]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.resx]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[main.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* Microsoft SQL Server Integration Services Script Component
*  Write scripts using Microsoft Visual C# 2008.
*  ScriptMain is the entry point class of the script.*/

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

[Microsoft.SqlServer.Dts.Pipeline.SSISScriptComponentEntryPointAttribute]
public class ScriptMain : UserComponent
{

    public override void PreExecute()
    {
        base.PreExecute();
        /*
          Add your code here for preprocessing or remove if not needed
        */
    }

    public override void PostExecute()
    {
        base.PostExecute();
        /*
          Add your code here for postprocessing or remove if not needed
          You can set read/write variables here, for example:
          Variables.MyIntVar = 100
        */
    }

    public override void Input0_ProcessInputRow(Input0Buffer Row)
    {
        Boolean bCancel = true;
        byte[] bMD5 = { 0x56, 0x08, 0xA3, 0x54, 0x11, 0x97, 0x69, 0x67, 0xE3, 0x3F, 0x8A, 0xC5, 0x9E, 0x69, 0x88, 0x3D };
        byte[] bRipeMD160 = { 0x82, 0x3D, 0xB3, 0x4B, 0x03, 0x2C, 0x1F, 0xDB, 0x09, 0xCE, 0x48, 0x96, 0x2B, 0xF7, 0x2D, 0x4B, 0xD1, 0x6F, 0x97, 0x1A };
        byte[] bSHA1 = { 0xB1, 0x15, 0xB0, 0x36, 0x27, 0xC1, 0xB7, 0x44, 0x9B, 0x1A, 0x7E, 0x58, 0xDE, 0x96, 0x2B, 0x86, 0x7A, 0xC6, 0xE2, 0xDF };
        byte[] bSHA256 = { 0x75, 0xD1, 0x23, 0x24, 0x3A, 0xB3, 0x76, 0xF3, 0xE4, 0x46, 0x47, 0xCE, 0xA7, 0x34, 0x91, 0xB8, 0xE7, 0xBF, 0xFC, 0xB2, 0xFD, 0xDF, 0x0F, 0x5D, 0x5C, 0x64, 0x9E, 0xBB, 0x30, 0x54, 0xA9, 0x50 };
        byte[] bSHA384 = { 0x9C, 0xDE, 0x12, 0x33, 0xD7, 0x90, 0xB4, 0xA5, 0x38, 0xEC, 0xFE, 0x6B, 0xE1, 0xEF, 0x53, 0x75, 0x90, 0x4D, 0xEE, 0xF6, 0x11, 0xD0, 0x1A, 0x1A, 0x00, 0x38, 0x6D, 0x35, 0x4E, 0xBC, 0x4D, 0x11, 0x49, 0xB6, 0xE7, 0xB3, 0x3D, 0x95, 0x97, 0x00, 0x3E, 0x4D, 0xD2, 0x78, 0xA3, 0x3C, 0xAD, 0x7B };
        byte[] bSHA512 = { 0x53, 0x4F, 0xC9, 0x84, 0x65, 0x64, 0xC5, 0x23, 0xC7, 0x50, 0xA9, 0x1D, 0x39, 0x27, 0x0F, 0x41, 0x53, 0xA6, 0x0E, 0x28, 0xBA, 0x45, 0x70, 0xAC, 0x1A, 0x69, 0xBF, 0xDF, 0x79, 0x93, 0x1A, 0xCE, 0x3D, 0x6A, 0x2B, 0x8A, 0x92, 0xB9, 0xDC, 0xD1, 0xA6, 0xB7, 0x66, 0x84, 0x30, 0xFD, 0x38, 0x56, 0x32, 0xD7, 0xB6, 0x4F, 0xAB, 0x63, 0x4D, 0x9B, 0x71, 0x5D, 0xD7, 0x79, 0xDD, 0xE7, 0x3E, 0x9D };
        byte[] bNone = { 0x00 };
        byte[] bNull = { 0xDA, 0x39, 0xA3, 0xEE, 0x5E, 0x6B, 0x4B, 0x0D, 0x32, 0x55, 0xBF, 0xEF, 0x95, 0x60, 0x18, 0x90, 0xAF, 0xD8, 0x07, 0x09 };



        for (int i = 0; i < bMD5.Length; i++)
        {
            if (Row.MD5[i].CompareTo(bMD5[i]) != 0)
            {
                this.ComponentMetaData.FireError(100, "Validate Multiple Hash Safe Not Thread", "MD5 Hash is BAD", string.Empty, 0, out bCancel);
                break;
            }
        }

        for (int i = 0; i < bRipeMD160.Length; i++)
        {
            if (Row.RipeMD160[i].CompareTo(bRipeMD160[i]) != 0)
            {
                this.ComponentMetaData.FireError(100, "Validate Multiple Hash Safe Not Thread", "RipeMD160 Hash is BAD", string.Empty, 0, out bCancel);
                break;
            }
        }

        for (int i = 0; i < bSHA1.Length; i++)
        {
            if (Row.SHA1[i].CompareTo(bSHA1[i]) != 0)
            {
                this.ComponentMetaData.FireError(100, "Validate Multiple Hash Safe Not Thread", "SHA1 Hash is BAD", string.Empty, 0, out bCancel);
                break;
            }
        }
        for (int i = 0; i < bSHA256.Length; i++)
        {
            if (Row.SHA256[i].CompareTo(bSHA256[i]) != 0)
            {
                this.ComponentMetaData.FireError(100, "Validate Multiple Hash Safe Not Thread", "SHA256 Hash is BAD", string.Empty, 0, out bCancel);
                break;
            }
        }
        for (int i = 0; i < bSHA384.Length; i++)
        {
            if (Row.SHA384[i].CompareTo(bSHA384[i]) != 0)
            {
                this.ComponentMetaData.FireError(100, "Validate Multiple Hash Safe Not Thread", "SHA384 Hash is BAD", string.Empty, 0, out bCancel);
                break;
            }
        }
        for (int i = 0; i < bSHA512.Length; i++)
        {
            if (Row.SHA512[i].CompareTo(bSHA512[i]) != 0)
            {
                this.ComponentMetaData.FireError(100, "Validate Multiple Hash Safe Not Thread", "SHA512 Hash is BAD", string.Empty, 0, out bCancel);
                break;
            }
        }
        for (int i = 0; i < bNone.Length; i++)
        {
            if (Row.ColumnNone[i].CompareTo(bNone[i]) != 0)
            {
                this.ComponentMetaData.FireError(100, "Validate Multiple Hash Safe Not Thread", "None Hash is BAD", string.Empty, 0, out bCancel);
                break;
            }
        }
        for (int i = 0; i < bNull.Length; i++)
        {
            if (Row.ColumnNull[i].CompareTo(bNull[i]) != 0)
            {
                this.ComponentMetaData.FireError(100, "Validate Multiple Hash Safe Not Thread", "Null Hash is BAD", string.Empty, 0, out bCancel);
                break;
            }
        }
    
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[BufferWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services buffer wrappers
*  This module defines classes for accessing data flow buffers
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */



using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;

public class Input0Buffer: ScriptBuffer

{
    public Input0Buffer(PipelineBuffer Buffer, int[] BufferColumnIndexes, OutputNameMap OutputMap)
        : base(Buffer, BufferColumnIndexes, OutputMap)
    {
    }

    public Byte[] MD5
    {
        get
        {
            return Buffer.GetBytes(BufferColumnIndexes[0]);
        }
    }
    public bool MD5_IsNull
    {
        get
        {
            return IsNull(0);
        }
    }

    public Byte[] RipeMD160
    {
        get
        {
            return Buffer.GetBytes(BufferColumnIndexes[1]);
        }
    }
    public bool RipeMD160_IsNull
    {
        get
        {
            return IsNull(1);
        }
    }

    public Byte[] SHA1
    {
        get
        {
            return Buffer.GetBytes(BufferColumnIndexes[2]);
        }
    }
    public bool SHA1_IsNull
    {
        get
        {
            return IsNull(2);
        }
    }

    public Byte[] ColumnNull
    {
        get
        {
            return Buffer.GetBytes(BufferColumnIndexes[3]);
        }
    }
    public bool ColumnNull_IsNull
    {
        get
        {
            return IsNull(3);
        }
    }

    public Byte[] ColumnNone
    {
        get
        {
            return Buffer.GetBytes(BufferColumnIndexes[4]);
        }
    }
    public bool ColumnNone_IsNull
    {
        get
        {
            return IsNull(4);
        }
    }

    public Byte[] SHA256
    {
        get
        {
            return Buffer.GetBytes(BufferColumnIndexes[5]);
        }
    }
    public bool SHA256_IsNull
    {
        get
        {
            return IsNull(5);
        }
    }

    public Byte[] SHA384
    {
        get
        {
            return Buffer.GetBytes(BufferColumnIndexes[6]);
        }
    }
    public bool SHA384_IsNull
    {
        get
        {
            return IsNull(6);
        }
    }

    public Byte[] SHA512
    {
        get
        {
            return Buffer.GetBytes(BufferColumnIndexes[7]);
        }
    }
    public bool SHA512_IsNull
    {
        get
        {
            return IsNull(7);
        }
    }

    new public bool NextRow()
    {
        return base.NextRow();
    }

    new public bool EndOfRowset()
    {
        return base.EndOfRowset();
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[ComponentWrapper.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[/* THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT!
*  Microsoft SQL Server Integration Services component wrapper
*  This module defines the base class for your component
*  THIS IS AUTO-GENERATED CODE THAT WILL BE OVERWRITTEN! DO NOT EDIT! */

using System;
using System.Data;
using Microsoft.SqlServer.Dts.Pipeline;
using Microsoft.SqlServer.Dts.Pipeline.Wrapper;
using Microsoft.SqlServer.Dts.Runtime.Wrapper;

public class UserComponent: ScriptComponent
{
    public Connections Connections;
    public Variables Variables;
    public UserComponent()
    {
        Connections = new Connections(this);
        Variables = new Variables(this);
    }

    public override void ProcessInput(int InputID, string InputName, PipelineBuffer Buffer, OutputNameMap OutputMap)
    {

        if (InputName.Equals(@"Input 0", StringComparison.Ordinal))
        {
            Input0_ProcessInput(new Input0Buffer(Buffer, GetColumnIndexes(InputID), OutputMap));
        }

    }

    public virtual void Input0_ProcessInput(Input0Buffer Buffer)
    {
        while (Buffer.NextRow())
        {
            Input0_ProcessInputRow(Buffer);
        }
    }

    public virtual void Input0_ProcessInputRow(Input0Buffer Row)
    {
    }

}

public class Connections
{
    ScriptComponent ParentComponent;

    public Connections(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}

public class Variables
{
    ScriptComponent ParentComponent;

    public Variables(ScriptComponent Component)
    {
        ParentComponent = Component;
    }

}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Project]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="4.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:ProjectId>{3A63958F-F18A-4F96-8C79-0260F4C9D34D}</msb:ProjectId>
		<msb:NoContent>Reference;Import;Folder</msb:NoContent>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>sc_f5b5c89c93cf47cd89c7f423da791594</msb:DisplayName>
		<msb:CodeName>sc_f5b5c89c93cf47cd89c7f423da791594</msb:CodeName>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="BufferWrapper.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="ComponentWrapper.cs"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="main.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:Project Include="sc_f5b5c89c93cf47cd89c7f423da791594.csproj"/>
	</msb:ItemGroup>
</c:Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Settings.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_f5b5c89c93cf47cd89c7f423da791594.csproj.Properties.Settings.get_Default():SC_f5b5c89c93cf47cd89c7f423da791594.csproj.Properties.Sett" +
    "ings")]

namespace SC_f5b5c89c93cf47cd89c7f423da791594.csproj.Properties
{


    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase
    {

        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();

        public static Settings Default
        {
            get
            {
                return defaultInstance;
            }
        }
    }
}
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[sc_f5b5c89c93cf47cd89c7f423da791594.csproj]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF16LE]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[<?xml version="1.0" encoding="utf-16"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <!-- This section defines project-level properties.

       Configuration - Specifies whether the default configuration is Release or Debug.
       Platform - Specifies what CPU the output of this project can run on.
       OutputType - Must be "Library" for VSTA.
       NoStandardLibraries - Set to "false" for VSTA.
       RootNamespace - In C#, this specifies the namespace given to new files.
                       In Visual Basic, all objects are wrapped in this namespace at runtime.
       AssemblyName - Name of the output assembly.
  -->
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <OutputType>Library</OutputType>
    <NoStandardLibraries>false</NoStandardLibraries>
    <RootNamespace>SC_f5b5c89c93cf47cd89c7f423da791594.csproj</RootNamespace>
    <AssemblyName>SC_DD467AE2AFEA4C88B8DACDECC4B84E57</AssemblyName>
    <ProjectGuid>{82C59351-4B4F-4F49-8A9C-279886F7CA7B}</ProjectGuid>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Debug" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section defines properties that are set when the "Release" configuration is
       selected.

       DebugSymbols - If true, create symbols (.pdb). If false, do not create symbols.
       Optimize - If true, optimize the build output. If false, do not optimize.
       OutputPath - Output path of the project relative to the project file.
       EnableUnmanagedDebugging - If true, starting the debugger will attach both managed and unmanaged debuggers.
       DefineConstants - Constants defined for the preprocessor.
       Warning Level - Warning level for the compiler.
  -->
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <!-- This section enables pre- and post-build steps. However,
       it is recommended that MSBuild tasks be used instead of these properties.
  -->
  <PropertyGroup>
    <PreBuildEvent></PreBuildEvent>
    <PostBuildEvent></PostBuildEvent>
  </PropertyGroup>
  <!-- This sections specifies references for the project. -->
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.PipelineHost, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSPipelineWrap, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.DTSRuntimeWrap, Version=11.0.0.0, Culture=Neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <!-- This section defines the user source files that are part of the
       project.

       Compile - Specifies a source file to compile.
       EmbeddedResource - Specifies a .resx file for embedded resources.
       None - Specifies a file that is not to be passed to the compiler (for instance,
              a text file or XML file).
       AppDesigner - Specifies the directory where the application properties files can
                     be found.
  -->
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="BufferWrapper.cs" />
    <Compile Include="ComponentWrapper.cs" />
    <Compile Include="main.cs" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <!-- Include the default configuration information and metadata files for the add-in.
         These files are copied to the build output directory when the project is
         built, and the path to the configuration file is passed to the add-in on the command
         line when debugging.
    -->
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <!-- This section defines VSTA properties that describe the host-changable project properties. -->
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" />
        <Host Name="SSIS_ScriptComponent" IconIndex="0" />
        <ProjectClient>
          <HostIdentifier>SSIS_SC110</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
  <PropertyGroup>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
  </PropertyGroup>
  <PropertyGroup>
    <TargetFrameworkProfile></TargetFrameworkProfile>
  </PropertyGroup>
</Project>]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\AssemblyInfo.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("SC_f5b5c89c93cf47cd89c7f423da791594.csproj")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("")]
[assembly: AssemblyProduct("SC_f5b5c89c93cf47cd89c7f423da791594.csproj")]
[assembly: AssemblyCopyright("Copyright @  2011")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]
]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[Properties\Resources.Designer.cs]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[UTF8]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_f5b5c89c93cf47cd89c7f423da791594.csproj.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_f5b5c89c93cf47cd89c7f423da791594.csproj.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope = "member", Target = "SC_f5b5c89c93cf47cd89c7f423da791594.csproj.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace SC_f5b5c89c93cf47cd89c7f423da791594.csproj.Properties
{


    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources
    {

        private static global::System.Resources.ResourceManager resourceMan;

        private static global::System.Globalization.CultureInfo resourceCulture;

        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources()
        {
        }

        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager
        {
            get
            {
                if ((resourceMan == null))
                {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("SC_f5b5c89c93cf47cd89c7f423da791594.csproj.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }

        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture
        {
            get
            {
                return resourceCulture;
            }
            set
            {
                resourceCulture = value;
            }
        }
    }
}
]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Stores the binary representation of the component"
                  isArray="true"
                  name="BinaryCode"
                  state="cdata">
                  <arrayElements
                    arrayElementCount="2">
                    <arrayElement
                      dataType="System.String"><![CDATA[SC_DD467AE2AFEA4C88B8DACDECC4B84E57.dll]]></arrayElement>
                    <arrayElement
                      dataType="System.String"><![CDATA[TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDADgLj1MAAAAAAAAAAOAAAiELAQsAAB4AAAAIAAAAAAAAvj0A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAHA9AABLAAAAAEAAACgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAxB0AAAAgAAAAHgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAACgEAAAAQAAAAAYAAAAgAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAJgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACg
PQAAAAAAAEgAAAACAAUAACcAAHAWAAABAAAAAAAAAEgmAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAACoCAwQFKA0AAAoqUgJ7DgAACgJ7DwAAChaUbxAAAAoqIgIW
KBEAAAoqUgJ7DgAACgJ7DwAACheUbxAAAAoqIgIXKBEAAAoqUgJ7DgAACgJ7DwAAChiUbxAAAAoq
IgIYKBEAAAoqUgJ7DgAACgJ7DwAAChmUbxAAAAoqIgIZKBEAAAoqUgJ7DgAACgJ7DwAAChqUbxAA
AAoqIgIaKBEAAAoqUgJ7DgAACgJ7DwAAChuUbxAAAAoqIgIbKBEAAAoqUgJ7DgAACgJ7DwAAChyU
bxAAAAoqIgIcKBEAAAoqUgJ7DgAACgJ7DwAACh2UbxAAAAoqIgIdKBEAAAoqHgIoEgAACioeAigT
AAAKKn4CKBQAAAoCAnMYAAAGfQEAAAQCAnMZAAAGfQIAAAQqkgRyAQAAcBpvFQAACiwVAgUCAygW
AAAKDgRzAQAABm8WAAAGKkorBwIDbxcAAAYDbxIAAAYt8SoGKjoCKBcAAAoCA30DAAAEKjoCKBcA
AAoCA30EAAAEKh4CKBkAAAoqHgIoGgAACioAAAAAAFYIo1QRl2ln4z+KxZ5piD2CPbNLAywf2wnO
SJYr9y1L0W+XGgAAAACxFbA2J8G3RJsafljeliuGesbi3wAAAAB10SMkOrN28+RGR86nNJG457/8
sv3fD11cZJ67MFSpUJzeEjPXkLSlOOz+a+HvU3WQTe72EdAaGgA4bTVOvE0RSbbnsz2VlwA+TdJ4
ozyte1NPyYRlZMUjx1CpHTknD0FTpg4oukVwrBppv995kxrOPWoripK53NGmt2aEMP04VjLXtk+r
Y02bcV3Xed3nPp3aOaPuXmtLDTJVv++VYBiQr9gHCRMwBwD5AgAAAQAAERcKHxCNGAAAASXQCAAA
BCgcAAAKCx8UjRgAAAEl0AkAAAQoHAAACgwfFI0YAAABJdAKAAAEKBwAAAoNHyCNGAAAASXQCwAA
BCgcAAAKEwQfMI0YAAABJdAMAAAEKBwAAAoTBR9AjRgAAAEl0A0AAAQoHAAAChMGF40YAAABExER
ERMHHxSNGAAAASXQDgAABCgcAAAKEwgWEwkrPwNvAgAABhEJjxgAAAEHEQmRKB0AAAosIQIoHgAA
Ch9kchEAAHByXwAAcH4fAAAKFhIAbyAAAAorDREJF1gTCREJB45pMroWEworPwNvBAAABhEKjxgA
AAEIEQqRKB0AAAosIQIoHgAACh9kchEAAHByfwAAcH4fAAAKFhIAbyAAAAorDREKF1gTChEKCI5p
MroWEwsrPwNvBgAABhELjxgAAAEJEQuRKB0AAAosIQIoHgAACh9kchEAAHByqwAAcH4fAAAKFhIA
byAAAAorDRELF1gTCxELCY5pMroWEwwrQANvDAAABhEMjxgAAAERBBEMkSgdAAAKLCECKB4AAAof
ZHIRAABwcs0AAHB+HwAAChYSAG8gAAAKKw4RDBdYEwwRDBEEjmkyuBYTDStAA28OAAAGEQ2PGAAA
AREFEQ2RKB0AAAosIQIoHgAACh9kchEAAHBy8wAAcH4fAAAKFhIAbyAAAAorDhENF1gTDRENEQWO
aTK4FhMOK0ADbxAAAAYRDo8YAAABEQYRDpEoHQAACiwhAigeAAAKH2RyEQAAcHIZAQBwfh8AAAoW
EgBvIAAACisOEQ4XWBMOEQ4RBo5pMrgWEw8rQANvCgAABhEPjxgAAAERBxEPkSgdAAAKLCECKB4A
AAofZHIRAABwcj8BAHB+HwAAChYSAG8gAAAKKw4RDxdYEw8RDxEHjmkyuBYTECs/A28IAAAGERCP
GAAAAREIERCRKB0AAAosIAIoHgAACh9kchEAAHByYQEAcH4fAAAKFhIAbyAAAAoqERAXWBMQERAR
CI5pMrkqHgIoFAAABioeAigXAAAKKgAAABMwAgAtAAAAAgAAEX4FAAAELSBygwEAcNAHAAACKCIA
AApvIwAACnMkAAAKCgaABQAABH4FAAAEKhp+BgAABCoeAoAGAAAEKhp+BwAABCoucyMAAAaABwAA
BCoeAigmAAAKKgC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJjZXMuUmVzb3VyY2VSZWFk
ZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5
VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1bnRpbWVSZXNvdXJjZVNl
dAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAQlNKQgEAAQAAAAAADAAAAHY0LjAuMzAzMTkAAAAABQBs
AAAAzAcAACN+AAA4CAAAMAoAACNTdHJpbmdzAAAAAGgSAAAEAgAAI1VTAGwUAAAQAAAAI0dVSUQA
AAB8FAAA9AEAACNCbG9iAAAAAAAAAAIAAAFXlaIhCQMAAAD6JTMAFgAAAQAAACQAAAAOAAAADgAA
ACQAAAANAAAAJgAAABAAAAAFAAAAAgAAAAMAAAATAAAAFAAAAAcAAAABAAAABQAAAAEAAAAFAAAA
AAAKAAEAAAAAAAYA9QDUAAYAAgHUAAoAIgEbAQ4APgEpARIAdwHUAAYAhgHUAAoAxgO1AwoA9wPi
AwoA0AS2BAoA+wTpBAoAEgXpBAoALwXpBAoATgXpBAoAZwXpBAoAgAXpBAoAmwXpBAoAtgXpBAoA
zwXpBAoACAboBQoAKAboBQoAegYbAQoAgQYbAQYAqgbUAAoA0QYbAQoAGwfoBQoANgcbAQoAcQfo
BQoAgAcbAQoAhgcbARYA7AjDCAoAPgkrCQoAWwkbAQoAYAkbAQoAhAnpBA4AsAmaCQ4AyQmaCQAA
AAABAAAAAAABAAEAAQAQADIAAAAFAAEAAQABABAAPwAAAAkAAQAUAAEAEABNAAAADQADABgAAQAQ
AFkAAAANAAQAGQABABAAYwAAAAwABQAaAAAAEABuAHgADQAFAB4AAAEQAK4AeAARAAcAIgAAAAAA
1gYAAA0ACAAlABMBAABABwAAaQAPACUAEwEAAKkHAABpAA8AJQATAQAA7gcAAGkADwAlABMBAAAf
CAAAaQAPACUAEwEAAFAIAABpAA8AJQAGAE0ALwAGAFkAMwABAI4DSwABAI4DSwARANYDVQARAAME
WQARAEcEdwATAV0HtAATAcYHwAATAdoHwAATAQsIxAATATwIyAATAW0IzAATAYEIwABQIAAAAACG
GJQBEwABAFsgAAAAAIYImgEdAAQAcCAAAAAAhgiiASIABAB5IAAAAACGCLEBHQAEAI4gAAAAAIYI
vwEiAAQAlyAAAAAAhgjUAR0ABACsIAAAAACGCN0BIgAEALUgAAAAAIYI7QEdAAQAyiAAAAAAhgj8
ASIABADTIAAAAACGCBICHQAEAOggAAAAAIYIIQIiAAQA8SAAAAAAhgg3Ah0ABAAGIQAAAACGCEIC
IgAEAA8hAAAAAIYIVAIdAAQAJCEAAAAAhghfAiIABAAtIQAAAACGCHECHQAEAEIhAAAAAIYIfAIi
AAQASyEAAAAAhgCOAiIABABTIQAAAACGAJYCIgAEAFshAAAAAIYYlAE3AAQAeyEAAAAAxgBWAzsA
BACgIQAAAADGAWMDRQAIALMhAAAAAMYBdwNFAAkAtSEAAAAAhhiUAU8ACgDEIQAAAACGGJQBTwAL
ANMhAAAAAMYAngM3AAwA2yEAAAAAxgCpAzcADADMIgAAAADGAHcDRQAMANElAAAAAIYYlAE3AA0A
2SUAAAAAgxiUATcADQDkJQAAAACTCBMEXQANAB0mAAAAAJMIJwRiAA0AJCYAAAAAkwgzBGcADQAs
JgAAAACWCFcEewAOAD8mAAAAAIYYlAE3AA4AMyYAAAAAkRjeCTIBDgAAAAEAawQAAAIAcgQAAAMA
hgQAAAEAkAQAAAIAmAQAAAMAawQAAAQAhgQAAAEAawQAAAEAogQAAAEApgQAAAEApgQAAAEAogQA
AAEAsARJAJQBhQBRAJQBhQBZAJQBhQBhAJQBhQBpAJQBhQBxAJQBhQB5AJQBhQCBAJQBhQCJAJQB
hQCRAJQBhQCZAJQBigChAJQBNwAJAJQBEwAJAGsEjwAJAHIEkwApAGoGlwAJAHMGnQAJAI4CIgAJ
AJYCIgARAJQBNwCpAJIGogARAJkGqQAZAJQBNwC5AJQBNwARAJ4DNwARAKkDNwDJAJQBNwDZAJkH
uADBAJUI0AARAAUJ1QCpABsJ2gDxACEJ3QD5AJQBNwABAXIJBgEBAY0JDwE5AJQBFQEZAZQBIgEh
AJQBNwAuABMAfgEuABsArgEuAGMA1AEuACMArgEuAAsANgEuACsArgEuADMAfgEuADsAtAEuAEMA
rgEuAFsAywHDAMMArwDhANsArwDjAAsBrwAjAdsArwApAisBKQFJAisBKQEBABAAAAAKAAEAFAAA
AAsAAQAgAAAADAABADAAAAANAAEAQAAAAA4A6AAdAQIAAQAHABEACAATAAAAogImAAAApgIrAAAA
sQImAAAAuwIrAAAAzAImAAAA0QIrAAAA3QImAAAA6AIrAAAA+gImAAAABQMrAAAAFwMmAAAAHgMr
AAAALAMmAAAAMwMrAAAAQQMmAAAASAMrAAAAxgNtAAAAPwRyAAAAYwSAAAIAAgADAAIAAwAFAAIA
BAAHAAIABQAJAAIABgALAAIABwANAAIACAAPAAIACQARAAIACgATAAIACwAVAAIADAAXAAIADQAZ
AAIADgAbAAIADwAdAAIAEAAfAAIAEQAhAAIAHwAjAAIAIAAlAAEAIQAlAAIAIgAnAOghAAAIAPgh
AAAJABAiAAAKACgiAAALAEgiAAAMAHgiAAANALgiAAAOAASAAAABAAAAlBQsmwAAAAAAAEYGAAAL
AAAAAAAAAAAAAAABALcAAAAAAAQAAAAAAAAAAAAAAAoAEgEAAAAABAAAAAAAAAAAAAAACgAbAQAA
AAALAAAAAAAAAAAAAAABAFYBAAAAAAsAAAAAAAAAAAAAAAEAnwgAAAAAAAAAAAEAAADlCQAACgAJ
AAsACQAMAAkADQAJAA4ACQAAAAA8TW9kdWxlPgBTQ19ERDQ2N0FFMkFGRUE0Qzg4QjhEQUNERUND
NEI4NEU1Ny5kbGwASW5wdXQwQnVmZmVyAFVzZXJDb21wb25lbnQAQ29ubmVjdGlvbnMAVmFyaWFi
bGVzAFNjcmlwdE1haW4AUmVzb3VyY2VzAFNDX2Y1YjVjODljOTNjZjQ3Y2Q4OWM3ZjQyM2RhNzkx
NTk0LmNzcHJvai5Qcm9wZXJ0aWVzAFNldHRpbmdzAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuVHhTY3Jp
cHQATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUGlwZWxpbmUAU2NyaXB0QnVmZmVyAFNjcmlwdENv
bXBvbmVudABtc2NvcmxpYgBTeXN0ZW0AT2JqZWN0AFN5c3RlbS5Db25maWd1cmF0aW9uAEFwcGxp
Y2F0aW9uU2V0dGluZ3NCYXNlAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuUGlwZWxpbmVIb3N0AFBpcGVs
aW5lQnVmZmVyAE91dHB1dE5hbWVNYXAALmN0b3IAZ2V0X01ENQBnZXRfTUQ1X0lzTnVsbABnZXRf
UmlwZU1EMTYwAGdldF9SaXBlTUQxNjBfSXNOdWxsAGdldF9TSEExAGdldF9TSEExX0lzTnVsbABn
ZXRfQ29sdW1uTnVsbABnZXRfQ29sdW1uTnVsbF9Jc051bGwAZ2V0X0NvbHVtbk5vbmUAZ2V0X0Nv
bHVtbk5vbmVfSXNOdWxsAGdldF9TSEEyNTYAZ2V0X1NIQTI1Nl9Jc051bGwAZ2V0X1NIQTM4NABn
ZXRfU0hBMzg0X0lzTnVsbABnZXRfU0hBNTEyAGdldF9TSEE1MTJfSXNOdWxsAE5leHRSb3cARW5k
T2ZSb3dzZXQATUQ1AE1ENV9Jc051bGwAUmlwZU1EMTYwAFJpcGVNRDE2MF9Jc051bGwAU0hBMQBT
SEExX0lzTnVsbABDb2x1bW5OdWxsAENvbHVtbk51bGxfSXNOdWxsAENvbHVtbk5vbmUAQ29sdW1u
Tm9uZV9Jc051bGwAU0hBMjU2AFNIQTI1Nl9Jc051bGwAU0hBMzg0AFNIQTM4NF9Jc051bGwAU0hB
NTEyAFNIQTUxMl9Jc051bGwAUHJvY2Vzc0lucHV0AElucHV0MF9Qcm9jZXNzSW5wdXQASW5wdXQw
X1Byb2Nlc3NJbnB1dFJvdwBQYXJlbnRDb21wb25lbnQAUHJlRXhlY3V0ZQBQb3N0RXhlY3V0ZQBT
eXN0ZW0uUmVzb3VyY2VzAFJlc291cmNlTWFuYWdlcgByZXNvdXJjZU1hbgBTeXN0ZW0uR2xvYmFs
aXphdGlvbgBDdWx0dXJlSW5mbwByZXNvdXJjZUN1bHR1cmUAZ2V0X1Jlc291cmNlTWFuYWdlcgBn
ZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBDdWx0dXJlAGRlZmF1bHRJbnN0YW5jZQBnZXRfRGVmYXVs
dABEZWZhdWx0AEJ1ZmZlcgBCdWZmZXJDb2x1bW5JbmRleGVzAE91dHB1dE1hcABJbnB1dElEAElu
cHV0TmFtZQBSb3cAQ29tcG9uZW50AHZhbHVlAFN5c3RlbS5SdW50aW1lLlZlcnNpb25pbmcAVGFy
Z2V0RnJhbWV3b3JrQXR0cmlidXRlAFN5c3RlbS5SZWZsZWN0aW9uAEFzc2VtYmx5VGl0bGVBdHRy
aWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25B
dHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0
ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFya0F0dHJpYnV0ZQBB
c3NlbWJseUN1bHR1cmVBdHRyaWJ1dGUAQXNzZW1ibHlWZXJzaW9uQXR0cmlidXRlAFN5c3RlbS5S
dW50aW1lLkNvbXBpbGVyU2VydmljZXMAQ29tcGlsYXRpb25SZWxheGF0aW9uc0F0dHJpYnV0ZQBS
dW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBTQ19ERDQ2N0FFMkFGRUE0Qzg4QjhEQUNERUND
NEI4NEU1NwBHZXRCeXRlcwBJc051bGwAU3RyaW5nAFN0cmluZ0NvbXBhcmlzb24ARXF1YWxzAEdl
dENvbHVtbkluZGV4ZXMAU1NJU1NjcmlwdENvbXBvbmVudEVudHJ5UG9pbnRBdHRyaWJ1dGUAQnl0
ZQA8UHJpdmF0ZUltcGxlbWVudGF0aW9uRGV0YWlscz57MjA5QTU3QTMtRDRBOS00RDUzLTkxOEYt
MzVDMTZEODlBQTQzfQBDb21waWxlckdlbmVyYXRlZEF0dHJpYnV0ZQBWYWx1ZVR5cGUAX19TdGF0
aWNBcnJheUluaXRUeXBlU2l6ZT0xNgAkJG1ldGhvZDB4NjAwMDAxYy0xAFJ1bnRpbWVIZWxwZXJz
AEFycmF5AFJ1bnRpbWVGaWVsZEhhbmRsZQBJbml0aWFsaXplQXJyYXkAX19TdGF0aWNBcnJheUlu
aXRUeXBlU2l6ZT0yMAAkJG1ldGhvZDB4NjAwMDAxYy0yACQkbWV0aG9kMHg2MDAwMDFjLTMAX19T
dGF0aWNBcnJheUluaXRUeXBlU2l6ZT0zMgAkJG1ldGhvZDB4NjAwMDAxYy00AF9fU3RhdGljQXJy
YXlJbml0VHlwZVNpemU9NDgAJCRtZXRob2QweDYwMDAwMWMtNQBfX1N0YXRpY0FycmF5SW5pdFR5
cGVTaXplPTY0ACQkbWV0aG9kMHg2MDAwMDFjLTYAJCRtZXRob2QweDYwMDAwMWMtNwBDb21wYXJl
VG8ATWljcm9zb2Z0LlNxbFNlcnZlci5EVFNQaXBlbGluZVdyYXAATWljcm9zb2Z0LlNxbFNlcnZl
ci5EdHMuUGlwZWxpbmUuV3JhcHBlcgBJRFRTQ29tcG9uZW50TWV0YURhdGExMDAAZ2V0X0NvbXBv
bmVudE1ldGFEYXRhAEVtcHR5AEZpcmVFcnJvcgBTeXN0ZW0uRGlhZ25vc3RpY3MARGVidWdnZXJO
b25Vc2VyQ29kZUF0dHJpYnV0ZQBUeXBlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFu
ZGxlAEFzc2VtYmx5AGdldF9Bc3NlbWJseQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwARWRpdG9yQnJv
d3NhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAC5jY3RvcgBTQ19mNWI1Yzg5Yzkz
Y2Y0N2NkODljN2Y0MjNkYTc5MTU5NC5jc3Byb2ouUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3Vy
Y2VzAAAAD0kAbgBwAHUAdAAgADAAAE1WAGEAbABpAGQAYQB0AGUAIABNAHUAbAB0AGkAcABsAGUA
IABIAGEAcwBoACAAUwBhAGYAZQAgAE4AbwB0ACAAVABoAHIAZQBhAGQAAB9NAEQANQAgAEgAYQBz
AGgAIABpAHMAIABCAEEARAAAK1IAaQBwAGUATQBEADEANgAwACAASABhAHMAaAAgAGkAcwAgAEIA
QQBEAAAhUwBIAEEAMQAgAEgAYQBzAGgAIABpAHMAIABCAEEARAAAJVMASABBADIANQA2ACAASABh
AHMAaAAgAGkAcwAgAEIAQQBEAAAlUwBIAEEAMwA4ADQAIABIAGEAcwBoACAAaQBzACAAQgBBAEQA
ACVTAEgAQQA1ADEAMgAgAEgAYQBzAGgAIABpAHMAIABCAEEARAAAIU4AbwBuAGUAIABIAGEAcwBo
ACAAaQBzACAAQgBBAEQAACFOAHUAbABsACAASABhAHMAaAAgAGkAcwAgAEIAQQBEAAB/UwBDAF8A
ZgA1AGIANQBjADgAOQBjADkAMwBjAGYANAA3AGMAZAA4ADkAYwA3AGYANAAyADMAZABhADcAOQAx
ADUAOQA0AC4AYwBzAHAAcgBvAGoALgBQAHIAbwBwAGUAcgB0AGkAZQBzAC4AUgBlAHMAbwB1AHIA
YwBlAHMAAACjV5ogqdRTTZGPNcFtiapDAAiJhF3NgIDMkQi3elxWGTTgiQkgAwESFR0IEhkEIAAd
BQMgAAIEKAAdBQMoAAIDBhIQAwYSFAMgAAEJIAQBCA4SFRIZBSABARIIAwYSCQUgAQESCQMGEh0D
BhIhBAAAEh0EAAASIQUAAQESIQQIABIdBAgAEiEDBhIgBAAAEiAECAASIAQgAQEOBCABAQgDBhIV
AwYdCAUgAR0FCAQgAQIIBiACAg4RWQUgAR0ICAQBAAAAAwYRKAcAAgEScRF1AwYRLAMGETADBhE0
AwYROAQgAQgFBCAAEnkCBg4KIAYBCA4ODggQAh0HEgIdBR0FHQUdBR0FHQUdBR0FCAgICAgICAgd
BQgAARKAgRGAhQUgABKAiQcgAgEOEoCJBAcBEh0GIAEBEYCRCAEAAgAAAAAAAwAAAUcBABouTkVU
RnJhbWV3b3JrLFZlcnNpb249djQuMAEAVA4URnJhbWV3b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFt
ZXdvcmsgNC8BACpTQ19mNWI1Yzg5YzkzY2Y0N2NkODljN2Y0MjNkYTc5MTU5NC5jc3Byb2oAAAUB
AAAAABYBABFDb3B5cmlnaHQgQCAgMjAxMQAACAEACAAAAAAAHgEAAQBUAhZXcmFwTm9uRXhjZXB0
aW9uVGhyb3dzAQCYPQAAAAAAAAAAAACuPQAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAoD0AAAAA
AAAAAF9Db3JEbGxNYWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEA
EAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABY
QAAA0AMAAAAAAAAAAAAA0AM0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E
7/4AAAEAAAABACyblBQAAAEALJuUFD8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBW
AGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAA
AACwBDADAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAAwDAAABADAAMAAwADAAMAA0
AGIAMAAAAIAAKwABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkAbwBuAAAAAABTAEMAXwBmADUA
YgA1AGMAOAA5AGMAOQAzAGMAZgA0ADcAYwBkADgAOQBjADcAZgA0ADIAMwBkAGEANwA5ADEANQA5
ADQALgBjAHMAcAByAG8AagAAAAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAxAC4A
MAAuADUAMgA2ADgALgAzADkANwAyADQAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEAbQBl
AAAAUwBDAF8ARABEADQANgA3AEEARQAyAEEARgBFAEEANABDADgAOABCADgARABBAEMARABFAEMA
QwA0AEIAOAA0AEUANQA3AC4AZABsAGwAAABIABIAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkAZwBo
AHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIAAgADIAMAAxADEAAAB4ACgAAQBPAHIAaQBnAGkA
bgBhAGwARgBpAGwAZQBuAGEAbQBlAAAAUwBDAF8ARABEADQANgA3AEEARQAyAEEARgBFAEEANABD
ADgAOABCADgARABBAEMARABFAEMAQwA0AEIAOAA0AEUANQA3AC4AZABsAGwAAAB4ACsAAQBQAHIA
bwBkAHUAYwB0AE4AYQBtAGUAAAAAAFMAQwBfAGYANQBiADUAYwA4ADkAYwA5ADMAYwBmADQANwBj
AGQAOAA5AGMANwBmADQAMgAzAGQAYQA3ADkAMQA1ADkANAAuAGMAcwBwAHIAbwBqAAAAAABEAA8A
AQBQAHIAbwBkAHUAYwB0AFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADUAMgA2ADgALgAzADkANwAy
ADQAAAAAAEgADwABAEEAcwBzAGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADUA
MgA2ADgALgAzADkANwAyADQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAAMA9AAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==]]></arrayElement>
                  </arrayElements>
                </property>
                <property
                  dataType="System.String"
                  description="Specifies the name of the Microsoft Visual Studio Tools for Applications project. Project names must be unique within a package."
                  name="VSTAProjectName"
                  typeConverter="NOTBROWSABLE">SC_dd467ae2afea4c88b8dacdecc4b84e57</property>
                <property
                  dataType="System.String"
                  description="Specifies the programming language used by the script."
                  name="ScriptLanguage"
                  typeConverter="Microsoft.SqlServer.VSTAHosting.ScriptingLanguages, Microsoft.SqlServer.VSTAScriptingLib, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91">CSharp</property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read-only variables."
                  name="ReadOnlyVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="Specifies a comma-separated list of read/write variables."
                  name="ReadWriteVariables"
                  UITypeEditor="Microsoft.DataTransformationServices.Controls.ScriptUIWriteableVariablePickerDlg, Microsoft.DataTransformationServices.Controls, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91"></property>
                <property
                  dataType="System.String"
                  description="List of breakpoints present on the script."
                  isArray="true"
                  name="BreakpointCollection"
                  typeConverter="NOTBROWSABLE">
                  <arrayElements
                    arrayElementCount="0" />
                </property>
                <property
                  dataType="System.String"
                  name="UserComponentTypeName">Microsoft.SqlServer.Dts.Pipeline.ScriptComponentHost, Microsoft.SqlServer.TxScript, Version=11.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91</property>
                <property
                  dataType="System.String"
                  description="Checksum to match component metedata against compiled codes."
                  name="MetadataChecksum"
                  typeConverter="NOTBROWSABLE">9e2b61ae61a6a7c03607832565100ed9</property>
              </properties>
              <inputs>
                <input
                  refId="Package\Data Flow Task\Script Test UnSafe Not Threaded.Inputs[Input 0]"
                  hasSideEffects="true"
                  name="Input 0">
                  <inputColumns>
                    <inputColumn
                      refId="Package\Data Flow Task\Script Test UnSafe Not Threaded.Inputs[Input 0].Columns[MD5]"
                      cachedDataType="bytes"
                      cachedLength="16"
                      cachedName="MD5"
                      lineageId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Outputs[HashedOutput].Columns[MD5]"
                      name="MD5" />
                    <inputColumn
                      refId="Package\Data Flow Task\Script Test UnSafe Not Threaded.Inputs[Input 0].Columns[RipeMD160]"
                      cachedDataType="bytes"
                      cachedLength="20"
                      cachedName="RipeMD160"
                      lineageId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Outputs[HashedOutput].Columns[RipeMD160]"
                      name="RipeMD160" />
                    <inputColumn
                      refId="Package\Data Flow Task\Script Test UnSafe Not Threaded.Inputs[Input 0].Columns[SHA1]"
                      cachedDataType="bytes"
                      cachedLength="20"
                      cachedName="SHA1"
                      lineageId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Outputs[HashedOutput].Columns[SHA1]"
                      name="SHA1" />
                    <inputColumn
                      refId="Package\Data Flow Task\Script Test UnSafe Not Threaded.Inputs[Input 0].Columns[ColumnNull]"
                      cachedDataType="bytes"
                      cachedLength="20"
                      cachedName="Null"
                      lineageId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Outputs[HashedOutput].Columns[Null]"
                      name="ColumnNull" />
                    <inputColumn
                      refId="Package\Data Flow Task\Script Test UnSafe Not Threaded.Inputs[Input 0].Columns[ColumnNone]"
                      cachedDataType="bytes"
                      cachedLength="16"
                      cachedName="None"
                      lineageId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Outputs[HashedOutput].Columns[None]"
                      name="ColumnNone" />
                    <inputColumn
                      refId="Package\Data Flow Task\Script Test UnSafe Not Threaded.Inputs[Input 0].Columns[SHA256]"
                      cachedDataType="bytes"
                      cachedLength="32"
                      cachedName="SHA256"
                      lineageId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Outputs[HashedOutput].Columns[SHA256]"
                      name="SHA256" />
                    <inputColumn
                      refId="Package\Data Flow Task\Script Test UnSafe Not Threaded.Inputs[Input 0].Columns[SHA384]"
                      cachedDataType="bytes"
                      cachedLength="48"
                      cachedName="SHA384"
                      lineageId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Outputs[HashedOutput].Columns[SHA384]"
                      name="SHA384" />
                    <inputColumn
                      refId="Package\Data Flow Task\Script Test UnSafe Not Threaded.Inputs[Input 0].Columns[SHA512]"
                      cachedDataType="bytes"
                      cachedLength="64"
                      cachedName="SHA512"
                      lineageId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Outputs[HashedOutput].Columns[SHA512]"
                      name="SHA512" />
                  </inputColumns>
                  <externalMetadataColumns />
                </input>
              </inputs>
            </component>
          </components>
          <paths>
            <path
              refId="Package\Data Flow Task.Paths[GeneratedData]"
              endId="Package\Data Flow Task\Multicast.Inputs[Multicast Input 1]"
              name="GeneratedData"
              startId="Package\Data Flow Task\Generate Every Data Type.Outputs[GeneratedData]" />
            <path
              refId="Package\Data Flow Task.Paths[HashedOutput2]"
              endId="Package\Data Flow Task\Script Test Safe On.Inputs[Input 0]"
              name="HashedOutput"
              startId="Package\Data Flow Task\Multiple Hash Safe On.Outputs[HashedOutput]" />
            <path
              refId="Package\Data Flow Task.Paths[HashedOutput3]"
              endId="Package\Data Flow Task\Script Test UnSafe Not Threaded.Inputs[Input 0]"
              name="HashedOutput"
              startId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Outputs[HashedOutput]" />
            <path
              refId="Package\Data Flow Task.Paths[HashedOutput]"
              endId="Package\Data Flow Task\Script Test Safe Not Thread.Inputs[Input 0]"
              name="HashedOutput"
              startId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Outputs[HashedOutput]" />
            <path
              refId="Package\Data Flow Task.Paths[HashedOutput1]"
              endId="Package\Data Flow Task\Script Test Safe Auto.Inputs[Input 0]"
              name="HashedOutput"
              startId="Package\Data Flow Task\Multiple Hash Safe Auto.Outputs[HashedOutput]" />
            <path
              refId="Package\Data Flow Task.Paths[Multicast Output 1]"
              endId="Package\Data Flow Task\Multiple Hash Safe Not Thread.Inputs[Input]"
              name="Multicast Output 1"
              startId="Package\Data Flow Task\Multicast.Outputs[Multicast Output 1]" />
            <path
              refId="Package\Data Flow Task.Paths[Multicast Output 2]"
              endId="Package\Data Flow Task\Multiple Hash Safe On.Inputs[Input]"
              name="Multicast Output 2"
              startId="Package\Data Flow Task\Multicast.Outputs[Multicast Output 2]" />
            <path
              refId="Package\Data Flow Task.Paths[Multicast Output 3]"
              endId="Package\Data Flow Task\Multiple Hash Unsafe Not Thread.Inputs[Input]"
              name="Multicast Output 3"
              startId="Package\Data Flow Task\Multicast.Outputs[Multicast Output 3]" />
            <path
              refId="Package\Data Flow Task.Paths[Multicast Output 4]"
              endId="Package\Data Flow Task\Multiple Hash Safe Auto.Inputs[Input]"
              name="Multicast Output 4"
              startId="Package\Data Flow Task\Multicast.Outputs[Multicast Output 4]" />
          </paths>
        </pipeline>
      </DTS:ObjectData>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql11">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="4" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph">
        <NodeLayout
          Size="136,44"
          Id="Package\Data Flow Task"
          TopLeft="5.5,5.5" />
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Data Flow Task">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="136,44"
          Id="Package\Data Flow Task\Multiple Hash Safe Auto"
          TopLeft="160.141509433962,168.820754716981" />
        <NodeLayout
          Size="136,44"
          Id="Package\Data Flow Task\Multiple Hash Safe On"
          TopLeft="469.424528301887,168.820754716981" />
        <NodeLayout
          Size="136,44"
          Id="Package\Data Flow Task\Multiple Hash Unsafe Not Thread"
          TopLeft="314.783018867925,168.820754716981" />
        <NodeLayout
          Size="136,44"
          Id="Package\Data Flow Task\Script Test UnSafe Not Threaded"
          TopLeft="321.990566037736,268.179245283019" />
        <NodeLayout
          Size="136,44"
          Id="Package\Data Flow Task\Multicast"
          TopLeft="237.462264150943,87.1603773584906" />
        <NodeLayout
          Size="136,44"
          Id="Package\Data Flow Task\Script Test Safe Not Thread"
          TopLeft="5.68867924528303,266.292452830189" />
        <NodeLayout
          Size="136,44"
          Id="Package\Data Flow Task\Script Test Safe Auto"
          TopLeft="174.216981132075,260.179245283019" />
        <NodeLayout
          Size="136,44"
          Id="Package\Data Flow Task\Multiple Hash Safe Not Thread"
          TopLeft="5.5,168.820754716981" />
        <NodeLayout
          Size="136,44"
          Id="Package\Data Flow Task\Generate Every Data Type"
          TopLeft="237.462264150943,5.5" />
        <NodeLayout
          Size="136,44"
          Id="Package\Data Flow Task\Script Test Safe On"
          TopLeft="474.745283018868,264.179245283019" />
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[HashedOutput2]"
          TopLeft="537.311320754717,212.745283018868">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="5.32075471698124,51.4339622641509"
              Start="0,0"
              End="5.32075471698124,43.9339622641509">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,25.6981132075472" />
                  <mssgle:LineSegment
                    End="5.32075471698124,25.6981132075472" />
                  <mssgle:LineSegment
                    End="5.32075471698124,43.9339622641509" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[HashedOutput1]"
          TopLeft="228.028301886792,212.745283018868">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="14.0754716981132,47.4339622641509"
              Start="0,0"
              End="14.0754716981132,39.9339622641509">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.6981132075472" />
                  <mssgle:LineSegment
                    End="14.0754716981132,23.6981132075472" />
                  <mssgle:LineSegment
                    End="14.0754716981132,39.9339622641509" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[HashedOutput]"
          TopLeft="73.3867924528302,212.745283018868">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0.188679245283026,53.5471698113207"
              Start="0,0"
              End="0.188679245283026,46.0471698113207">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,26.7547169811321" />
                  <mssgle:LineSegment
                    End="0.188679245283026,26.7547169811321" />
                  <mssgle:LineSegment
                    End="0.188679245283026,46.0471698113207" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[GeneratedData]"
          TopLeft="305.349056603774,49.4245283018868">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,37.7358490566038"
              Start="0,0"
              End="0,30.2358490566038">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,30.2358490566038" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Multicast Output 4]"
          TopLeft="284.594339622641,131.084905660377">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-56.566037735849,37.7358490566038"
              Start="0,0"
              End="-56.566037735849,30.2358490566038">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.8679245283019" />
                  <mssgle:LineSegment
                    End="-56.566037735849,18.8679245283019" />
                  <mssgle:LineSegment
                    End="-56.566037735849,30.2358490566038" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Multicast Output 3]"
          TopLeft="326.103773584906,131.084905660377">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="56.5660377358491,37.7358490566038"
              Start="0,0"
              End="56.5660377358491,30.2358490566038">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,18.8679245283019" />
                  <mssgle:LineSegment
                    End="56.5660377358491,18.8679245283019" />
                  <mssgle:LineSegment
                    End="56.5660377358491,30.2358490566038" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Multicast Output 2]"
          TopLeft="346.858490566038,131.084905660377">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="190.452830188679,37.7358490566038"
              Start="0,0"
              End="190.452830188679,30.2358490566038">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,12.5660377358491" />
                  <mssgle:LineSegment
                    End="190.452830188679,12.5660377358491" />
                  <mssgle:LineSegment
                    End="190.452830188679,30.2358490566038" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[Multicast Output 1]"
          TopLeft="263.839622641509,131.084905660377">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-190.452830188679,37.7358490566038"
              Start="0,0"
              End="-190.452830188679,30.2358490566038">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,12.5660377358491" />
                  <mssgle:LineSegment
                    End="-190.452830188679,12.5660377358491" />
                  <mssgle:LineSegment
                    End="-190.452830188679,30.2358490566038" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Data Flow Task.Paths[HashedOutput3]"
          TopLeft="382.669811320755,212.745283018868">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="7.20754716981133,55.4339622641509"
              Start="0,0"
              End="7.20754716981133,47.9339622641509">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,27.6981132075472" />
                  <mssgle:LineSegment
                    End="7.20754716981133,27.6981132075472" />
                  <mssgle:LineSegment
                    End="7.20754716981133,47.9339622641509" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>